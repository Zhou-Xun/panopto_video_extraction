1
00:00:10,040 --> 00:00:14,280
In this video, we continue
learning how to clean our dataset.

2
00:00:14,280 --> 00:00:18,740
In particular, after watching this video,
you will be able to use PROC FREQ,

3
00:00:18,740 --> 00:00:22,324
PROC PRINT and PROC UNIVARIATE,
to identify inappropriate or

4
00:00:22,324 --> 00:00:26,030
uninstall values.

5
00:00:26,030 --> 00:00:30,145
If you browse one of the readings
assigned to this section, Cody,

6
00:00:30,145 --> 00:00:33,560
proposes a few different strategies.

7
00:00:33,560 --> 00:00:36,581
PROC FREQ, Data step,
User Defined Formats,

8
00:00:36,581 --> 00:00:39,238
PROC PRINT with WHERE, WHAT statement.

9
00:00:39,238 --> 00:00:44,154
But we're going to focus exclusively
on using PROC FREQ and PROC PRINT,

10
00:00:44,154 --> 00:00:49,500
because those are the most
straightforward procedures.

11
00:00:49,500 --> 00:00:55,212
Now, if you use PROC FREQ, in any of
our categorical variables, for example,

12
00:00:55,212 --> 00:01:00,770
overweight, that will allow us to
identify if there are any unusual values.

13
00:01:00,770 --> 00:01:05,107
Overweight is coded as 0, NO,
and 1, YES, so any other value,

14
00:01:05,107 --> 00:01:11,610
that we find in the table,
should be a mistake or miscoding.

15
00:01:11,610 --> 00:01:16,860
We can see in our tables that most
values are 0 or 1, as it should be.

16
00:01:16,860 --> 00:01:18,646
But, is 10 a valid value?

17
00:01:18,646 --> 00:01:22,040
Clearly not, and this is a mistake.

18
00:01:22,040 --> 00:01:23,394
Is 9 a valid value?

19
00:01:23,394 --> 00:01:28,179
Well, 9 is a common code,
when entering data to call missing values.

20
00:01:28,179 --> 00:01:31,168
So in this situation 9 could be valid, but

21
00:01:31,168 --> 00:01:38,760
we should record it as something that SAS
understands as missing, which is adult.

22
00:01:38,760 --> 00:01:43,248
If you have continuous variables,
you can use PROC PRINT,

23
00:01:43,248 --> 00:01:45,777
to identify values out of range.

24
00:01:45,777 --> 00:01:50,836
For example, if the age of your
population should be within 18 and

25
00:01:50,836 --> 00:01:56,170
99 years old,
anything outside that range is a mistake.

26
00:01:56,170 --> 00:01:59,717
Note, in this code,
that we're adding the ID statement.

27
00:01:59,717 --> 00:02:04,691
In this way, instead of getting any
Salvation number, which is meaningless,

28
00:02:04,691 --> 00:02:08,938
because it depends on the position
of the Salvation in the data set.

29
00:02:08,938 --> 00:02:13,321
We actually get the ID number, that
way you do not have to include your ID

30
00:02:13,321 --> 00:02:18,440
valuable in the list of variables,
but either way, is fine.

31
00:02:18,440 --> 00:02:23,586
So when we run this PROC PRINT,
we get that, ID 56 is 7 years old, which

32
00:02:23,586 --> 00:02:30,990
is clearly a mistake, because it's out of
the age range of our study population.

33
00:02:30,990 --> 00:02:35,534
When you don't have a clear range,
you can always use PROC UNIVARIATE to

34
00:02:35,534 --> 00:02:40,070
identify extreme values that
may be implausible values.

35
00:02:40,070 --> 00:02:45,302
However, be careful, because errors and
outliers are different on things.

36
00:02:45,302 --> 00:02:48,377
For example,
if you eat papaya five times a day,

37
00:02:48,377 --> 00:02:51,080
papaya has a lot of beta-cryptoxanthin.

38
00:02:51,080 --> 00:02:56,029
So then your plasma beta-cryptoxanthin
is going to really, really be huge.

39
00:02:56,029 --> 00:03:00,961
So you will look like an outlier, but
that's not an error, just that means

40
00:03:00,961 --> 00:03:05,526
that you are a little weird,
because you eat a lot of papaya, right?

41
00:03:05,526 --> 00:03:10,291
So for other variables, particularly
biological variables, in which we know

42
00:03:10,291 --> 00:03:15,282
what is plausible or not, it can be much
easier to identify inappropriate values.

43
00:03:15,282 --> 00:03:19,835
For example, we cannot expect
anyone to have a height of 10 feet.

44
00:03:19,835 --> 00:03:24,823
So in summary, we learn how to check for
inappropriate,unusual values,

45
00:03:24,823 --> 00:03:29,250
using PROC FREQ,
PROC PRINT and PROC UNIVARIATE.

46
00:03:29,250 --> 00:03:32,484
In the next video,
we will continue cleaning our data set by

47
00:03:32,484 --> 00:03:36,491
checking the consistency
of related variables.

