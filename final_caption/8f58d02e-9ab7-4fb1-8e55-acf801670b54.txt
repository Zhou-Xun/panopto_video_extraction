1
00:00:08,480 --> 00:00:11,180
Hello. My name is Alecia James,

2
00:00:11,180 --> 00:00:24,230
and this session today is titled Introduction to R. I am a secondary DrPH student at SUNY Downstate School of Public Health in Brooklyn, New York.

3
00:00:24,230 --> 00:00:30,050
So what you're looking at right now is the art studio interface.

4
00:00:30,050 --> 00:00:40,640
And just a quick overview of what is are is a program in language and software environment that is used for statistical computing.

5
00:00:40,640 --> 00:00:47,360
It's free and open source. It works on most operating systems, including Windows and Mac.

6
00:00:47,360 --> 00:00:52,820
You can download our at our Dasch Project dot org.

7
00:00:52,820 --> 00:00:57,680
And to make are more functional, we use our studio.

8
00:00:57,680 --> 00:01:03,060
And this is the site where you can download our studio.

9
00:01:03,060 --> 00:01:09,890
OK, so today I'll start off with an overview of our studio environment.

10
00:01:09,890 --> 00:01:19,730
And it's set up with your options that this up and I'll show you the various file types.

11
00:01:19,730 --> 00:01:29,900
So this this is your menu section right here. If I go to file, I can start a new file and I'll be doing it our script later on.

12
00:01:29,900 --> 00:01:39,530
And below that we have the console and the console shows is just the outputs of the codes that you have executed.

13
00:01:39,530 --> 00:01:43,940
So the levels of that at the bottom, you have a section that shows you the files.

14
00:01:43,940 --> 00:01:47,960
So you can from here, you can do the files on your local computer.

15
00:01:47,960 --> 00:01:55,820
You can also see the plots if you have generated any plots and you can see the packages that are installed on your computer.

16
00:01:55,820 --> 00:02:02,720
I'll go over packages in more detail later on. So what we're going to do is to start from a blank slate.

17
00:02:02,720 --> 00:02:10,910
We're going to create a R script. I just go to file new file and then our script for the most parts,

18
00:02:10,910 --> 00:02:17,540
which are the menu options don't get used frequently because everything is done by code.

19
00:02:17,540 --> 00:02:22,640
So let's see what I have on my agenda.

20
00:02:22,640 --> 00:02:29,060
I will show you how to install packages. But prior to that, there is another section.

21
00:02:29,060 --> 00:02:33,150
And right here I'm looking at the environments. Is that the top?

22
00:02:33,150 --> 00:02:39,910
Right. And it shows you the objects that you are working with.

23
00:02:39,910 --> 00:02:44,170
And there is this section that shows you the history as well.

24
00:02:44,170 --> 00:02:55,900
Right. So I'll show you what I mean. If I click on that, it will basically show the recent operations that I've done.

25
00:02:55,900 --> 00:03:00,840
OK, so let's learn how to install a package.

26
00:03:00,840 --> 00:03:15,820
So let's do this. And. If you notice, I started off with no sign, and it basically tells are two comments out this.

27
00:03:15,820 --> 00:03:19,750
This is not going to be read by ah. And there are different ways to do this.

28
00:03:19,750 --> 00:03:27,880
I can click on packages, then click on install, then I can write the name of the package that I need after write in the name of the package.

29
00:03:27,880 --> 00:03:33,760
It is click on install right here and it gets installed if various a package by that name.

30
00:03:33,760 --> 00:03:41,790
Another way to do this is to use the function. Install. Dot packages and.

31
00:03:41,790 --> 00:03:46,840
In the branca's, I basically enter in quotation marks the name of the package I need,

32
00:03:46,840 --> 00:03:51,740
so if I need to install a package called Mosaic, I would enter it that way.

33
00:03:51,740 --> 00:03:58,070
I can install multiple packages by using a comma and then enter in the name of my other package.

34
00:03:58,070 --> 00:04:04,820
But to run this operation, I can when my cursor is at the end of the code,

35
00:04:04,820 --> 00:04:11,120
I can click on Run or I can use command and enter or command return on my keyboard.

36
00:04:11,120 --> 00:04:20,200
So that's how we install a package. So the next thing we're gonna do is to learn how to set for working directory.

37
00:04:20,200 --> 00:04:26,960
And so let's do that, said work in the rectory.

38
00:04:26,960 --> 00:04:33,650
Now, what is your working directory? A working director is pretty much the place on your local computer that your saints are.

39
00:04:33,650 --> 00:04:37,790
This is where my files are stored. This is where you would retrieve them.

40
00:04:37,790 --> 00:04:41,450
And this is where I want you to save my files. Right.

41
00:04:41,450 --> 00:04:48,350
So this section right here, initially I stated that you could view the files that are on your computer here.

42
00:04:48,350 --> 00:04:54,650
So on my desktop, you're looking at my desktop right now because it stays home desktop.

43
00:04:54,650 --> 00:04:59,300
I have a folder called F p h LP.

44
00:04:59,300 --> 00:05:05,300
So I'm going to set that as my working directory. And to do that and ease way, this this isn't the only way.

45
00:05:05,300 --> 00:05:09,830
So I'm going to go to Moore and click on Set as a working directory.

46
00:05:09,830 --> 00:05:15,320
And this is a line of code essentially that are users that has been executed to

47
00:05:15,320 --> 00:05:20,070
set my working directory so I can it's already it has already been executed,

48
00:05:20,070 --> 00:05:28,550
but I still copy and paste it up here just just so you can see that this is actually the file pass on my computer.

49
00:05:28,550 --> 00:05:37,420
And I'm saying on my desktop, this is the name of the folder and you'll see how this is sort of more useful later on.

50
00:05:37,420 --> 00:05:42,410
Why it's essential, why it's important to set your working directory when you're starting off.

51
00:05:42,410 --> 00:05:49,760
Now, another thing that I can do is show you how to read in a a file, an Excel file.

52
00:05:49,760 --> 00:05:56,060
So we're going to read it and actually is the C S.B file that we're going to read in.

53
00:05:56,060 --> 00:06:02,830
So one moulins. Now, the file that amusing.

54
00:06:02,830 --> 00:06:07,450
It's in this folder right here. It's in my FP age of people there.

55
00:06:07,450 --> 00:06:13,270
It's called inferential statistics. So because I'll be doing a few operations with that.

56
00:06:13,270 --> 00:06:20,500
I'm going to call when I install when I import it, I'm going to call it Scorse.

57
00:06:20,500 --> 00:06:24,820
So score is is the name of the object, whatever I'm reading and I'm going to assign it,

58
00:06:24,820 --> 00:06:29,740
someone objects cause cause what I just entered here the less than and I.

59
00:06:29,740 --> 00:06:40,240
This is known as the assignment operator. So anything that's to the right of facts will be assigned to what it scores or whatever objects I have here.

60
00:06:40,240 --> 00:06:45,220
I'm going to use a function called Read Dot CSB. So we're going to do that.

61
00:06:45,220 --> 00:06:50,040
And now I'm going to enter the name of the file that I want to read in.

62
00:06:50,040 --> 00:07:01,020
And it's inferential statistics. Just enter that in quotes. That's C.

63
00:07:01,020 --> 00:07:05,400
S. Make sure it's spelled correctly. All right.

64
00:07:05,400 --> 00:07:13,650
So because I have already set my working directory, I don't have to enter the full file path of my file.

65
00:07:13,650 --> 00:07:18,260
I can just literally enter the filing and then I can read this.

66
00:07:18,260 --> 00:07:25,410
And so. All right. The console tells me that it has been read and there are no errors.

67
00:07:25,410 --> 00:07:30,030
I can click on this and it shows me what my dataset looks like.

68
00:07:30,030 --> 00:07:37,320
And I actually use this same data sets in another presentation that I did, quantitative research basics.

69
00:07:37,320 --> 00:07:43,380
But we had two variables, test scores and another variable called satisfactory.

70
00:07:43,380 --> 00:07:48,270
And these are the scores of eighth graders in the state of Pennsylvania.

71
00:07:48,270 --> 00:07:55,980
So let's go back to our main file. This is our script and let's see what we have next.

72
00:07:55,980 --> 00:08:00,300
So we read in or data sets we were going to load in a library.

73
00:08:00,300 --> 00:08:11,270
All right. So what's that? Hey.

74
00:08:11,270 --> 00:08:20,870
The library that I'll be loading in is called Deep Plier, and it gives you basically comes with a package is called De Plier.

75
00:08:20,870 --> 00:08:26,900
But to access the package, you have to request it via a library. And that is the function that you use.

76
00:08:26,900 --> 00:08:36,040
And I didn't go into some detail about packages earlier on, but it's very essentially extensions to what comes with the base.

77
00:08:36,040 --> 00:08:43,970
Ah. So it's essentially a set of codes that allow you to do different operations that you don't.

78
00:08:43,970 --> 00:08:49,070
That's not that you're able to do with the base or because it doesn't have those functionalities.

79
00:08:49,070 --> 00:08:53,960
So the deep lya package, it has already been installed.

80
00:08:53,960 --> 00:08:57,980
But this is how we request the functions by loading the library.

81
00:08:57,980 --> 00:09:08,670
That's called zie player. OK, so the next thing I have is using ah as a calculator.

82
00:09:08,670 --> 00:09:16,470
And you can just do, you know, arithmetic on Vasso, three times five is going to tell me who's going to give me fifteen, right?

83
00:09:16,470 --> 00:09:26,370
Because we're using this as a calculator. So in addition to being a statistical software, you know, robust, that statistical tool,

84
00:09:26,370 --> 00:09:32,490
we can do, you know, different functions, just like you're using a calculator.

85
00:09:32,490 --> 00:09:37,770
I can find the square root of, say, twenty five.

86
00:09:37,770 --> 00:09:52,440
And it tells me that the square root is five. All right. So we can also use the help function because our has a lots of packages and functions.

87
00:09:52,440 --> 00:10:01,380
So it's essentially equivalent of the help menu that you will find in all the software tools are in general anything that you're using.

88
00:10:01,380 --> 00:10:05,100
But let's say we want to find out more about the square with function.

89
00:10:05,100 --> 00:10:12,840
We would use a question mark and then square roots or we can use help and then square root.

90
00:10:12,840 --> 00:10:20,640
Right. And so what we're requesting there and we can again, there are two different ways to execute our codes.

91
00:10:20,640 --> 00:10:29,340
Because this is essentially a line of code here. We can just click on Run and it's going to give me the documentation on the right.

92
00:10:29,340 --> 00:10:35,030
And it tells me, oh, it's a mathematical function. And it actually shows you how to use it.

93
00:10:35,030 --> 00:10:39,240
It's you would enter a square root and x you enter your argument there.

94
00:10:39,240 --> 00:10:49,720
So that's a cool function. And your packages come with documentation as well that you can access via the help function.

95
00:10:49,720 --> 00:10:57,970
OK, great. So basically, that was what I wanted to show you for the first segment.

96
00:10:57,970 --> 00:11:02,350
Right. So let's take a quick recap of what we did.

97
00:11:02,350 --> 00:11:08,510
We learn how to install packages, how to set or working directory, how to read in a file.

98
00:11:08,510 --> 00:11:12,850
Very different kinds of files that you would use in your our student environment.

99
00:11:12,850 --> 00:11:19,150
This is just showing you how to read and a C as file because GSB files are commonly commonly used.

100
00:11:19,150 --> 00:11:24,910
You can also read in Excel files. Right. You obviously use a different function right here.

101
00:11:24,910 --> 00:11:30,250
This is how you load a library. You enter the library function. You use R as a calculator.

102
00:11:30,250 --> 00:11:33,850
And this is how you access the help documentation.

103
00:11:33,850 --> 00:11:50,160
So in the next segment, we will do data cleanin and data manipulation and you will see more of how we use are to basically access and analyze data.

