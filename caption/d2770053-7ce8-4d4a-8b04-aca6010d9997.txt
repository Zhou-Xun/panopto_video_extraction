1
00:00:09,230 --> 00:00:13,215
Now that we know the
basics of SAS programming,

2
00:00:13,215 --> 00:00:14,340
let's start by applying

3
00:00:14,340 --> 00:00:16,410
that knowledge to
clean a dataset.

4
00:00:16,410 --> 00:00:19,185
As you may expect, no matter how

5
00:00:19,185 --> 00:00:21,960
careful you are when collecting
and entering your data,

6
00:00:21,960 --> 00:00:25,065
you will always have some
errors in your dataset.

7
00:00:25,065 --> 00:00:26,820
After watching this video,

8
00:00:26,820 --> 00:00:29,220
you will be able to describe
the basic rules for

9
00:00:29,220 --> 00:00:31,470
data cleaning and
you will use block

10
00:00:31,470 --> 00:00:34,970
contents to check the
contents of a dataset.

11
00:00:34,970 --> 00:00:38,960
I wish I could tell
you that there

12
00:00:38,960 --> 00:00:42,530
is this magic procedure
in SAS that will

13
00:00:42,530 --> 00:00:46,010
take a really dirty
dataset and convert it

14
00:00:46,010 --> 00:00:50,220
automatically in a clean
dataset, something like that.

15
00:00:50,220 --> 00:00:53,535
I wish I could tell
you but unfortunately,

16
00:00:53,535 --> 00:00:56,340
the truth is that cleaning

17
00:00:56,340 --> 00:00:59,225
a dataset can be a
really tedious process.

18
00:00:59,225 --> 00:01:01,190
So welcome Cinderellas.

19
00:01:01,190 --> 00:01:03,995
Let's start with
some basic rules.

20
00:01:03,995 --> 00:01:06,620
These basic rules are taken from

21
00:01:06,620 --> 00:01:08,710
one of your readings
and they say,

22
00:01:08,710 --> 00:01:13,430
the data is always dirtier
than you thought it was.

23
00:01:13,430 --> 00:01:16,940
No matter if people tell
you that the data is clean,

24
00:01:16,940 --> 00:01:19,865
the data is never
absolutely clean.

25
00:01:19,865 --> 00:01:22,625
New problems will
always come to light

26
00:01:22,625 --> 00:01:25,280
once the obvious ones
have been solved.

27
00:01:25,280 --> 00:01:28,340
This is sometimes like
the tip of the iceberg.

28
00:01:28,340 --> 00:01:30,410
Once you solve a small problem,

29
00:01:30,410 --> 00:01:33,940
then you can start digging
into even bigger problems.

30
00:01:33,940 --> 00:01:35,720
Finally, data cleaning is

31
00:01:35,720 --> 00:01:37,955
an ongoing process
that never stops.

32
00:01:37,955 --> 00:01:40,190
Datasets are usually large with

33
00:01:40,190 --> 00:01:43,160
thousands of observations
and thousands of variables.

34
00:01:43,160 --> 00:01:45,680
So it may be impossible
to clean it completely at

35
00:01:45,680 --> 00:01:49,390
once and many cleaning
iterations will be needed.

36
00:01:49,390 --> 00:01:51,725
The first thing we're going to do

37
00:01:51,725 --> 00:01:53,800
is to check for completeness.

38
00:01:53,800 --> 00:01:57,015
Do I have all the datasets
I'm supposed to have?

39
00:01:57,015 --> 00:02:00,050
Data from larger studies
are readily collected in

40
00:02:00,050 --> 00:02:01,820
one unique dataset and

41
00:02:01,820 --> 00:02:03,500
often different datasets are used

42
00:02:03,500 --> 00:02:05,375
for different type
of collecting data.

43
00:02:05,375 --> 00:02:08,345
For example, in the health
and retirement study,

44
00:02:08,345 --> 00:02:11,180
if you want to study the
association of let's say

45
00:02:11,180 --> 00:02:15,515
organic food consumption with
inflammatory biomarkers,

46
00:02:15,515 --> 00:02:18,800
then you will need for
sure the dataset that has

47
00:02:18,800 --> 00:02:20,750
the dietary data
and then you will

48
00:02:20,750 --> 00:02:22,970
need the dataset that
has the biomarkers,

49
00:02:22,970 --> 00:02:24,595
on top of many others.

50
00:02:24,595 --> 00:02:26,720
So the first step is to make sure

51
00:02:26,720 --> 00:02:29,195
that you have all the
datasets that you need.

52
00:02:29,195 --> 00:02:30,950
In a similar way,
you will have to

53
00:02:30,950 --> 00:02:32,810
check every dataset to make

54
00:02:32,810 --> 00:02:35,075
sure that you have
all the variables

55
00:02:35,075 --> 00:02:36,815
that you are interested in.

56
00:02:36,815 --> 00:02:39,155
Finally, you will have
to check that you have

57
00:02:39,155 --> 00:02:40,520
all the subjects or

58
00:02:40,520 --> 00:02:43,850
observations that you
are supposed to have.

59
00:02:43,850 --> 00:02:47,265
How do I check the
contents of a dataset?

60
00:02:47,265 --> 00:02:49,519
Now, you know from
previous presentations

61
00:02:49,519 --> 00:02:52,045
that you can use proc contents.

62
00:02:52,045 --> 00:02:54,120
If I run proc contents,

63
00:02:54,120 --> 00:02:56,084
and this is the syntax,

64
00:02:56,084 --> 00:02:57,620
you can ignore most of

65
00:02:57,620 --> 00:02:59,030
the information
that SAS gives you,

66
00:02:59,030 --> 00:03:00,095
as I told you before,

67
00:03:00,095 --> 00:03:01,190
but there are a couple of things

68
00:03:01,190 --> 00:03:02,675
that you have to pay attention.

69
00:03:02,675 --> 00:03:04,800
One is the number
of observations,

70
00:03:04,800 --> 00:03:06,170
because that will help you to

71
00:03:06,170 --> 00:03:08,330
decide if your
dataset is complete.

72
00:03:08,330 --> 00:03:12,070
For example, here my dataset
has 100 observations.

73
00:03:12,070 --> 00:03:16,460
By the way, this is one of
those kind of like all not

74
00:03:16,460 --> 00:03:18,560
nicely formatted
results from SAS that I

75
00:03:18,560 --> 00:03:20,780
told you I was going to
show you from time to time,

76
00:03:20,780 --> 00:03:23,605
so you get used to
that just in case.

77
00:03:23,605 --> 00:03:26,120
The other thing that you
have to pay attention

78
00:03:26,120 --> 00:03:28,219
from the output is the
list of variables.

79
00:03:28,219 --> 00:03:30,185
SAS we'll give you a list of

80
00:03:30,185 --> 00:03:32,585
all the variables in
alphabetical order,

81
00:03:32,585 --> 00:03:34,355
reporting the variable type,

82
00:03:34,355 --> 00:03:37,520
length, format,
informat, and labels.

83
00:03:37,520 --> 00:03:39,550
At this point, the
most important thing

84
00:03:39,550 --> 00:03:40,880
is to focus on the label,

85
00:03:40,880 --> 00:03:42,530
so you can recognize if you

86
00:03:42,530 --> 00:03:44,600
have all the variables
that you need.

87
00:03:44,600 --> 00:03:48,340
For example, I have
BMI, age, etc.

88
00:03:48,340 --> 00:03:50,240
Remember that by default,

89
00:03:50,240 --> 00:03:52,670
proc contents will give
you a list of variables in

90
00:03:52,670 --> 00:03:55,970
alphabetic order but know that

91
00:03:55,970 --> 00:03:57,410
SAS will differentiate between

92
00:03:57,410 --> 00:03:58,910
capital letters and that's why

93
00:03:58,910 --> 00:04:02,830
BMI is sorted before
age in this example.

94
00:04:02,830 --> 00:04:05,420
Now, you want the variables to be

95
00:04:05,420 --> 00:04:07,565
sorted in the order
they were created,

96
00:04:07,565 --> 00:04:10,820
you can always add the
option varnum to the code.

97
00:04:10,820 --> 00:04:13,280
This is really useful
when the order of

98
00:04:13,280 --> 00:04:16,370
creation reflects the
order of the questioners.

99
00:04:16,370 --> 00:04:17,570
For example, you may have

100
00:04:17,570 --> 00:04:20,120
a hard copy of a
question in front of you

101
00:04:20,120 --> 00:04:22,040
and the variables were created in

102
00:04:22,040 --> 00:04:24,475
that same order they are
in the questionnaire,

103
00:04:24,475 --> 00:04:26,555
so that will help you to identify

104
00:04:26,555 --> 00:04:29,345
if you have all the
variables that you need.

105
00:04:29,345 --> 00:04:31,040
Voila, now you have

106
00:04:31,040 --> 00:04:34,460
the variables in the
order they were created.

107
00:04:34,460 --> 00:04:38,570
In summary, in this video
we learned how to use

108
00:04:38,570 --> 00:04:41,690
proc contents to check for
completeness of the datasets.

109
00:04:41,690 --> 00:04:42,710
In the next video,

110
00:04:42,710 --> 00:04:46,123
we will check for duplicate IDs.

