1
00:00:10,230 --> 00:00:14,642
After watching this video, you will be
able to apply some of the numeric and

2
00:00:14,642 --> 00:00:19,170
logic operations and
statistical functions in SAS.

3
00:00:19,170 --> 00:00:24,440
In this slide, you can see some of the
operators we use for comparison purposes.

4
00:00:24,440 --> 00:00:28,812
You can sometimes use a symbol or
the mnemonic equivalent, for

5
00:00:28,812 --> 00:00:35,000
example from left to right in the first
line you have the symbol for greater than.

6
00:00:35,000 --> 00:00:41,240
The symbol for greater or equal than and
then the two mnemonic equivalents.

7
00:00:41,240 --> 00:00:46,970
GT stands for greater than and
G stands for greater or equal than.

8
00:00:46,970 --> 00:00:51,935
If you continue in the same row,
you can see similar symbols on mnemonic

9
00:00:51,935 --> 00:00:57,620
equivalents for less than or less or
equal than on for not equal to.

10
00:00:57,620 --> 00:01:02,941
Other operators that you can use
are BETWEEN and you just specify a range

11
00:01:02,941 --> 00:01:08,610
of numbers or IN and you specify
selected options in parenthesis.

12
00:01:08,610 --> 00:01:13,910
Note that the IN operator can be used for
numbers and for character variables,

13
00:01:13,910 --> 00:01:18,560
as in the example below IN Michigan,
Montana, Missouri.

14
00:01:18,560 --> 00:01:24,480
Note however, that the character
variables are case sensitive.

15
00:01:24,480 --> 00:01:30,690
Michigan as it's written is not the same
as MICHIGAN in capital letters.

16
00:01:30,690 --> 00:01:35,072
So SAS is not sensitive for
case when writing code, but for

17
00:01:35,072 --> 00:01:39,630
the character variables it is,
so be careful.

18
00:01:39,630 --> 00:01:43,137
There are many more operator
than I'm explaining here, but

19
00:01:43,137 --> 00:01:49,220
for the purposes of this class you will
not be using more than those or even less.

20
00:01:49,220 --> 00:01:52,623
Same as with the comparison
operators I mentioned before,

21
00:01:52,623 --> 00:01:56,569
there are many more numeric operators
than the ones showed here, but

22
00:01:56,569 --> 00:02:01,450
for the purposes of this class,
we'll probably only need this once.

23
00:02:01,450 --> 00:02:07,176
The double asterisks is for
exponentiation, so for

24
00:02:07,176 --> 00:02:13,520
example x**3 means raise
x to the third power.

25
00:02:13,520 --> 00:02:17,984
The single asterisk is for
multiplications, so for

26
00:02:17,984 --> 00:02:22,454
example, 2*z means multiply
2 by the value of z.

27
00:02:22,454 --> 00:02:28,118
The division, summation and subtraction
symbols are a standard symbols,

28
00:02:28,118 --> 00:02:31,350
and you can see some examples here.

29
00:02:31,350 --> 00:02:34,846
For example,
imagine you have a variable called

30
00:02:34,846 --> 00:02:39,535
sys with the systolic blood pressure
of your study population and

31
00:02:39,535 --> 00:02:43,896
another one called dias with
the diastolic blood pressure.

32
00:02:43,896 --> 00:02:50,150
So doing sis minus dias will subtract
the value of dias from the value of sys.

33
00:02:50,150 --> 00:02:54,362
And finally, three important
operations are those to take logs

34
00:02:54,362 --> 00:02:59,370
either the natural log or
the log in base 10 and the square root.

35
00:02:59,370 --> 00:03:03,943
Note that this operator required to
put your variable in parenthesis.

36
00:03:03,943 --> 00:03:10,060
For example, log(cal) in parenthesis will
take the natural log of the variable cal.

37
00:03:10,060 --> 00:03:14,864
In the next slide, we will see an example
of one of those operators in a little step

38
00:03:14,864 --> 00:03:17,670
to create new variables.

39
00:03:17,670 --> 00:03:21,764
So here in this data step
were again to remind you,

40
00:03:21,764 --> 00:03:29,580
you are copying the data set br.variation
into a new temporary data set called temp.

41
00:03:29,580 --> 00:03:34,860
You will be creating a new variable
called log_cals that is the natural

42
00:03:34,860 --> 00:03:40,600
log of the variable total energy
intake called cals in this example.

43
00:03:40,600 --> 00:03:45,817
Note that for observations with calories
equal or less than zero, this variable

44
00:03:45,817 --> 00:03:50,580
will be missing because you cannot take
the log of 0 or a negative number.

45
00:03:50,580 --> 00:03:55,310
In this particular example, you don't
really expect to have negative or

46
00:03:55,310 --> 00:03:57,523
zero total energy intake, but for

47
00:03:57,523 --> 00:04:02,732
the future there may be other variables
that can take on negative or zero values.

48
00:04:02,732 --> 00:04:06,631
So log transformations will not
be appropriate unless you do

49
00:04:06,631 --> 00:04:12,260
something else before like we
center in the valuable for example.

50
00:04:12,260 --> 00:04:16,261
And finally, you do have many
statistical functions in SAS.

51
00:04:16,261 --> 00:04:20,827
The most used ones are listed here,
the mean, the minimum, the maximum,

52
00:04:20,827 --> 00:04:24,960
the number of non-missing values,
the number of missing values,

53
00:04:24,960 --> 00:04:30,090
the standard deviation, the standard
error of the mean and this sum.

54
00:04:30,090 --> 00:04:34,221
Note that except for the number of
non-missing values, all of them is

55
00:04:34,221 --> 00:04:39,930
specified that the statistical function
is done among non-missing values.

56
00:04:39,930 --> 00:04:41,089
Okay so at this point,

57
00:04:41,089 --> 00:04:45,350
you are probably completely
overwhelmed with too much information.

58
00:04:45,350 --> 00:04:50,629
Don't worry if you don't remember all the
keywords I had to use for these functions.

59
00:04:50,629 --> 00:04:55,528
The important thing is to remember that
they're there for you to use them whenever

60
00:04:55,528 --> 00:04:59,717
you need them, and also to understand
the consequences of using one or

61
00:04:59,717 --> 00:05:03,849
the other, particularly in the event
that you have missing values.

62
00:05:03,849 --> 00:05:07,809
In the next slide, you will see how
using one of those functions or

63
00:05:07,809 --> 00:05:12,777
using a similar approach with arithmetic
functions may return different results

64
00:05:12,777 --> 00:05:15,890
if there are missing values.

65
00:05:15,890 --> 00:05:20,765
In this example, we're going to create
the average systolic blood pressure

66
00:05:20,765 --> 00:05:23,240
following two different approaches.

67
00:05:23,240 --> 00:05:27,549
On the left, we are just summing up
the three individual variables and

68
00:05:27,549 --> 00:05:32,570
dividing by three while on the right,
we are using the mean function.

69
00:05:32,570 --> 00:05:37,375
In both situations, we are creating
a new variable call avg_sbp that is

70
00:05:37,375 --> 00:05:42,640
intended to be the mean of the three
measures of systolic pressure.

71
00:05:42,640 --> 00:05:45,996
Note then that if there
are no missing values,

72
00:05:45,996 --> 00:05:49,094
these two approaches will be equivalent.

73
00:05:49,094 --> 00:05:54,133
However, if there are missing values,
the approach on the left

74
00:05:54,133 --> 00:06:00,900
will assign avg_sbp to missing,
even if there is only one measure missing.

75
00:06:00,900 --> 00:06:07,400
While the approach on the right will
calculate the mean using any available

76
00:06:07,400 --> 00:06:15,580
data that is avg_sbp will be missing
only if all three variables are missing.

77
00:06:15,580 --> 00:06:19,999
In summary, in this video we learn some
logic and numeric operations on some

78
00:06:19,999 --> 00:06:25,990
statistical functions and implications of
missing values when using some of those.

79
00:06:25,990 --> 00:06:31,531
In the next video we will start
learning some basic procedures in SAS.

