1
00:00:24,000 --> 00:00:24,600
Marisa Eisenberg: Hello.

2
00:00:25,530 --> 00:00:26,250
Morgan Caitlin Byrd: Good morning.

3
00:00:26,700 --> 00:00:29,130
Morgan Caitlin Byrd: How are you i'm good, how are you.

4
00:00:29,370 --> 00:00:33,810
Marisa Eisenberg: doing good, thank you for doing this i'm sorry we've been kind of you know, a wall.

5
00:00:35,190 --> 00:00:35,610
Marisa Eisenberg: setup.

6
00:00:40,320 --> 00:00:40,950
Marisa Eisenberg: awesome.

7
00:00:42,000 --> 00:00:48,750
Marisa Eisenberg: let's see here all my stuff set up and yeah how's life how's your morning, etc.

8
00:00:49,890 --> 00:00:50,160
Morgan Caitlin Byrd: yep.

9
00:00:50,670 --> 00:00:51,300
Excellent.

10
00:01:01,500 --> 00:01:03,750
Morgan Caitlin Byrd: I think i'm actually decently.

11
00:01:13,980 --> 00:01:17,700
Morgan Caitlin Byrd: And do you have any like poll here breakouts that you'll need the first day.

12
00:01:18,180 --> 00:01:28,560
Marisa Eisenberg: um I don't have breakouts for the first day but um I was under out well, I will probably do like random polls, I was going to ask like.

13
00:01:28,860 --> 00:01:33,660
Marisa Eisenberg: How many like I wanted to ask how many of them have done some are and like things like that, but.

14
00:01:34,200 --> 00:01:42,210
Marisa Eisenberg: I can just have them like raise their hand and the little thing we don't need to like make a formal pull out of it, I just there's often at the beginning kind of I want to get a sense of like.

15
00:01:43,440 --> 00:01:45,870
Marisa Eisenberg: Beginning stuff do you need or like.

16
00:01:46,170 --> 00:01:48,750
Marisa Eisenberg: you'll be bored like you know so there's a lot of that.

17
00:01:49,110 --> 00:01:57,000
Marisa Eisenberg: Okay yeah but but that'll be that'll, be it i'm actually not totally sure, because we were running so late, usually we send a message at the beginning.

18
00:01:57,210 --> 00:02:05,640
Marisa Eisenberg: or like we do something to kind of be like you should install our before the class begins and we didn't do any of that so now i'm sort of like well I don't know we'll see.

19
00:02:05,910 --> 00:02:07,500
Morgan Caitlin Byrd: yeah see who has it here does it.

20
00:02:14,250 --> 00:02:14,670
Morgan Caitlin Byrd: All right.

21
00:05:23,610 --> 00:05:29,460
Marisa Eisenberg: what's the 30 hi everybody welcome we're going to wait for just a minute or two for the rest of folks to join and.

22
00:05:32,610 --> 00:05:34,500
Marisa Eisenberg: Just hang in there and then we'll get started.

23
00:05:37,500 --> 00:05:43,380
Marisa Eisenberg: we're getting i'm just looking for, do you have the the roster is that a thing that you.

24
00:05:43,410 --> 00:05:44,340
Morgan Caitlin Byrd: I do, yes.

25
00:05:45,990 --> 00:05:47,820
Marisa Eisenberg: yeah if you don't mind that'd be amazing.

26
00:05:48,900 --> 00:05:49,950
Marisa Eisenberg: I just don't remember.

27
00:05:50,160 --> 00:05:53,970
Marisa Eisenberg: Like how many people are you know all the things, and thank you.

28
00:06:33,540 --> 00:06:34,800
Marisa Eisenberg: got it Thank you.

29
00:06:39,450 --> 00:06:42,750
Marisa Eisenberg: we're still short quite a few people so we'll hang in there for another minute or two to.

30
00:06:49,980 --> 00:06:54,000
Marisa Eisenberg: 830 is a early start time for many so that's probably.

31
00:07:48,960 --> 00:07:49,920
Marisa Eisenberg: just go ahead and get started.

32
00:07:52,050 --> 00:07:53,640
Michael Akira Lee Hayashi: Think we're pretty close on folks.

33
00:07:54,870 --> 00:07:55,590
Michael Akira Lee Hayashi: Over so.

34
00:07:55,680 --> 00:07:58,470
Marisa Eisenberg: Oh yeah yeah that's that's pretty.

35
00:07:58,500 --> 00:08:00,180
Michael Akira Lee Hayashi: Much I think that's the total enrollment.

36
00:08:00,690 --> 00:08:10,650
Marisa Eisenberg: Is it fantastic Okay, then, in that case no more waiting, we can just go ahead and get started and okay good excellent and alright so.

37
00:08:11,580 --> 00:08:30,480
Marisa Eisenberg: Welcome everybody episode 793 This is our introduction to mathematical and complex systems modeling of all flavors and and yeah we're going to do a ton of different things today we're going to sort of have a abroad introduction and all that kind of thing, let me share my screen.

38
00:08:31,920 --> 00:08:32,550
Marisa Eisenberg: i'm.

39
00:08:34,110 --> 00:08:49,950
Marisa Eisenberg: In an attempt to keep zoom from taking over everything and making it hard for me to see other things i'm going to try this is this okay visually for everybody looks fine okay good great.

40
00:08:50,280 --> 00:09:00,690
Marisa Eisenberg: Excellent um yeah so first a little bit of information about the course so i'm merce eisenberg and Michael hashi is right there, so you just said Hello.

41
00:09:01,080 --> 00:09:08,670
Marisa Eisenberg: And if you, hopefully, I saw an email, and I think some there's at least one of you who is having a hard time getting onto canvas but.

42
00:09:09,000 --> 00:09:19,500
Marisa Eisenberg: Hopefully, everybody can get on to canvas you at the syllabus is there and the the course So hopefully is everybody been able to get them to canvas for the most part.

43
00:09:20,580 --> 00:09:25,140
Marisa Eisenberg: yeah seems like yes okay okay good I see some thumbs up excellent all right.

44
00:09:25,920 --> 00:09:33,810
Marisa Eisenberg: Okay, good, so the syllabus is there, and if you go each day also on the homepage there's a sort of link for each day, and if you click.

45
00:09:34,110 --> 00:09:45,360
Marisa Eisenberg: On the link for the day you'll get a bunch of materials and and all of the different stuff I just updated my slides for today, so if you downloaded them previously, you may want to re download them just as a heads up.

46
00:09:45,720 --> 00:09:55,500
Marisa Eisenberg: And so the canvas website has all of the materials for the class, we will post some Google docs things but we'll link to them i'll add links to the canvas page.

47
00:09:56,220 --> 00:10:03,540
Marisa Eisenberg: As we go and mostly i'll post, it will post them in the chat but then lab leads to the campus page and the course structure so.

48
00:10:04,320 --> 00:10:16,410
Marisa Eisenberg: This part is actually a little bit changed, but so what we're going to do is we'll have lecture part of the time and discussion part of the time we may bring some papers in and sort of have you like read a paper.

49
00:10:16,710 --> 00:10:19,830
Marisa Eisenberg: You know, for later in the week and then we'll have some discussion about it.

50
00:10:20,790 --> 00:10:31,710
Marisa Eisenberg: But we'll also be doing labs so you'll do computational labs where you get a chance to kind of hands on try all of the various well, not all but many of the various techniques that we talked about.

51
00:10:32,040 --> 00:10:42,180
Marisa Eisenberg: And and we're going to try so usually we would do a sort of lecture session, and then a lab session that i'm in our last couple of years of doing this, has it.

52
00:10:42,690 --> 00:10:48,810
Marisa Eisenberg: In the zoom format it gets a little bit like long with the lecture just kind of going in one big chunk.

53
00:10:49,110 --> 00:10:56,670
Marisa Eisenberg: And, and so what we're going to do this time is trying interspersed from a bit, so the lab is posted but we'll do the problems.

54
00:10:56,940 --> 00:11:06,180
Marisa Eisenberg: In bits and bobs through the lecture and code together so that that way, hopefully, a kind of break things up a little gifts everyone a little more comfortable maybe with asking questions.

55
00:11:06,360 --> 00:11:19,020
Marisa Eisenberg: there's a less likelihood of sort of drifting away because you're doing one thing for a really long time and and so so that'll be the plan for today and the project so usually we have.

56
00:11:20,250 --> 00:11:30,750
Marisa Eisenberg: We have a final project, and then on Friday everybody presents their final project, but this time I think everyone is not taking the course for credit if i'm.

57
00:11:31,140 --> 00:11:35,550
Marisa Eisenberg: Remembering correctly and so, if you're not taking the course for credit, you may not.

58
00:11:35,790 --> 00:11:43,410
Marisa Eisenberg: In the past, had it where a lot of the students who aren't taking it for credit, you know they don't you don't have to turn in any of the assignments if you're not taking it for credit so.

59
00:11:43,710 --> 00:11:51,480
Marisa Eisenberg: And you know they don't really necessarily want to do a final project so we're going to it also is one week, to be frank, is.

60
00:11:51,810 --> 00:12:02,760
Marisa Eisenberg: awfully short to get any kind of real major thing coded up, and so it was just stressful and a challenge and in a way that wasn't super productive I don't think so, rather than doing that.

61
00:12:03,570 --> 00:12:10,830
Marisa Eisenberg: What we're going to do is we're going to have a project proposal so there'll be a sort of template like.

62
00:12:11,430 --> 00:12:22,410
Marisa Eisenberg: Blank project proposal, we want to get you thinking about what you could use this for even if you don't have time in one week to actually do it, and so um what you'll do is you'll write up sort of.

63
00:12:23,010 --> 00:12:30,870
Marisa Eisenberg: will have a session, where you write up what an idea of what you would like to use some of these methods for, and then on Friday we'll do some peer feedback and you'll look at each other's.

64
00:12:31,470 --> 00:12:41,310
Marisa Eisenberg: project proposals and kind of talk through them in that case so and so it'll be it's it's slim down but kind of the hopefully accomplishes the same goal, and the more useful way and.

65
00:12:41,790 --> 00:12:55,530
Marisa Eisenberg: So that's kind of the structure of the course itself and the course goals and philosophy, so this for well actually i'm going to do a getting to know you in a minute, but just if I can do a show of hands, how many of you have.

66
00:12:56,820 --> 00:12:59,100
Marisa Eisenberg: Well let's start with how many of you have coated before.

67
00:13:00,120 --> 00:13:17,130
Marisa Eisenberg: In our let's say or any sort of programming language Python maybe you know Okay, a fair number, but not everybody Okay, and then um how many of you have done some complex systems modeling maybe an si our model or something like that.

68
00:13:19,020 --> 00:13:26,130
Marisa Eisenberg: Also, some okay some but not not everybody there's a few of you Okay, it seems like yeah three ish.

69
00:13:26,910 --> 00:13:32,970
Marisa Eisenberg: Okay, so so for many of you, this will be new stuff and so you know it's it's.

70
00:13:33,480 --> 00:13:39,870
Marisa Eisenberg: It is always you know a bit of a challenge when you're taking on picking up new a new set of skills, like this.

71
00:13:40,290 --> 00:13:46,860
Marisa Eisenberg: For those of you who haven't coated before we have a bunch of intro coding stuff today that will hopefully get you a little bit more familiar.

72
00:13:47,100 --> 00:13:57,690
Marisa Eisenberg: For those of you who have bear with us in the intro coding price if you're like oh my God we're alerts were explaining for lives, then you know it's fine just hang in there we'll get to the more like interesting stuff later.

73
00:13:58,740 --> 00:14:04,020
Marisa Eisenberg: And we'll do ODS differential equations later this afternoon, and you know that kind of thing but um.

74
00:14:04,440 --> 00:14:14,850
Marisa Eisenberg: I guess, there will be a lot of new stuff I for you to learn it the best and my hope is that everyone feels comfortable asking questions, speaking of being wrong that is perfectly okay.

75
00:14:15,030 --> 00:14:20,820
Marisa Eisenberg: i'm wrong, most of the time I feel like oftentimes people take courses like this and they feel intimidated by the masters of coding.

76
00:14:21,060 --> 00:14:34,110
Marisa Eisenberg: And i'm hoping that we can the atmosphere will be such that folks will feel comfortable and asking questions and and not enough and dive in because, even if you're if it's new to you that's the best way.

77
00:14:34,290 --> 00:14:35,100
Marisa Eisenberg: To make it.

78
00:14:35,130 --> 00:14:44,310
Marisa Eisenberg: comfortable you know so anyway um yeah so that I think is the like course info Michael did I miss anything anything I should add their.

79
00:14:44,790 --> 00:14:45,900
Michael Akira Lee Hayashi: own I think that about covered it.

80
00:14:46,530 --> 00:14:51,510
Marisa Eisenberg: Okay cool are the questions about the course structure itself, you know that kind of thing.

81
00:14:57,540 --> 00:15:07,890
Marisa Eisenberg: And for questions feel free to just unmute but also if you want to type it like you can that's great and no problem if you want to type it in the chat if that's more comfortable that's also totally good so.

82
00:15:08,160 --> 00:15:25,020
Marisa Eisenberg: You know, whatever is good, with you and Okay, so if that's the case, I want to do a little getting to know you, you can just do this while we're while we're going through some of the slides and i've got a need a little Google sheet here.

83
00:15:26,130 --> 00:15:30,900
Marisa Eisenberg: i'll put it in the chat and and if you can just fill in it's got your name.

84
00:15:34,650 --> 00:15:40,860
Marisa Eisenberg: You know place what organization you're you're in you're from and why you're interested in the course.

85
00:15:41,400 --> 00:15:48,720
Marisa Eisenberg: Just didn't like a couple of you know, like a sentence or something hey you how much napkin coding background, you have that will help us over the course of the week, so we have a sense of kind of how to pitch things.

86
00:15:49,020 --> 00:15:53,700
Marisa Eisenberg: And anything else you'd like us to know about you just so that that way I find it's often really helpful.

87
00:15:54,060 --> 00:16:03,240
Marisa Eisenberg: As the week goes on to be able to look at that and kind of see what everyone is interested in and also you know what kind of background everybody has so if you can just.

88
00:16:04,140 --> 00:16:17,730
Marisa Eisenberg: click that link and then fill it in that'd be great it should be an open Google sheet for everybody's in there, great fantastic Okay, so that works that worked well okay i'm good so that's that's good and then okay so.

89
00:16:18,780 --> 00:16:20,430
Michael Akira Lee Hayashi: Should we introduce ourselves.

90
00:16:20,460 --> 00:16:21,210
Michael Akira Lee Hayashi: Good oh yeah.

91
00:16:22,470 --> 00:16:26,400
Marisa Eisenberg: yeah we just appeared and yeah good here you go good that's great.

92
00:16:26,820 --> 00:16:27,840
Michael Akira Lee Hayashi: Okay um.

93
00:16:28,560 --> 00:16:36,120
Michael Akira Lee Hayashi: So i'm Michael how she um I appeared out of nowhere nothing and nothing all return one day.

94
00:16:37,620 --> 00:16:40,230
Michael Akira Lee Hayashi: i'm a clinical assistant professor of epidemiology.

95
00:16:40,650 --> 00:16:57,150
Michael Akira Lee Hayashi: A lot of my research focuses on mathematical simulation modeling of infectious disease have a particular interest in game theory and economic modeling and ways to integrate sort of mathematical models of human behavior with models of disease transmission.

96
00:16:59,760 --> 00:17:14,880
Michael Akira Lee Hayashi: I also more or less turned into a pipeline software developer during the code pandemic so i've spent the last two ish years doing that, which has been wild marissa can talk more about our pandemic experiences some because she's been right in the thick of it too.

97
00:17:16,110 --> 00:17:22,290
Michael Akira Lee Hayashi: But yeah this is, this is my third year teaching this class so i'm looking forward to looking forward to another go around.

98
00:17:23,700 --> 00:17:30,810
Marisa Eisenberg: yeah same yeah so i'm a i'm an associate professor of epidemiology and also complex systems i'm also.

99
00:17:30,990 --> 00:17:32,070
Marisa Eisenberg: The Director of the Center for.

100
00:17:32,070 --> 00:17:33,240
Marisa Eisenberg: The study of complex systems.

101
00:17:34,290 --> 00:17:42,660
Marisa Eisenberg: And I am also mostly an infectious disease model or my interests are more in the parameter estimation methods kind of world of things.

102
00:17:42,930 --> 00:17:50,730
Marisa Eisenberg: Connecting models with data and how you figure out what information can be gleaned from different data sets and which model structure to use and that kind of thing.

103
00:17:51,870 --> 00:17:52,740
Marisa Eisenberg: My.

104
00:17:53,010 --> 00:17:59,040
Marisa Eisenberg: Like Michael my with a pandemic basically like entirely rerouted my work into being.

105
00:17:59,580 --> 00:18:11,010
Marisa Eisenberg: coven related and it has stayed that way for a while I do a lot of work, along with Michael we've built a bunch of different tools and models and things like that that the state of Michigan is used and.

106
00:18:11,310 --> 00:18:19,920
Marisa Eisenberg: So we do a lot of work with the Michigan Department of Health and human services and a lot of the folks at the state to help with code response and so that's been.

107
00:18:21,510 --> 00:18:23,520
Marisa Eisenberg: Like sort of the main thing.

108
00:18:24,210 --> 00:18:34,710
Marisa Eisenberg: That, I think, for both of us we've been doing for the last few years, and so, and so yeah so that if anyone wants to chat about any of that kind of stuff and how models can be useful, and in those circumstances.

109
00:18:35,010 --> 00:18:45,360
Marisa Eisenberg: On the other hand, I think you all have seen modeling play out in on the larger national stage, so we can also just have a grump rumble session about.

110
00:18:46,200 --> 00:18:56,970
Marisa Eisenberg: How how people think about models and modeling and epidemiological data, and what that means for public health, so anyway um but yeah so that's that's us um.

111
00:18:58,080 --> 00:19:08,310
Marisa Eisenberg: let's see here also looking forward to another go around this is a, this is a fun class, even though it's it's it's an intense one because 830 to five every day is a lot.

112
00:19:09,180 --> 00:19:18,330
Marisa Eisenberg: But but yeah but it's fun, so all right, so I see everybody's filling in the getting to know you, thank you, thank you that's great it's coming along oh there's actually this is.

113
00:19:18,600 --> 00:19:32,130
Marisa Eisenberg: This is good Okay, so that we may not need as much of the intro are, as I thought, but we'll see we'll see we'll do it anyway, and then, if it goes really fast and that's fine and if it doesn't that's awesome and so.

114
00:19:32,880 --> 00:19:42,150
Marisa Eisenberg: I usually find that nobody is actually I always worry that people will be like this is so boring but I usually find that even people who are used to it don't mind.

115
00:19:42,540 --> 00:19:50,070
Marisa Eisenberg: Okay sure i'll code a for loop to do that, why not, you know kind of thing, but so yeah so anyway okay good so.

116
00:19:50,820 --> 00:20:02,910
Marisa Eisenberg: goals for the course so it's a one week course you know we you're not going to come out of it as an expert in systems modeling you know that's it's it's a you know there's a lot a lot to kind of pack into a single week.

117
00:20:03,270 --> 00:20:12,450
Marisa Eisenberg: And, but what we're hoping to give to make sure that everybody comes out with is some exposure to and some some basic experience so that you're sort of reasonably comfortable.

118
00:20:12,690 --> 00:20:22,140
Marisa Eisenberg: With a range of different systems modeling approaches and and that everyone can kind of understand how you would go from an idea to.

119
00:20:22,680 --> 00:20:31,710
Marisa Eisenberg: You know sort of like Oh well, I had this idea of doing a model on this to a description of what you are thinking of for the model to some kind of diagram for how you're going to structure it.

120
00:20:31,950 --> 00:20:38,430
Marisa Eisenberg: Two equations or code for the models that you're going to build build and and should really be well and war.

121
00:20:40,320 --> 00:20:51,720
Marisa Eisenberg: And so, and I hope that everyone will also come out of this with an understanding of the advantages and disadvantages of the different kinds of modeling approaches that we're going to talk about so you know.

122
00:20:52,050 --> 00:21:03,480
Marisa Eisenberg: Which kind of model should you use for X, Y and Z those kinds of questions you know, hopefully, people will come out of this with a sense of what the what what they they're sort of feeling is on that and.

123
00:21:03,810 --> 00:21:05,160
Michael Akira Lee Hayashi: So really quick.

124
00:21:05,460 --> 00:21:06,030
Okay.

125
00:21:07,050 --> 00:21:13,950
Michael Akira Lee Hayashi: I think one thing that I like to emphasize is that this course is for summer course fairly programming heavy.

126
00:21:14,790 --> 00:21:26,280
Michael Akira Lee Hayashi: And I found that programming, especially I think complex systems methods writ large tend to be things that benefit from repeat exposure so you'll see you'll see programming and are in this.

127
00:21:26,640 --> 00:21:35,970
Michael Akira Lee Hayashi: For those of you who are taking the tobacco modeling courses you'll see it there, and if it if it doesn't necessarily feel like it clicks now that's fine.

128
00:21:36,420 --> 00:21:52,050
Michael Akira Lee Hayashi: Maybe it will the next time, maybe it will the time after that sometimes the material or the syntax of a particular language and or things like that they just kind of they come in in fits and spurts, so I think.

129
00:21:53,370 --> 00:21:55,020
Michael Akira Lee Hayashi: My take on a lot of this is.

130
00:21:56,190 --> 00:22:09,930
Michael Akira Lee Hayashi: it's it's good to see even if sometimes it feels like there's kind of an information overload right now, because later on down the line, the next time or the third time or so that you see it that will sort of start to fall into place.

131
00:22:11,820 --> 00:22:26,730
Marisa Eisenberg: yeah yeah I totally agree yeah the the it's it is funny, I think, because a lot of it is sort of math or or coding people feel like it should click and then I like or I should see it and then.

132
00:22:27,450 --> 00:22:37,350
Marisa Eisenberg: As soon as I like have read or heard the material I should understand it, and be able to do it, and unfortunately that's not quite often the case with a lot of this kind of stuff.

133
00:22:37,680 --> 00:22:47,880
Marisa Eisenberg: it's it takes some digesting and and the digestion is an active process, you have to be working with it and doing stuff right, and so I think that yeah that's a really good point.

134
00:22:48,990 --> 00:23:01,950
Marisa Eisenberg: Okay So yes, so then language wise, so the Cone and the homework files, will be an R and that logo, I guess, that is true, I forgot, we have some logos we should move that and hearts of.

135
00:23:02,130 --> 00:23:11,040
Michael Akira Lee Hayashi: brothers to teach this class in a bad language and a worst language which I you're hilarious okay so so Michael and I have a thing there's that well it's not even just mean Michael and everyone has the thing.

136
00:23:11,280 --> 00:23:21,000
Marisa Eisenberg: That so Michael hates our with a passion of like a fiery son, but he appreciates its usefulness, occasionally, I guess, maybe, is that a fair thing to say.

137
00:23:21,810 --> 00:23:24,420
Michael Akira Lee Hayashi: yeah I have a grudging respect for its utility.

138
00:23:25,980 --> 00:23:27,870
Marisa Eisenberg: Is a Python guy through and through so.

139
00:23:28,110 --> 00:23:29,010
Marisa Eisenberg: um so that's.

140
00:23:29,340 --> 00:23:42,120
Marisa Eisenberg: which I can I can I can appreciate um but anyway, I am I am more happy with whatever This is very much our temperaments actually as you'll discover over the course of the week, but.

141
00:23:42,660 --> 00:23:51,870
Marisa Eisenberg: But anyway, our is going to be mostly the language that will use for the class, we will, for the agent based modeling portion will have a few parts that are in net logo.

142
00:23:52,470 --> 00:24:00,660
Marisa Eisenberg: Which is a language that's built specifically for doing agent based models and it just does a lot of the work as far as visualizing agent based models and things like that in a much easier way.

143
00:24:01,440 --> 00:24:11,010
Marisa Eisenberg: If I get a chance i'll try and see if I can put a little bit of something together for an our version of some of this too, in case some of you wanted to see how you would do it and.

144
00:24:11,340 --> 00:24:12,150
Marisa Eisenberg: You would you.

145
00:24:12,270 --> 00:24:15,240
Michael Akira Lee Hayashi: don't code patient based models and our don't do it.

146
00:24:15,450 --> 00:24:23,970
Marisa Eisenberg: I know I could actually share like some Python it looked like a fair number of people have had like have have seen a bit of Python some.

147
00:24:24,270 --> 00:24:39,660
Marisa Eisenberg: And so I can share some Python code to I I use our as my main language, most of the time, but I do agree it is much easier to do agent based models in Python than it is an art by a lot and so um so yeah.

148
00:24:41,490 --> 00:24:44,550
Michael Akira Lee Hayashi: I will say a more serious point to my crabbing us about our is that.

149
00:24:46,050 --> 00:24:54,270
Michael Akira Lee Hayashi: I think it's I think it's important broadly if you're if you're going to be engaging with programming languages for data science complex systems modeling things like that.

150
00:24:55,230 --> 00:25:01,200
Michael Akira Lee Hayashi: it's helpful to see a range of languages, because each language is good at a different thing.

151
00:25:02,130 --> 00:25:13,980
Michael Akira Lee Hayashi: As much as I don't like are, it is a very good language for data analysis specifically and that kind of is its niche in the way that net logo is entirely built, for example, to do agent based models where.

152
00:25:14,580 --> 00:25:21,450
Michael Akira Lee Hayashi: Things like Python c++ Ruby those are general purpose languages that are better or worse at different.

153
00:25:21,930 --> 00:25:27,390
Michael Akira Lee Hayashi: tasks, so you may find that, for example, one language or another clicks better with you that it.

154
00:25:27,840 --> 00:25:31,800
Michael Akira Lee Hayashi: it's a lot more straightforward for you to think of ways to implement stuff in that language.

155
00:25:32,040 --> 00:25:39,540
Michael Akira Lee Hayashi: It may be that one language or another works better or worse for different parts of your workflow so, for example, even if i'm doing a data analysis and are.

156
00:25:39,780 --> 00:25:47,130
Michael Akira Lee Hayashi: All usually do things like file pre processing and string processing and Python because it's easier and better and it makes more sense to me.

157
00:25:47,790 --> 00:25:59,160
Michael Akira Lee Hayashi: So you can, the more the more you see, and the more languages, you get exposure to the more you'll see general concepts of programming for one which is really helpful because it's not.

158
00:25:59,910 --> 00:26:10,140
Michael Akira Lee Hayashi: it's not like each language is so monumentally different that if you learn Python you can't learn any other language, you know that a lot of the fundamental structures, the same, so I would.

159
00:26:10,860 --> 00:26:26,460
Michael Akira Lee Hayashi: I would encourage you to think about learning are in this class, not necessarily through the framework of learning are but through the framework of learning programming and and there is a there's a there's a difference between the two, and I think it's worth keeping that in mind.

160
00:26:26,940 --> 00:26:38,850
Marisa Eisenberg: Yes, I I really want to hammer on that one or like underscore that and because the you know, like for all of our like silly banter on our vs Python.

161
00:26:39,240 --> 00:26:47,370
Marisa Eisenberg: The the really fundamental structures are the same, and you can really read if you're comfortable with one language you can read the other one decently like.

162
00:26:47,550 --> 00:26:55,980
Marisa Eisenberg: You know, there are if statements there's like the logic of how you do programming is the same across most languages and so um you know.

163
00:26:56,610 --> 00:27:04,380
Marisa Eisenberg: it's it's I think sometimes people feel like they need to learn are when once you get comfortable with programming as a thing learning.

164
00:27:04,710 --> 00:27:16,140
Marisa Eisenberg: A new language is is much easier it's a matter of learning Okay, how do you do a for loop in this language, how do you write a function in this language like you know, and so I think I think.

165
00:27:16,830 --> 00:27:32,790
Marisa Eisenberg: Focusing on learning the logic of programming, not necessarily the specific oh it's this command to do the following thing i'm thinking about the logic of programming is really probably the more useful skill, if you if you can kind of keep that in the back of your head as you go.

166
00:27:34,170 --> 00:27:49,230
Marisa Eisenberg: Okay, so today we're going to do a modeling overview and and then in the morning we're going to do some we're going to kind of pepper it with some intro kind of coding exercises and some basic.

167
00:27:50,400 --> 00:27:57,420
Marisa Eisenberg: Like learning how to model, how to build simple models, how to code with loops how to do if statements and functions and things like that in our.

168
00:27:58,710 --> 00:28:10,080
Marisa Eisenberg: And then, in the afternoon we'll start to dive into differential equations how to build those kinds of models, how to like how to take an idea and then convert it like.

169
00:28:10,290 --> 00:28:27,150
Marisa Eisenberg: right down the diagram for how you would build a model for that and then convert that to equations and then turn that into coach so we'll do that through the afternoon and it'll be a mix of lecture and lab actually and and so so that's that'll be kind of the plan for today.

170
00:28:28,230 --> 00:28:34,470
Marisa Eisenberg: Okay, so we're going to do a little exercise next so i'm going to just pause here for questions any questions on any of that.

171
00:28:37,170 --> 00:28:38,970
Marisa Eisenberg: can be logistical or philosophical.

172
00:28:40,110 --> 00:28:40,560
or whatever.

173
00:28:42,030 --> 00:28:44,760
Marisa Eisenberg: Okay, all right good no.

174
00:28:46,650 --> 00:28:53,430
Marisa Eisenberg: Okay, I always wait too short of a time so I have to like force myself to wait until it feels uncomfortable and then that's like usually the right length of time.

175
00:28:54,180 --> 00:29:04,770
Marisa Eisenberg: Okay, if you have questions like I said yeah yeah feel free to just dive in and type in the chat yes, and I just saw a refresher nice totally agree exactly.

176
00:29:05,100 --> 00:29:15,810
Marisa Eisenberg: And yeah okay good alright so let's do a little exercise so we're gonna do simulate a little little model I usually would do this with physical beads that I would bring but since.

177
00:29:16,260 --> 00:29:24,030
Marisa Eisenberg: Obviously I can't give you all beads in a cup because we're all online, I made a little shiny APP that will use for doing this um but so.

178
00:29:24,600 --> 00:29:34,740
Marisa Eisenberg: The the model we're going to simulate as a really simple population model, so you can imagine, this as though it's like to kind two species of bacteria or two strains of bacteria or something.

179
00:29:35,070 --> 00:29:43,470
Marisa Eisenberg: Growing in a ditch shirt in the world, or whatever and okay so population dynamics exercise so we're going to simulate a population over time using beads.

180
00:29:43,950 --> 00:29:55,290
Marisa Eisenberg: or whatever dots and and we're going to start with one yellow Bead and one blue Bead and you can imagine, this is like a single cell of each bacteria type or something.

181
00:29:56,580 --> 00:30:01,590
Marisa Eisenberg: And then, what you would do should have actually brought the cup with me but whenever.

182
00:30:05,610 --> 00:30:11,160
Marisa Eisenberg: Just poured out a bunch of pencils on the floor decide okay imagine you woke up you put the two b's in the Cup.

183
00:30:11,400 --> 00:30:15,960
Marisa Eisenberg: And, and then you close your at each step you close your eyes, you take out one Bead.

184
00:30:16,170 --> 00:30:24,150
Marisa Eisenberg: And that's the one you decide reproduces so you get another of the same color you put them both back in the cup right so now you've expanded the population by one.

185
00:30:24,390 --> 00:30:30,060
Marisa Eisenberg: So that's the model, the model is this rule you start with two one of each color and you put them in the Cup.

186
00:30:30,360 --> 00:30:33,990
Marisa Eisenberg: And then you close your eyes, you pick out one let's say I get yellow.

187
00:30:34,230 --> 00:30:42,960
Marisa Eisenberg: I take another yellow beat I put them both back so now, I have two yellow and one blue right, and so you just keep doing this, so every time step you close your eyes, you pick.

188
00:30:43,200 --> 00:30:51,960
Marisa Eisenberg: A beat out of the thing and then you know, etc, you basically just keep going until you build up you know I don't know 20 times you get however many.

189
00:30:52,470 --> 00:30:56,400
Marisa Eisenberg: You know you're gonna have added 20 leads to the thing over the course of that so.

190
00:30:57,060 --> 00:31:11,370
Marisa Eisenberg: If you were to do this so don't don't run the APP yet if you've got the slides up and just hang in there, but let's just think for a second if you were to do this, what do you think would happen what's the population going to look like after 20 times or 100 times or 1000 whatever.

191
00:31:17,220 --> 00:31:19,740
Caroline Godfrey: think it depends a lot on what happens when the first couple times.

192
00:31:20,010 --> 00:31:21,420
Marisa Eisenberg: yeah yeah exactly.

193
00:31:21,450 --> 00:31:23,430
Marisa Eisenberg: Exactly so so wait say more say more.

194
00:31:24,930 --> 00:31:32,940
Caroline Godfrey: i'm like if you were to run it from the start, a whole bunch of times, an average them you'd probably end up with a fairly like 5050 looking population.

195
00:31:33,420 --> 00:31:46,110
Caroline Godfrey: But if you're running it just once, from the start, if you if you dry yellow the first couple of times the likelihood you're just going to end up mostly with yellows because each time it gets more likely that you're going to try yellow.

196
00:31:47,610 --> 00:31:50,220
Caroline Godfrey: And so you'll just end up with most yellows yeah.

197
00:31:50,400 --> 00:31:51,960
Marisa Eisenberg: yeah yeah good okay exactly so.

198
00:31:52,110 --> 00:32:01,800
Marisa Eisenberg: So you, if you like, in that example where I pulled the yellow the first time now, I have a two thirds chance of getting a yellow and only a one third chance of getting a blue, the next time around right so.

199
00:32:02,070 --> 00:32:08,250
Marisa Eisenberg: there's kind of this rich get richer kind of dynamic thing that's happening, the ones that tend to win early on.

200
00:32:08,490 --> 00:32:18,090
Marisa Eisenberg: Then, when again right so do most people feel like that's the likely thing other thoughts about what might happen.

201
00:32:19,350 --> 00:32:21,450
Marisa Eisenberg: That sound true.

202
00:32:25,350 --> 00:32:26,610
Marisa Eisenberg: Okay okay.

203
00:32:26,970 --> 00:32:27,660
Marisa Eisenberg: So and.

204
00:32:28,800 --> 00:32:32,610
Michael Akira Lee Hayashi: That response gets it some of the some of the features of the model from kind of a.

205
00:32:32,670 --> 00:32:34,020
Michael Akira Lee Hayashi: Structural perspective right so.

206
00:32:35,070 --> 00:32:41,760
Michael Akira Lee Hayashi: As you noted it depends on what happens early on, so there's randomness in this process like it's the the outcome of the model isn't.

207
00:32:42,150 --> 00:32:51,120
Michael Akira Lee Hayashi: Just a it's not a completely determined thing there's also things that happen over time and there's a difference between longer term behaviors short term behavior and.

208
00:32:51,450 --> 00:33:06,090
Michael Akira Lee Hayashi: Average behavior versus the behavior of a specific run of the model So these are going to be things that come back again and again and you'll see those sorts of things in pretty much every model of one configuration or another that we use maybe not randomness but.

209
00:33:06,360 --> 00:33:06,690
Michael Akira Lee Hayashi: um.

210
00:33:06,720 --> 00:33:08,100
Michael Akira Lee Hayashi: But a lot of the other stuff.

211
00:33:08,430 --> 00:33:10,830
Marisa Eisenberg: yeah yeah exactly yeah okay.

212
00:33:11,250 --> 00:33:12,240
Michael Akira Lee Hayashi: Perfect exactly.

213
00:33:12,660 --> 00:33:16,170
Marisa Eisenberg: And so, then let's so let's let's do this so let's.

214
00:33:16,200 --> 00:33:26,010
Marisa Eisenberg: let's try it out i'll put this in the chat everybody, this is a super simple teeny weeny let me actually here, let me switch from sharing.

215
00:33:29,850 --> 00:33:35,280
Marisa Eisenberg: So that's the wrong one second real oh my God i'm a goober.

216
00:33:38,280 --> 00:33:44,250
Michael Akira Lee Hayashi: What mercy is pulling up is itself kind of an interesting application of sort of the broader our ecosystem that.

217
00:33:44,610 --> 00:33:46,200
Michael Akira Lee Hayashi: enables you could build a little.

218
00:33:46,770 --> 00:33:53,850
Michael Akira Lee Hayashi: web APP program using our code fundamentally and it's fairly easy to package and hosts so this can.

219
00:33:55,110 --> 00:33:58,890
Michael Akira Lee Hayashi: This framework often is a decent tool to kind of.

220
00:33:59,340 --> 00:34:03,330
Michael Akira Lee Hayashi: make little visualizations like this, or make interactive things so that you can.

221
00:34:05,040 --> 00:34:06,930
Michael Akira Lee Hayashi: You can make your models, a little bit more.

222
00:34:06,960 --> 00:34:11,160
Michael Akira Lee Hayashi: publicly accessible or a little more engaging for folks to work with.

223
00:34:11,490 --> 00:34:20,340
Marisa Eisenberg: yeah actually you know I didn't even think about it, but so this is is the is called the shiny shiny shiny is is a shiny APP it's the are shiny.

224
00:34:20,700 --> 00:34:29,880
Marisa Eisenberg: package you can build Apps you have your own that do much fancy like we've built a lot of different Apps for all kinds of purposes that are mostly much fancier than this, this is like a.

225
00:34:30,210 --> 00:34:38,970
Marisa Eisenberg: Two minute real quick thing, but if if, on the last day we have some flexibility if you all want to learn more some like more like topic see things like that.

226
00:34:39,630 --> 00:34:47,700
Marisa Eisenberg: You know, like if we want to do a little chunk on building shiny Apps or paralyzing your code or like whatever various different things.

227
00:34:48,630 --> 00:34:54,540
Marisa Eisenberg: We can do that, so if you want to leave that in the like anything else you'd like to we like to tell us.

228
00:34:54,930 --> 00:35:06,450
Marisa Eisenberg: If there's topics like learning how to build Apps like this, you know, whatever um just just let us know, and then we can we, you know we won't be able to do all of it, but you know if you have any ideas feel free so yeah that's good.

229
00:35:06,840 --> 00:35:21,420
Marisa Eisenberg: um Okay, so this is a super simple teeny APP open this little guy up and it it if you press forward one step, so you can see, the number of beads that are yellow and blue it starts with in both at one.

230
00:35:21,870 --> 00:35:30,480
Marisa Eisenberg: And then, in the next time step I picked a blue one and so just and then at the bottom, it shows the percent of these that are yellow so.

231
00:35:30,810 --> 00:35:36,180
Marisa Eisenberg: You can see that we now have two blue and one yellow and if I keep running this a bit.

232
00:35:36,960 --> 00:35:49,950
Marisa Eisenberg: You know you get whatever so it ends up that blue the that that like you know early wins, you know kind of affect things thing has happened to play out here, and you get a lot of blues and few yellows but.

233
00:35:50,280 --> 00:36:02,910
Marisa Eisenberg: Everybody do this run it for 20 steps, and you can also like be sneaky and run it for 100 steps, but just do that for your own interest running for 20 steps and then, if you don't mind put in the chat the final.

234
00:36:03,390 --> 00:36:10,590
Marisa Eisenberg: let's say percent or well that'll be hard to read the final numbers of yellow and blue beads that you get after you run it for 20 steps.

235
00:36:12,750 --> 00:36:17,370
Marisa Eisenberg: And then let's just see will kind of start to get a mental sense of the histogram.

236
00:36:18,480 --> 00:36:22,440
Marisa Eisenberg: And you can kind of see what happens i'm going to run this hundred times steps just for kicks.

237
00:36:24,510 --> 00:36:24,840
me.

238
00:36:26,910 --> 00:36:33,420
Marisa Eisenberg: I did not give this a lot of memory probably I should have actually fancy to that, before I did this.

239
00:37:01,920 --> 00:37:03,270
Marisa Eisenberg: All right, okay.

240
00:37:09,060 --> 00:37:11,640
Marisa Eisenberg: So yeah if you run it for 20 steps let's see so we've got.

241
00:37:12,660 --> 00:37:18,630
Marisa Eisenberg: So 5050 and then another around 70% What else do people find.

242
00:37:25,140 --> 00:37:27,930
Marisa Eisenberg: Right so 2575 okay.

243
00:37:35,040 --> 00:37:35,730
Marisa Eisenberg: Okay yeah.

244
00:37:54,690 --> 00:37:55,290
Marisa Eisenberg: alright.

245
00:37:57,420 --> 00:38:00,630
Marisa Eisenberg: saying to get there anymore people run.

246
00:38:16,920 --> 00:38:17,400
Marisa Eisenberg: Okay.

247
00:38:20,400 --> 00:38:37,230
Marisa Eisenberg: Well, already from this more blue than yellow yeah Okay, and that hell that 100 times that's too yeah good and yeah exactly actually if everybody wants to once you've once you've reached 20 run it forward 100 steps and and like take note of whether it seems like it changed much.

248
00:38:42,630 --> 00:38:47,730
Michael Akira Lee Hayashi: Well, results are filtering and since, since this is a random process.

249
00:38:48,960 --> 00:38:49,320
Michael Akira Lee Hayashi: Something.

250
00:38:49,710 --> 00:39:03,630
Michael Akira Lee Hayashi: That can be kind of helpful to keep in mind is that when you have a random process, and when you actually implement a random process and see a manifestation of it in results like how many balls you get of each color different things like that.

251
00:39:06,240 --> 00:39:17,220
Michael Akira Lee Hayashi: We often find that the way that we think about random processes, sometimes is not super helpful in terms of understanding the results of specific manifestations those processes.

252
00:39:17,520 --> 00:39:22,230
Michael Akira Lee Hayashi: We often think about random processes in terms of kind of their average or expected behavior or.

253
00:39:23,160 --> 00:39:30,510
Michael Akira Lee Hayashi: it's it's sort of the like well I rolled a six sided die I got a one therefore i'm not likely to get one again right like.

254
00:39:31,050 --> 00:39:46,380
Michael Akira Lee Hayashi: We think about things in kind of a funny way with regard to the distribution of outcomes and the expectation of the outcomes were in reality there's no reason that died can't roll one like 100 times in a row if if if i'm.

255
00:39:46,560 --> 00:39:48,570
Marisa Eisenberg: unlikely buddy again yeah.

256
00:39:48,600 --> 00:39:53,820
Michael Akira Lee Hayashi: yeah I have some days that i'm suspicious of so so they're going in for statistical testing.

257
00:39:56,100 --> 00:40:07,440
Michael Akira Lee Hayashi: But that aside, like this applies to simulations to like rolling a dice a simple process pulling a ball, out of a cup is a fairly simple process when you get into say a stochastic disease transmission model, you may find that you get.

258
00:40:07,980 --> 00:40:15,450
Michael Akira Lee Hayashi: a bunch of simulation runs where nothing happens, or where everything explodes or something really dumb happens and.

259
00:40:16,410 --> 00:40:31,140
Michael Akira Lee Hayashi: Sometimes, those are real, because a real random trajectory a real random process can generate some really strange outcomes, as long as they're within sort of the overall probability distribution of outcomes in that process, so I think it's worth considering that.

260
00:40:32,310 --> 00:40:39,510
Michael Akira Lee Hayashi: When you're looking at the results of a random process like this think a little bit about what you expected and what you're seeing and whether what you're seeing.

261
00:40:40,020 --> 00:40:53,490
Michael Akira Lee Hayashi: conforms to what you maybe should have expected like this, this can be a way of kind of tuning the way that you think about a model like if you're like I don't think this is possible, and then you sit down and and.

262
00:40:54,600 --> 00:41:05,370
Michael Akira Lee Hayashi: Think about it a bit more and you're like oh wait no this actually makes sense because the random process that's generating these outcomes can actually do this thing it's unlikely but it's possible then.

263
00:41:05,850 --> 00:41:11,760
Michael Akira Lee Hayashi: That kind of that helps you refine your model thinking in your sort of overall conceptual thinking.

264
00:41:12,270 --> 00:41:18,570
Marisa Eisenberg: And then you can run it again a bunch of times and make sure that it's doing it the right percentage of the time that you would expect right and so.

265
00:41:18,600 --> 00:41:30,900
Marisa Eisenberg: yeah yeah Okay, but I got a good set of info in here, so now that people have kind of started to report in this what they're seeing what um.

266
00:41:31,500 --> 00:41:48,120
Marisa Eisenberg: What do you think does this feel like it matches sort of roughly the the the sense I mean we're gonna we're gonna do we're gonna run it a bajillion times in our right now just a second, but just anecdotally does it feel like this is sort of capturing it or not quite what do you think.

267
00:41:50,250 --> 00:41:53,880
Marisa Eisenberg: Does it seem like it's matching our hypothesis is sort of.

268
00:41:54,030 --> 00:42:05,790
Marisa Eisenberg: The early wins will affect what happens later and you should tend to perhaps the you get a lot of yellows at the beginning, then you get a mostly yellow population, and if you get a lot of blues the beginning, you get a mostly blue population.

269
00:42:06,210 --> 00:42:10,230
Marisa Eisenberg: not really okay yeah yeah so what what what's different what seems weird.

270
00:42:14,550 --> 00:42:19,380
Nora Satybaldiyeva: It kind of gets closer to 50%, at least for me than I thought it would.

271
00:42:20,070 --> 00:42:39,570
Marisa Eisenberg: yeah yeah yeah there's more 50% ones, then like sort of seems intuitive based on the structure of the model um yeah okay good so so keeping that in mind let's do something let's do this i'm going to share i'll just share this actually.

272
00:42:40,590 --> 00:42:50,670
Marisa Eisenberg: i'm going to share my whole desktop actually because I don't know if, when I run our thing it's going to be grumpy and i'm The only thing is, my desktop is big.

273
00:42:53,460 --> 00:42:54,000
Marisa Eisenberg: wheel.

274
00:42:56,760 --> 00:42:57,690
Marisa Eisenberg: we're to be like.

275
00:42:58,860 --> 00:43:08,820
Marisa Eisenberg: let's see does this, this is probably let me, let me try this a different way it's probably hard to see if I share my desktop i'll try sharing just this little dude and then hopefully.

276
00:43:08,850 --> 00:43:11,730
Michael Akira Lee Hayashi: Bigger text is kind Okay, but the smaller code text is.

277
00:43:11,730 --> 00:43:16,920
Marisa Eisenberg: Pretty tiny very small how about how about if I do this and then, when I rerun it, it should be fine, I think.

278
00:43:17,070 --> 00:43:19,110
Michael Akira Lee Hayashi: Well that's fine that's fine.

279
00:43:19,530 --> 00:43:32,940
Marisa Eisenberg: Okay, good good and okay yeah the ones that are very equal it stabilizes yeah that's also interesting right and so um okay so so, so this is is the thing we're simulating.

280
00:43:33,600 --> 00:43:39,240
Marisa Eisenberg: We framed it as like bacteria, but it's actually a math exercise called polio is earned.

281
00:43:39,540 --> 00:43:52,830
Marisa Eisenberg: And it's um so that's that's the name if you're wondering in in the in the like math framing of the problem you put like stones in and around or something is framed and like a whatever I don't know like a fancy I.

282
00:43:53,190 --> 00:44:00,990
Marisa Eisenberg: earned some fancier than a cup I guess I don't know anyway so so that so poorly has earned is the name of the thing and and so, but but.

283
00:44:01,350 --> 00:44:10,140
Marisa Eisenberg: let's just think through it so let's, so this is, I just wanted to show you all some code also for how you would simulate this this is sort of.

284
00:44:10,590 --> 00:44:15,240
Marisa Eisenberg: Like the these are like bits of the underlying code in the shiny after you were just playing.

285
00:44:15,870 --> 00:44:20,850
Marisa Eisenberg: But so so, how would we do this so we're going to set up some code to run this model.

286
00:44:21,060 --> 00:44:29,400
Marisa Eisenberg: So that the idea is that now, you know Okay, we can get some sense of the histogram by all of us reporting into the chat but rather than doing that.

287
00:44:29,550 --> 00:44:36,990
Marisa Eisenberg: let's actually run it like 1000 times right, and then we can just really just plot the histogram of what you get if you run this a bunch of times right.

288
00:44:37,260 --> 00:44:41,760
Marisa Eisenberg: But I don't want to like pull beads out of cups 1000 times so let's do it with some code so.

289
00:44:42,000 --> 00:44:50,610
Marisa Eisenberg: um okay so we're going to run each simulation for 200 steps so i'm making a variable here called know steps and i'm setting it to 200 and that's going to tell.

290
00:44:50,820 --> 00:45:01,530
Marisa Eisenberg: My code, you know how many whenever I need to reference, the number of steps to take that's going to be it number of simulations i'm going to run is going to be 10 so we're making a variable called num sims and.

291
00:45:02,070 --> 00:45:14,460
Marisa Eisenberg: And then, what i'm going to make us some little like a ray is basically so like a little blank like it's like a blank list of paper essentially or you know, a bro a blank table that is good.

292
00:45:18,270 --> 00:45:29,460
Marisa Eisenberg: And it's going to be filled with zeros and and it's going to have a basically it's going to be where we'll keep a record of how many beads we have of each color at each time step and so.

293
00:45:30,030 --> 00:45:36,720
Marisa Eisenberg: This why beads is going to keep track of our yellow beads we're going to make a matrix that is it's going to go basically.

294
00:45:37,230 --> 00:45:43,140
Marisa Eisenberg: it's going to be like a big table the number of rows is the first thing and so that's the number of time steps that we take.

295
00:45:43,380 --> 00:45:48,600
Marisa Eisenberg: And then the number of columns is the number of simulations so each column is going to be a simulation.

296
00:45:48,930 --> 00:45:57,330
Marisa Eisenberg: And then each row is going to be a timestamp and so that's we're going to use that to keep a record of what happened for all of our simulations that we run.

297
00:45:57,570 --> 00:46:06,720
Marisa Eisenberg: And the same for the blue we're going to have each each row is a timestamp and each column is one simulation and so we're going to start by filling in.

298
00:46:07,710 --> 00:46:19,350
Marisa Eisenberg: The first line so in our if you do this little brackets thing here, this means take this table this matrix why be why beads.

299
00:46:20,010 --> 00:46:31,860
Marisa Eisenberg: Go to the first row and take if you leave a blank so see I go one comma and then nothing so usually you would say brackets, and you go one comma two and that would mean like the first row, the second column.

300
00:46:32,250 --> 00:46:36,780
Marisa Eisenberg: But if you leave a blank it says take all the columns that so we're going to take the first row.

301
00:46:37,020 --> 00:46:47,820
Marisa Eisenberg: All the columns we're going to set them all equal to one, meaning that remember in our table here that first row is the first time step, so the first time step for every simulation we start with one yellow Bead.

302
00:46:48,540 --> 00:46:52,680
Marisa Eisenberg: And we start with one bluebeat so that's what we're going to do there and.

303
00:46:53,220 --> 00:47:04,470
Marisa Eisenberg: So we've got our yellow beads and our blue beads we now set up a table that has a one at the very like a you know all the the columns for the first row have ones, and then zeros everywhere else.

304
00:47:04,830 --> 00:47:18,600
Marisa Eisenberg: And then, what we're going to do so, this is a little more complicated we'll get to this in a in maybe a bit, but we're going to run two loops so the the the inside loop here is going to be.

305
00:47:19,800 --> 00:47:26,490
Marisa Eisenberg: Stepping through the timestamps of our simulation so for the first simulation let's say you go from.

306
00:47:27,810 --> 00:47:35,670
Marisa Eisenberg: We already filled in the first time step so we're going to go from the second time step so remember, we have a one in the first time step, so now the second time step.

307
00:47:36,030 --> 00:47:47,700
Marisa Eisenberg: all the way through to the end of the table right and so we're going to go to through numb steps and and basically fill in we i'm not going to like we'll dig into why this works in a minute, but.

308
00:47:48,240 --> 00:47:54,360
Marisa Eisenberg: fill in what values of the yellow and blue beads we got as we ran that simulation all the way through so.

309
00:47:54,960 --> 00:48:05,400
Marisa Eisenberg: This we're gonna I know many of you have never seen a for loop here like what on earth are you talking about we'll get into this and in like more gritty detail in a minute, but just to kind of start to familiarize you with like.

310
00:48:05,700 --> 00:48:13,950
Marisa Eisenberg: Okay there's something here that's doing a loop, and then in in this like little chunk of code where there's this bracket and this other bracket.

311
00:48:14,310 --> 00:48:26,250
Marisa Eisenberg: there's something happening, you know kind of starting to familiarize ourselves with what it looks like so this inside loop goes down the the the rows and says okay at each time step what happens.

312
00:48:26,970 --> 00:48:38,340
Marisa Eisenberg: And then, this outside loop moves us from one column, to the next column, to the next, so we do the first column we go down the rows and that's the inside loop, and then the second the outside loop.

313
00:48:38,970 --> 00:48:43,470
Marisa Eisenberg: says okay you finished simulation number one move to simulation number two.

314
00:48:43,770 --> 00:48:49,980
Marisa Eisenberg: And then the inside loop runs again, and it does Okay, now we go through all the time steps okay move to simulation number three.

315
00:48:50,220 --> 00:48:56,460
Marisa Eisenberg: Now you run the inside loop again and you do all the time steps so that's how you code something like this, you want to run it a bunch of times.

316
00:48:56,730 --> 00:49:08,160
Marisa Eisenberg: And every time you run it you want to run all the time steps right so that's basically sort of the the rough idea of kind of how you build a lot of these things for a lot of the models we're going to build.

317
00:49:08,520 --> 00:49:17,490
Marisa Eisenberg: This inside loop will get done automatically in certain ways will provide it with the equations and how many times steps to run and it will just do it for us but.

318
00:49:18,150 --> 00:49:24,270
Marisa Eisenberg: I wanted to kind of start to get us a little bit of a sense of kind of just how you start to put these things together so i'm.

319
00:49:25,170 --> 00:49:36,390
Marisa Eisenberg: So, so you don't feel weird if this is still very confusing will actually formally introduce loops and if statements and all of that, in a little bit, but I just wanted to kind of give everybody a little bit familiar so.

320
00:49:37,230 --> 00:49:39,660
Marisa Eisenberg: Just the stimulus okay good go for.

321
00:49:39,870 --> 00:49:44,100
Michael Akira Lee Hayashi: One quick thing to also keep in mind, looking at this, so, so this is.

322
00:49:44,940 --> 00:49:49,920
Michael Akira Lee Hayashi: This is obviously stuff that we will come back to kind of from a structural perspective, but in terms of reading the code generally.

323
00:49:50,220 --> 00:49:57,540
Michael Akira Lee Hayashi: Often you'll see code that's written such that you have kind of setup stuff up at the top, all of the things happening here, these are.

324
00:49:57,780 --> 00:50:04,440
Michael Akira Lee Hayashi: These are defining variables they're creating structures that you're going to be using later, so this is all what I think it was kind of setup.

325
00:50:04,770 --> 00:50:12,660
Michael Akira Lee Hayashi: And then there's usually some chunk of code that's actually doing the heavy lifting So this is the simulation in this case.

326
00:50:12,930 --> 00:50:20,580
Michael Akira Lee Hayashi: And that's going to be pretty common when when we write code to run all sorts of models it's going to look very similar we're going to have a setup blob.

327
00:50:20,790 --> 00:50:32,460
Michael Akira Lee Hayashi: And then we're going to have some stuff that does the actual work so when you go and read someone else's code, for example, you can often kind of break it down into sections like that look for things that look like they're like.

328
00:50:33,090 --> 00:50:42,030
Michael Akira Lee Hayashi: they've got for loops or functions or things like that, because a lot of that's going to contain sort of the meat of the code and then some of the stuff surrounding it is often kind of.

329
00:50:42,270 --> 00:50:50,160
Michael Akira Lee Hayashi: set up an organization to make that work so when codes written it often does have some kind of intrinsic architectural structure to it.

330
00:50:51,390 --> 00:50:55,740
Michael Akira Lee Hayashi: it's not that these things just kind of get thrown around Willy nilly, and if you write code that does that.

331
00:50:57,210 --> 00:50:58,830
Michael Akira Lee Hayashi: don't don't tell me that you did it.

332
00:51:01,050 --> 00:51:04,200
Marisa Eisenberg: yeah yeah but and and to michael's point to you know.

333
00:51:05,070 --> 00:51:14,580
Marisa Eisenberg: part of what so here i've got this in like this little our markdown thing, where you can kind of write a little sort of notebook that has titles, and all this stuff but if you're writing a script.

334
00:51:14,790 --> 00:51:22,440
Marisa Eisenberg: You probably if you want to make your code readable to other people, you probably want to label your if you have a setup section label it that with comments.

335
00:51:22,680 --> 00:51:27,630
Marisa Eisenberg: And label the part that's running the main piece with you know so we'll show you kind of.

336
00:51:27,810 --> 00:51:40,230
Marisa Eisenberg: How you make comments in the code, how you leave like notes to yourself, essentially just sort of, say, like okay remember this is where i'm setting up all the pieces, this is where i'm running the for loops you know, like all of that kind of thing so we'll we'll get to that too.

337
00:51:41,280 --> 00:51:45,960
Michael Akira Lee Hayashi: So we have a question in the loop theoretical simulations for each Bead or five for each.

338
00:51:46,770 --> 00:51:47,880
Marisa Eisenberg: Okay okay.

339
00:51:48,600 --> 00:51:50,730
Michael Akira Lee Hayashi: So So could you scroll up the hair.

340
00:51:51,060 --> 00:51:53,940
Michael Akira Lee Hayashi: yeah cool right so.

341
00:51:54,960 --> 00:52:09,690
Michael Akira Lee Hayashi: We are we're running 200 steps and 10 simulations right so to kind of trace this through the code that num sims gets used in this outer loop here at the at the top there i'll annotate again, so I can point to stuff.

342
00:52:11,130 --> 00:52:29,580
Michael Akira Lee Hayashi: Which means that we are running this inner loop, which is sort of the drawing beads bit 10 times this drawing beads bits that uses numb steps which is 200 so that means that we draw 200 beads 10 times.

343
00:52:29,910 --> 00:52:30,540
Michael Akira Lee Hayashi: it's not a real.

344
00:52:31,440 --> 00:52:47,520
Marisa Eisenberg: Exactly yep yep exactly and and the 10 so it's it's not five for each you're running the whole process of drawing however of drawing all 200 each of the 10 types, so does that make sense that help.

345
00:52:49,080 --> 00:52:49,590
Marisa Eisenberg: ish.

346
00:52:50,730 --> 00:53:00,060
M. Victoria Salgado: Sorry, I was asking the question so yeah I think I got that my only notice that, in the code you put that, for example, is you say okay.

347
00:53:00,390 --> 00:53:19,080
M. Victoria Salgado: In the in the inner loop, you are going to model, the probability of choosing a yellow bit so you're doing that only with yellow and then you do exactly the same with blue so basically you do try and restrict 200 steps 10 simulations for the yellow and then the same for the blue.

348
00:53:19,680 --> 00:53:20,640
Marisa Eisenberg: Oh no we're doing.

349
00:53:21,720 --> 00:53:22,980
M. Victoria Salgado: is going to be the same.

350
00:53:23,100 --> 00:53:26,280
M. Victoria Salgado: If you choose blue orange yellow at the beginning.

351
00:53:26,670 --> 00:53:31,320
Marisa Eisenberg: yeah so so so that is a great question and actually so the the reason.

352
00:53:31,380 --> 00:53:34,170
Marisa Eisenberg: Because the probabilities yellow.

353
00:53:34,320 --> 00:53:43,050
Marisa Eisenberg: The probability of the blue, will be one minus the probability of the right so at every time step, so if I start with 5050 so i've got.

354
00:53:43,530 --> 00:53:54,900
Marisa Eisenberg: Like five you know half half and then So what we can do actually wait, let me step through the code and then see if it clears it up and then, if not let's let's come back to it so because I think it'll make it easier yeah awesome.

355
00:53:55,290 --> 00:53:57,690
Marisa Eisenberg: um but that's a great question okay good so.

356
00:53:58,020 --> 00:54:06,600
Marisa Eisenberg: The so as Victoria just nodded what we're gonna do is we're gonna we're gonna start with the figuring out what the probability of pulling a yellow Bead is so.

357
00:54:06,780 --> 00:54:17,910
Marisa Eisenberg: Remember that we're starting from step two so we filled the first row with all ones for yellow and all ones for blue so we know that the number of leads that we have at the beginning of step to.

358
00:54:18,390 --> 00:54:28,980
Marisa Eisenberg: Time step two is one and what, and so what we're going to do is we're going to say Okay, if I is equal to two, then I want to say how many yellow beads did I have.

359
00:54:29,250 --> 00:54:39,600
Marisa Eisenberg: For this simulation run at the previous timestamps so two minus one is going to be one so that's the first time step so i'm going to say how many leads did I have it the first time step.

360
00:54:39,930 --> 00:54:47,040
Marisa Eisenberg: divided by the number of yellow beads plus the number of blue beads at the first time step, the last time step right so i'm on step two.

361
00:54:47,940 --> 00:54:56,220
Marisa Eisenberg: Two minus one is going to be one, and so this will be the number of yellow beads at the first time step, plus the number of blue beads at the first five steps so that tells me.

362
00:54:57,000 --> 00:55:00,840
Marisa Eisenberg: yellow over yellow plus blue will give me the probability of getting it yeah.

363
00:55:01,500 --> 00:55:15,270
Marisa Eisenberg: And, and then what i'm going to do is i'm going to take a uniform probability so basically i'm going to flip a coin with this waiting so i'm going to say with this probability I you know they basically like yeah well we'll see.

364
00:55:15,900 --> 00:55:18,840
Michael Akira Lee Hayashi: But well hold up, so this is this is just trying a random.

365
00:55:18,840 --> 00:55:20,490
Marisa Eisenberg: Uniform random number one.

366
00:55:21,060 --> 00:55:27,660
Marisa Eisenberg: yeah yeah exactly so we're going to draw a random uniform number between zero and one but we're going to use that to essentially flip the coin so.

367
00:55:28,980 --> 00:55:39,750
Marisa Eisenberg: The classic way that for like, if you want to make a choice with a certain probability the classic way to do that in code is to draw a uniform random number between zero and one.

368
00:55:40,080 --> 00:55:51,270
Marisa Eisenberg: And then, whatever your probability is so let's say it was 5050 that uniform random number between zero and one has a 5050 shot, of being above Point five or below Point five right so.

369
00:55:51,900 --> 00:56:06,480
Marisa Eisenberg: You you take your P yellow and if this random number between zero and one is less than yellow than PLO, you say that the be that you chose was yellow if it's greater than PLO you say the Bead that you chose was blue so.

370
00:56:07,080 --> 00:56:18,420
Marisa Eisenberg: What we're going to do is we're going to make an if statement, and so the I choose a random number between zero and one, and then I say is that random number less than PLO.

371
00:56:19,050 --> 00:56:27,030
Marisa Eisenberg: If it is then i'm going to say, we chose a yellow beat if it's not so this l statement here means.

372
00:56:27,750 --> 00:56:38,370
Marisa Eisenberg: that the only other option is that this random number had to be greater than or equal to PLO and it's basically probability zero that it exactly equal co so we're not going to really worry about that, but.

373
00:56:39,840 --> 00:56:50,130
Marisa Eisenberg: So essentially if it wasn't this if this if statement isn't true, it has to be that we pulled a blue beat that that we must have chosen a blue beat and so.

374
00:56:50,460 --> 00:56:57,630
Marisa Eisenberg: This piece of code adds an extra yellow Bead and this piece of code adds an extra blue Bead and basically says okay.

375
00:56:57,870 --> 00:57:13,470
Marisa Eisenberg: We pulled you know, in this case a yellow been so the number of yellow beads for the current time step after we finish pulling whatever is going to be the old number of yellow beads plus one more and so that's basically what we're going to does that make sense to everybody, as a thing.

376
00:57:14,610 --> 00:57:19,440
Marisa Eisenberg: Okay, does that and that hopefully I answered your question Victoria does that make more sense now awesome.

377
00:57:19,560 --> 00:57:20,730
M. Victoria Salgado: Yes, thank you.

378
00:57:21,060 --> 00:57:21,420
Marisa Eisenberg: As a.

379
00:57:21,450 --> 00:57:35,490
Michael Akira Lee Hayashi: yeah good good good and even though this is a fairly small bit of code, there are some design decisions in here that are kind of interesting right so so we could have done something like also assigning out the probability of blue oops I can't write a p.

380
00:57:38,850 --> 00:57:52,050
Michael Akira Lee Hayashi: So, and then that just be like blue beads over blue plus yellow right and then in the in the F block, we could be like is the choice less than the probability of yellow or is it less than the probability of blue.

381
00:57:52,800 --> 00:57:53,220
Marisa Eisenberg: But.

382
00:57:53,610 --> 00:58:09,090
Michael Akira Lee Hayashi: We can we can exploit the fact that, like Murcia said only two things can happen you draw yellow or blue so we don't ever really need to explicitly calculate this thing instead we can just rely on the fact that this is actually equal to one minus P yellow.

383
00:58:09,510 --> 00:58:09,810
yeah.

384
00:58:11,070 --> 00:58:14,580
Michael Akira Lee Hayashi: And now we've saved ourselves a little bit of calculation.

385
00:58:15,690 --> 00:58:23,910
Michael Akira Lee Hayashi: There are also some in different languages, there may or may not be ways to kind of directly do a weighted coin flip essentially so.

386
00:58:24,120 --> 00:58:34,860
Michael Akira Lee Hayashi: This the process we're simulating is awaited coin flip word with some probability you get essentially a zero with some probability you get what we're not directly doing that, instead, where.

387
00:58:36,060 --> 00:58:40,770
Michael Akira Lee Hayashi: Instead we're kind of indirectly performing that weighted coin flip by first drawing.

388
00:58:41,310 --> 00:58:55,950
Michael Akira Lee Hayashi: A random number that can take any value between zero and one and then seeing whether that value is below some threshold check value, which is, which is a fairly common way to do a simple sort of waited waited coin flip, but that is to say that sometimes.

389
00:58:57,810 --> 00:59:02,370
Michael Akira Lee Hayashi: Sometimes your implementation of a thing may not exactly be.

390
00:59:03,060 --> 00:59:07,800
Michael Akira Lee Hayashi: Completely direct based on the description or the mathematics of the problem, because.

391
00:59:08,010 --> 00:59:19,530
Michael Akira Lee Hayashi: Translating that into a programming language means working with slightly different structures or maybe it means you want to optimize your performance, which means not using a totally direct method so.

392
00:59:19,560 --> 00:59:23,940
Michael Akira Lee Hayashi: yeah this this comes, this will come up again and again and again, where.

393
00:59:24,570 --> 00:59:40,230
Michael Akira Lee Hayashi: When when we read each other's code like morris's code, it looks different from my code and we make different design decisions in how we choose to implement things so sometimes will be more or less direct about a particular thing, depending on how we've chosen to write it.

394
00:59:40,500 --> 00:59:47,070
Marisa Eisenberg: yeah and and there's often the case that you can write code that is more interpreted will or.

395
00:59:47,430 --> 00:59:56,250
Marisa Eisenberg: But it may not be the fastest way to do it, or you can write code that's very fast, but may not or efficient, but may not be very readable.

396
00:59:56,610 --> 01:00:14,310
Marisa Eisenberg: And so that I think is a thing, but I do want to I think like I do want to come back to this uniform thing I think sometimes this is confusing does that make sense to everybody, why this works, so if you think of between 00 Come on, he was zero you can do it.

397
01:00:15,780 --> 01:00:21,390
Marisa Eisenberg: Oh, my annotate always get stuck there's going to be like eight zeros later yeah it's very annoying.

398
01:00:22,140 --> 01:00:38,670
Marisa Eisenberg: know why it does it just makes like little dots okay there's a zero here's a one, and so, if you so let's say we're not at the first step let's say we're somewhere further down in the number of steps and let's say that the the when you calculate PLO oh come on.

399
01:00:39,780 --> 01:00:40,530
Marisa Eisenberg: You can do it.

400
01:00:42,810 --> 01:00:45,510
Marisa Eisenberg: I promise I made a little mark where PLO would be.

401
01:00:47,490 --> 01:00:48,300
Marisa Eisenberg: Oh for heaven's sake.

402
01:00:50,190 --> 01:00:51,300
Marisa Eisenberg: Ask your favorite Michael.

403
01:00:53,130 --> 01:00:53,400
Marisa Eisenberg: Okay.

404
01:00:56,400 --> 01:00:58,140
Marisa Eisenberg: pretend that i'm.

405
01:00:58,800 --> 01:01:14,820
Marisa Eisenberg: PLO Oh, I tried to write a P and it's not work this this little mark in the middle here pretend that's PLO is like point whatever seven or something right Okay, and so we want basically to get a yellow beat with.

406
01:01:15,420 --> 01:01:25,140
Marisa Eisenberg: Like a 70% chance of getting a yellow Bead and a 30% chance of getting a blue beam right is what we want, and so, if you choose a random number between zero and one.

407
01:01:25,980 --> 01:01:29,490
Marisa Eisenberg: And then you check whether it's less than Point seven or not.

408
01:01:29,880 --> 01:01:45,630
Marisa Eisenberg: that the answer to is it less than Point seven has a 70% chance of being the case, right and so that means that you'll get a 70% chance of getting yes it's less than Point seven and a 30% chance of getting no it's greater than point.

409
01:01:45,630 --> 01:01:46,530
Marisa Eisenberg: Seven right and so.

410
01:01:46,680 --> 01:01:57,480
Marisa Eisenberg: that's a way of US basically setting a yes, no answer with a 70% chance, or whatever percent chance you want, depending on what you said this to does that make sense, everybody to think okay cool.

411
01:01:58,020 --> 01:01:58,710
Marisa Eisenberg: hi Thank you.

412
01:02:01,530 --> 01:02:04,860
Marisa Eisenberg: that's good I like it yeah there we go collaborative this is good.

413
01:02:05,040 --> 01:02:10,500
Marisa Eisenberg: um okay so good, so there we go so um alright, so let me i'm going to clear them all.

414
01:02:11,100 --> 01:02:20,850
Marisa Eisenberg: Alright, so Okay, so we ran the thing this has been a little bit of a detour into the code, but let's but now the last thing, of course, we want to do is plot the results and.

415
01:02:21,390 --> 01:02:32,250
Marisa Eisenberg: So we can plot all the proportion of yellow beads for all of our runs and you can see, you get a bunch of different things and it's interesting right so like the the.

416
01:02:32,670 --> 01:02:40,410
Marisa Eisenberg: A couple of things to notice here one, you can see that it takes bigger kind of more jagat he steps at the beginning.

417
01:02:40,710 --> 01:02:49,770
Marisa Eisenberg: that's because, at the beginning there's only certain proportions, you can occupy right at time step one you have to be 5050 at a time step two you can only be.

418
01:02:50,340 --> 01:03:02,430
Marisa Eisenberg: Two thirds one third of something those are the only two options at times step two right at time step three so at the in the first few steps, there are only a couple of proportions, you can have because you only have three beads right and so.

419
01:03:02,820 --> 01:03:07,680
Marisa Eisenberg: So there's only certain choices, you can take so it's kind of chunky at the beginning.

420
01:03:08,370 --> 01:03:16,440
Marisa Eisenberg: And then it sort of becomes more fine grained wiggles because you have a lot more beads and so you can occupy a lot more different possible proportions.

421
01:03:16,770 --> 01:03:22,260
Marisa Eisenberg: But you can see that it kind of runs does it does this look like what we expected.

422
01:03:22,590 --> 01:03:27,780
Marisa Eisenberg: Probably not really right like we're seeing some we only ran at 10 times but we're seeing some.

423
01:03:28,020 --> 01:03:37,650
Marisa Eisenberg: kind of 50 ish sure you know, like 30s 40s it's not totally clear there are some though there's these kind of chunks here, where you we've got three that are kind of in the more extremes.

424
01:03:37,890 --> 01:03:45,840
Marisa Eisenberg: And you could you could make a histogram of the proportion of yellow beads but 1010 simulations is just not really enough so let's rerun this.

425
01:03:46,170 --> 01:03:55,200
Marisa Eisenberg: And i'm sorry you can't see my are my main Arco thing here but i'm going to change this to instead of 10 simulations i'm going to run 100 simulations and let's try running it.

426
01:03:56,040 --> 01:04:05,340
Marisa Eisenberg: see what we get is doing it there, we go Okay, so now we're going to run it same code, but we changed number of simulations to be 100.

427
01:04:05,670 --> 01:04:11,400
Marisa Eisenberg: And now you can see, you get this kind of interesting it looks like a woven cloth or something it's kind of an interesting looking plot.

428
01:04:11,700 --> 01:04:25,470
Marisa Eisenberg: But you can see, we get a bunch of different possible values it's all across the board, and the number of run the histogram, so this is how many runs how many simulations had this proportion of yellow beads.

429
01:04:26,010 --> 01:04:35,610
Marisa Eisenberg: Is kind of all over the place, maybe with a little leaning this way but it's not really clear let's run it again let's do it with 1000 simulations.

430
01:04:37,470 --> 01:04:38,640
Marisa Eisenberg: let's see what happens.

431
01:04:39,720 --> 01:04:46,320
Marisa Eisenberg: Okay, so we run 1000 now we're starting to get some really like okay we're pretty well covering what's going on.

432
01:04:47,070 --> 01:04:54,060
Marisa Eisenberg: You can see each run I mean whatever it looks like spaghetti you can't really track any single run at this point right, but you can see.

433
01:04:54,720 --> 01:05:10,530
Marisa Eisenberg: At least to my I just looking at this, it doesn't look like there's a tendency towards one thing or another necessarily right and and if you plot the histogram So this is the distribution of the proportion of yellow beads what does this look like two people.

434
01:05:15,300 --> 01:05:16,620
Rishi Chanderraj: Uniform distribution.

435
01:05:16,890 --> 01:05:17,610
Marisa Eisenberg: yeah it looks like.

436
01:05:20,550 --> 01:05:25,080
Marisa Eisenberg: This region yeah So if you run this even more times.

437
01:05:25,110 --> 01:05:26,160
Rishi Chanderraj: Just for kicks.

438
01:05:26,430 --> 01:05:29,550
Marisa Eisenberg: I don't know if 10,000 will make it take a really long time, but I guess we're gonna find out.

439
01:05:30,750 --> 01:05:32,010
Marisa Eisenberg: Who, it was thinking.

440
01:05:34,050 --> 01:05:43,200
Marisa Eisenberg: Okay, now, not that long okay we're gonna it'll be it's the plotting is what's actually taking the longest but I bet it's like sad plot of all the trajectories at the same time.

441
01:05:45,180 --> 01:05:53,070
Marisa Eisenberg: You all can't see the window that's actually running it, but it is thinking hard about the plot there yeah okay alright so here's 10,000 of them.

442
01:05:53,550 --> 01:06:05,100
Marisa Eisenberg: ran it for 10,000 simulations and now you can see it, this it looks kind of cool honestly I really liked the way these things, end up looking, but you can see that there's only certain choices it can take.

443
01:06:05,370 --> 01:06:13,470
Marisa Eisenberg: And then you know when you get to enough leads it's kind of harder to distinguish, but this is now pretty clearly starting to look like a uniform distribution right so.

444
01:06:13,710 --> 01:06:24,840
Marisa Eisenberg: It turns out weirdly, even though there is this it's there is this rich get richer phenomenon to this model it ends up somehow that at the end if you run it for long enough, you get.

445
01:06:25,380 --> 01:06:35,160
Marisa Eisenberg: You get a uniform distribution of what proportion of yellow beats we have and so um so let's explore a little bit of what is going on there, and why that might be.

446
01:06:39,060 --> 01:06:40,200
Marisa Eisenberg: let's switch back over here.

447
01:06:41,850 --> 01:06:52,290
Marisa Eisenberg: And i'll post, I think this code is up on the on the canvas site already actually so if it's not all at it in a little bit, but but let's take a look at sort of what's going on, so um.

448
01:06:52,770 --> 01:06:59,130
Marisa Eisenberg: We we run it a bunch of times as this point is earned it's got this kind of rich get richer dynamics.

449
01:06:59,460 --> 01:07:07,110
Marisa Eisenberg: The the history matters right, this is kind of what we got to when we were talking about it, but who wins early on, will affect your probability of.

450
01:07:07,350 --> 01:07:12,660
Marisa Eisenberg: The different distributions at the next step so Why then do we see this uniform distribution.

451
01:07:12,960 --> 01:07:21,570
Marisa Eisenberg: Well okay I stole this from a from a really nice actually blog about pull us earn but, in that they were doing white or white and black beads and so.

452
01:07:21,960 --> 01:07:31,620
Marisa Eisenberg: sorry that the color the naming is different, but yellow blue whatever and you start with one beat of each color and so why is it i'm sorry.

453
01:07:32,940 --> 01:07:35,070
Marisa Eisenberg: Was there a question adrianna.

454
01:07:38,010 --> 01:07:46,500
Marisa Eisenberg: Oh, the name of the file is yeah I think it's like please earn simulator something, let me check it should be.

455
01:07:47,220 --> 01:07:54,840
Marisa Eisenberg: Oh, you know what I didn't post the code i'm sorry I only posted the APP Oh, the link to the APP i'll post the code after this class yeah sorry about that.

456
01:07:55,500 --> 01:08:04,740
Marisa Eisenberg: I can post it on the break and okay yeah sure thing so okay so, so why, why is it that it looks uniform at the end so.

457
01:08:05,160 --> 01:08:17,100
Marisa Eisenberg: let's say you pick you start with one yellow one bluebeat or one white one black Bead whatever you pick one or the other, you end up with two yellow one blue or you know the other way around, and.

458
01:08:17,820 --> 01:08:25,350
Marisa Eisenberg: Then, so you would think and it is true that gives you a two thirds chance of getting a yellow or white, or whatever you know name.

459
01:08:25,890 --> 01:08:32,940
Marisa Eisenberg: Bead so you have a two thirds chance of getting a white Bead which would put you here at three White beans and one black Bead but.

460
01:08:33,390 --> 01:08:38,640
Marisa Eisenberg: You have a one third chance of getting a black Bead right or a bluebeat if we're using our original naming scheme.

461
01:08:38,940 --> 01:08:51,030
Marisa Eisenberg: And so, and that will put you over here now, if you go over here, you have to blue beads and and or two black beads and one white feed, you have a two thirds chance of pulling another blackbeard.

462
01:08:51,330 --> 01:09:03,240
Marisa Eisenberg: And a one third chance of pulling a white Bead, then what it's interesting what ends up happening is that, even though it's true that either of these two options kind of skews you.

463
01:09:03,600 --> 01:09:10,500
Marisa Eisenberg: towards the more extreme scenarios they each provide a one third chance of reaching the Center one.

464
01:09:10,830 --> 01:09:18,960
Marisa Eisenberg: And that one third from each possibility adds up to give you the same probability of ending up here as here or here.

465
01:09:19,200 --> 01:09:29,760
Marisa Eisenberg: And so it ends up being true, as you keep going even though let's say this one will tend you towards further expansions of the white beads or further expansions of the black beads.

466
01:09:30,030 --> 01:09:34,950
Marisa Eisenberg: or in this case, maintaining something as close to status quo, as you can the.

467
01:09:35,670 --> 01:09:45,540
Marisa Eisenberg: The Middle sort of trajectory and plus these little side guys end up, meaning that all four of these have the same like sort of probability of.

468
01:09:45,990 --> 01:09:50,910
Marisa Eisenberg: happening right and that that just keeps happening at each kind of step in the pyramid.

469
01:09:51,210 --> 01:10:01,350
Marisa Eisenberg: The there's always the off chance gets added to the other possibility to maintain it so that they all have the same probability of occurring does that make sense, everybody has a thing so.

470
01:10:01,950 --> 01:10:04,620
Marisa Eisenberg: Okay, so it's this weird thing, even though.

471
01:10:04,950 --> 01:10:14,160
Marisa Eisenberg: It has this rich get richer behavior, and that is a true observation that is actually you know it is the case that, for a single simulation when you end up here you're more likely to go here.

472
01:10:14,400 --> 01:10:26,070
Marisa Eisenberg: But the the overall picture is going to end up being a uniform and which I think is kind of interesting, and so the the reason we did this is because it's a population model.

473
01:10:26,370 --> 01:10:38,940
Marisa Eisenberg: um but it's so you know we're thinking of bacteria or whatever, even though it's beads but um it can be surprising, you know the the, the point is earned simulation does an interesting thing like.

474
01:10:39,810 --> 01:10:48,480
Marisa Eisenberg: there's when you do it with like so with some groups, the fact that you start with one and one they think it's going to stay 5050 the whole way down.

475
01:10:48,960 --> 01:10:59,010
Marisa Eisenberg: And then usually my like more at the public health folks kind of catch on to the idea that the early winds are going to affect it and so there's a kind of.

476
01:10:59,280 --> 01:11:12,840
Marisa Eisenberg: Like they sort of catch like people who are kind of used to thinking about population patterns and that kind of stuff will catch on to that, but it's the like nobody ever thinks ahead that it's going to end up being uniform in that way.

477
01:11:13,380 --> 01:11:23,220
Marisa Eisenberg: Because it's a really weird it's a weird phenomenon right, and so I think it's a nice example of how really simple models can be surprising.

478
01:11:24,540 --> 01:11:30,300
Marisa Eisenberg: And part of what complex systems models can help us do is sort of uncover what.

479
01:11:31,290 --> 01:11:40,680
Marisa Eisenberg: The sort of the surprising implications of rules or mechanisms that we kind of think we understand, but maybe we don't understand the full implications of.

480
01:11:41,040 --> 01:11:46,470
Marisa Eisenberg: And and i'll do a little thing on this unknown knowns thing in a second but um so.

481
01:11:47,220 --> 01:11:56,280
Marisa Eisenberg: I guess like you know if you think about this, we talked about the analogy that you know sort of mentioned at the beginning was like what if you were thinking of this as representing.

482
01:11:56,730 --> 01:12:06,270
Marisa Eisenberg: strains of bacteria or something it's interesting because if you if you look at how, so let me hang on i'm going to rerun this with 10 really quick.

483
01:12:09,180 --> 01:12:15,750
Marisa Eisenberg: Because I want to point out something and i'm going to run it instead of for 200 i'll run it for $2,000 paste the picture into that.

484
01:12:17,490 --> 01:12:18,510
Okay yeah.

485
01:12:19,680 --> 01:12:29,820
Marisa Eisenberg: So sorry i'm just be silly and take a screenshot So if you look at, so I just ran the simulation again for just 10 simulations.

486
01:12:30,390 --> 01:12:44,040
Marisa Eisenberg: But I ran it out to 2000 times steps, instead of 200 type steps so if you look at how this works for a single simulation it's interesting right, it has a lot of fluctuation at the beginning.

487
01:12:44,490 --> 01:12:50,460
Marisa Eisenberg: But that that insight that the early wins are going to kind of set you up on a trajectory.

488
01:12:50,640 --> 01:12:58,830
Marisa Eisenberg: is true right, you know if you get a lot of early wins, and you end up with a high proportion of yellow beads that sticks then pretty much for the rest of the simulation.

489
01:12:59,040 --> 01:13:07,440
Marisa Eisenberg: You don't really see it's possible technically for even when you have you know, whatever 80% yellow beads that you.

490
01:13:07,770 --> 01:13:20,970
Marisa Eisenberg: managed to pick the 20% that are blue every time for a bunch of times and this moves down here but it's very unlikely and so these simulations end up mostly staying pretty flat once they've kind of reached settled into their proportion.

491
01:13:21,240 --> 01:13:33,240
Marisa Eisenberg: And so it's an interesting model right like that that observation about the early wins is true, but across all the different simulations and ends up being the case that you get a uniform right and so um.

492
01:13:33,900 --> 01:13:46,980
Marisa Eisenberg: I think it's interesting to think about models like this, for what they could represent in the real world, if you found a population of two bacteria and you observed that they were at 60 or 80%.

493
01:13:47,370 --> 01:13:55,470
Marisa Eisenberg: yellow you might conclude that the yellow bacteria were more fit and more able to compete in that environment for something right.

494
01:13:55,740 --> 01:14:03,690
Marisa Eisenberg: i'm supposing that they both ate the same food or whatever, but it's not true, it just happens that early on the yellow bacteria had an advantage.

495
01:14:03,900 --> 01:14:12,750
Marisa Eisenberg: And so they ended up at a higher proportion right and so like I think it's interesting to think about some of this and kind of what it might mean for what we might observe or.

496
01:14:12,990 --> 01:14:17,700
Marisa Eisenberg: different things that we could model now, this is a terrible model of bacteria or really sort of anything.

497
01:14:17,970 --> 01:14:28,710
Marisa Eisenberg: You know they don't they don't take turns replicating they don't do it every time stuff like that you know what I mean Oh, that is not true there's competition, they have to divide there's a whole bunch bunch of reasons that this is not.

498
01:14:29,100 --> 01:14:33,750
Marisa Eisenberg: A reasonable model for bacteria at all, but I think it's an interesting thing and.

499
01:14:34,230 --> 01:14:51,870
Marisa Eisenberg: So I think it's it's good I feel like Essentially, this is an useful illustration of how you can use models to kind of interrogate your own thinking about how a mechanism might work and what might actually be underlying something a phenomenon that you see in the world and.

500
01:14:52,410 --> 01:14:53,040
Michael Akira Lee Hayashi: So I think.

501
01:14:53,460 --> 01:14:53,790
Marisa Eisenberg: yeah.

502
01:14:54,210 --> 01:15:00,030
Michael Akira Lee Hayashi: I think one of the points that you made a I like that I like to come back to is.

503
01:15:00,600 --> 01:15:09,210
Michael Akira Lee Hayashi: If we see something that's happening in the real world if we see a disease outbreak, or if we see bacterial colonies, with different proportions of bacteria.

504
01:15:09,600 --> 01:15:19,470
Michael Akira Lee Hayashi: One of the things that I think is really important to keep in mind is that we only saw and we could only ever see one manifestation of that process ever we don't get to rewind and do it.

505
01:15:19,470 --> 01:15:20,820
Michael Akira Lee Hayashi: Again, so.

506
01:15:20,940 --> 01:15:24,480
Michael Akira Lee Hayashi: When we try to make models of disease outbreaks, for example.

507
01:15:25,020 --> 01:15:29,730
Michael Akira Lee Hayashi: we're in part, relying on the fact we're hoping that the one that we saw.

508
01:15:30,270 --> 01:15:42,840
Michael Akira Lee Hayashi: is telling us something about how all of the ones that could have happened could have happened and that's a really hard process as as we see here right like looking at any single trajectory from employee has earned system.

509
01:15:43,860 --> 01:15:51,990
Michael Akira Lee Hayashi: Might not necessarily tell us a whole lot about how we got there the process that goddess there's lots of processes that could do that sort of thing so.

510
01:15:52,320 --> 01:16:06,210
Michael Akira Lee Hayashi: The fact that we only ever get to run the world once in some sense means that we're always playing this difficult game of did I put enough in the model to capture what not just what happened, but what could have happened.

511
01:16:06,240 --> 01:16:14,850
Marisa Eisenberg: yep and one of the main purposes of a lot of the systems models that we're going to talk about is actually to kind of run the tape again.

512
01:16:15,600 --> 01:16:24,540
Marisa Eisenberg: In in at least in a computational in a sort of in silicone world right like we can basically say Okay, this is how it played out this time but.

513
01:16:25,410 --> 01:16:32,490
Marisa Eisenberg: If we had done this intervention if this had been different if just the random chance had played out differently.

514
01:16:32,730 --> 01:16:44,130
Marisa Eisenberg: You know wouldn't have turned out the same, and you can use models to try and help estimate those kinds of questions and trying to figure some of that out so Okay, so that is that guy and.

515
01:16:45,210 --> 01:16:47,610
Marisa Eisenberg: OK questions about the polian certain thing.

516
01:16:52,650 --> 01:16:54,450
Marisa Eisenberg: There is compete with that make sense.

517
01:16:55,710 --> 01:17:00,360
Marisa Eisenberg: Okay okay good excellent okay um alright so.

518
01:17:02,280 --> 01:17:10,230
Marisa Eisenberg: I want to make sure we kind of get well, I guess, we have more time because we're going to intersperse, but I want to move us through this so usually I have everybody kind of like list out.

519
01:17:10,530 --> 01:17:17,820
Marisa Eisenberg: Things that they when they think of a complex systems system, what do they think of i'm going to skip through that and just kind of list a few myself here.

520
01:17:18,210 --> 01:17:30,390
Marisa Eisenberg: But so when people make when you ask what is a complex system, people often think of things like cities or societies or the brain and you know, maybe, maybe people mentioned traffic flow that comes up a lot.

521
01:17:30,930 --> 01:17:46,380
Marisa Eisenberg: or like ecological network so like you know sort of like food web that kind of thing and climate change is another one that gets brought up a lot as an example of a complex system, one of my favorites is murmur of starlings if people seen these before, is this the thing that.

522
01:17:47,520 --> 01:17:56,310
Marisa Eisenberg: No, I see total blank faces okay I love this one, because it looks like a bird these are actually all themselves each of these dots is one starling and.

523
01:17:56,850 --> 01:18:04,500
Marisa Eisenberg: When you get a bunch of starlings together, you should Google everybody should Google memorization of starlings and just like watch the videos of these.

524
01:18:04,740 --> 01:18:15,030
Marisa Eisenberg: You when you get a bunch of starlings together the flocking dynamics can produce these incredibly intricate swirly patterns and if you've ever seen like fish flocking fish.

525
01:18:15,480 --> 01:18:21,780
Marisa Eisenberg: What is it called when fishes do this schools, there we go fish schooling behaviors they can also do some like wild things.

526
01:18:22,080 --> 01:18:28,680
Marisa Eisenberg: And if anybody finds a really good admiration video please feel free to throw it in the chat but, basically, they can make these incredibly.

527
01:18:28,980 --> 01:18:34,560
Marisa Eisenberg: Like kind of interesting swirly things where the flock produces these kind of wild.

528
01:18:34,980 --> 01:18:43,440
Marisa Eisenberg: turbulent looking patterns and and it's a nice example of a complex system complex systems are often one of their hallmarks is that they have many agents.

529
01:18:43,740 --> 01:18:48,450
Marisa Eisenberg: Operating and what might be complex, but what might be simple ways so.

530
01:18:48,900 --> 01:18:56,700
Marisa Eisenberg: um but the interactions of those agents produces complex behavior so in admiration of starlings or any other flock.

531
01:18:57,030 --> 01:19:07,350
Marisa Eisenberg: there's not like a genius bird who is like out there, directing traffic you go there you go there by That way, you know what I mean there's not like a leader who is extra smart who's telling them what to do.

532
01:19:07,620 --> 01:19:12,570
Marisa Eisenberg: All the birds are basically operating on the same set of rules they're basically all sort of saying like well.

533
01:19:12,810 --> 01:19:20,160
Marisa Eisenberg: I want to get to food, maybe I want to kind of spy with my classmates so I don't get eaten, but I don't want to fly too close to them will bang into each other.

534
01:19:20,400 --> 01:19:26,010
Marisa Eisenberg: And so you know, a couple of simple rules, I kind of want to steer along with my classmates and stay close but not too close.

535
01:19:26,340 --> 01:19:33,030
Marisa Eisenberg: You know, is actually all that you need in simulations there's a fun model called boys and that that.

536
01:19:33,720 --> 01:19:47,250
Marisa Eisenberg: That all just that simple collection of rules if you put a bunch of agents, like a bunch of birds that follow those rules, you get these wild swirling patterns and so complex systems one of their kind of hallmarks is that.

537
01:19:48,150 --> 01:19:56,040
Marisa Eisenberg: it's the collective behavior of a population interacting that is often what drives the the dynamics that you see and and so.

538
01:19:56,790 --> 01:19:58,080
Michael Akira Lee Hayashi: What is a complex system.

539
01:19:58,140 --> 01:20:03,030
Marisa Eisenberg: it's a collection of components that interact and often nonlinear ways, although it doesn't have to be.

540
01:20:04,410 --> 01:20:12,630
Marisa Eisenberg: hiroki say i'm on has a great book on complex systems methods and if I haven't put it in the on the page i'll put it up later it's a free book so that's Nice.

541
01:20:13,680 --> 01:20:24,090
Marisa Eisenberg: And he gives a nice kind of definition here of that's a little more detailed, one of the main features that you often see for complex systems is.

542
01:20:24,690 --> 01:20:31,620
Marisa Eisenberg: emergent behavior at macroscopic scale so Does that mean you have simple rules governing sort of local interactions between individuals.

543
01:20:32,250 --> 01:20:37,980
Marisa Eisenberg: You know that might be disease transmission, or it might be birds interacting with each other or whatever it might be.

544
01:20:38,250 --> 01:20:49,050
Marisa Eisenberg: And then, at the larger population scale you observe more interesting complex emergent behavior that seems like sort of more than the sum of its parts, where you get these wild turbulent.

545
01:20:49,470 --> 01:21:02,640
Marisa Eisenberg: murmur Asians of starling so you get a pandemic that last three years and has a bunch of waves that kind of turn on and off and variants that emerged at different times you know all of those kinds of things right, and so um.

546
01:21:03,300 --> 01:21:15,570
Marisa Eisenberg: So that's a hallmark of a complex system and and so complex systems tend to have a emergent behavior they tend to be sort of self organizing they tend to have adaptive interactions.

547
01:21:16,320 --> 01:21:33,420
Marisa Eisenberg: A lot of what's called fat tail behavior, so this is when you have probability distributions that have more mass in the tales of the distribution, then, is sort of typical and they tend to see phenomenon like chaos non linearity tipping points, all of these kinds of different things and.

548
01:21:34,050 --> 01:21:46,110
Michael Akira Lee Hayashi: Also, from kind of kind of from a definitional perspective when we think about complex systems versus other sorts of things, I think it can be helpful to distinguish complexity for complicated.

549
01:21:46,500 --> 01:21:50,520
Michael Akira Lee Hayashi: In some sense, so we often think of complex systems as being ones that.

550
01:21:51,030 --> 01:22:05,760
Michael Akira Lee Hayashi: generate interesting behavior and have all of the parts, they need, and none of the ones that they don't so each bit in a complex system is necessary to maintain the function of that system if I take if I take one thing out the whole thing falls apart.

551
01:22:06,150 --> 01:22:06,450
Marisa Eisenberg: yeah.

552
01:22:06,510 --> 01:22:18,630
Michael Akira Lee Hayashi: Although complicated system might have a lot of bits but some of them, you could take out and it's going to work just fine without it and it's not going to meaningfully change the behavior of that system so.

553
01:22:19,560 --> 01:22:30,510
Michael Akira Lee Hayashi: When we when we think about modeling systems, and we think about how much detail we're going to put in like how many different mechanisms are we going to build the model, sometimes it can be helpful to think about which ones.

554
01:22:31,290 --> 01:22:36,330
Michael Akira Lee Hayashi: Which ones, form a complex system versus which ones are just complications.

555
01:22:36,510 --> 01:22:49,770
Marisa Eisenberg: yeah and and I will say also that that distinction is often quite fuzzy and depends on exactly what you're doing and it's not always clear, even when you're building the system yourself so certainly biological creatures.

556
01:22:50,070 --> 01:23:01,920
Marisa Eisenberg: are complicated and and complex right like you know we have there are like you know if you if you learn one thing from evolution is that most mutations don't really do anything, or they might be deleterious but you know.

557
01:23:02,160 --> 01:23:09,990
Marisa Eisenberg: Like so there's clearly plenty of wiggle room in most things, but they're you when you're trying to build a model to avoid.

558
01:23:10,590 --> 01:23:16,020
Marisa Eisenberg: Making something that's just as difficult to understand, as the real system that you're trying to gain insight into.

559
01:23:16,260 --> 01:23:29,310
Marisa Eisenberg: You have to choose what are the sort of simple what's the simplified representation that captures the essential features and that's I think kind of hard question between complicated and complex I usually joke, so that when.

560
01:23:29,940 --> 01:23:36,840
Marisa Eisenberg: I call something a complex system when it's working and when it's broken and not working, then it's complicated but uh but yes.

561
01:23:36,990 --> 01:23:37,410
Marisa Eisenberg: But my.

562
01:23:37,650 --> 01:23:44,040
Michael Akira Lee Hayashi: Point is usually did I get irritated reading the model description If yes it's oh it's complex.

563
01:23:45,750 --> 01:23:52,470
Marisa Eisenberg: But yeah so anyway okay more on that in just a minute, too, but yeah and I think we kind of did this so here's just some pictures of.

564
01:23:52,770 --> 01:23:54,960
Michael Akira Lee Hayashi: Schools of fish doing interesting things.

565
01:23:55,680 --> 01:23:56,700
Marisa Eisenberg: But yes okay.

566
01:23:57,930 --> 01:24:08,040
Marisa Eisenberg: So complex system, science, you know systems modeling all of that kind of thing kind of lives in this combination of different areas.

567
01:24:08,730 --> 01:24:18,720
Marisa Eisenberg: And more you know, in the context of public health, it also epidemiology and a lot of other sort of more statistical things play into so bio stats all of that too, but.

568
01:24:19,170 --> 01:24:26,970
Marisa Eisenberg: The classic complex is some science, I like this as a kind of overview of a lot of the methods that end up sort of playing into it and.

569
01:24:27,600 --> 01:24:32,850
Marisa Eisenberg: And this is also from say on this book, so you can check more out about all of this in there um.

570
01:24:33,300 --> 01:24:44,340
Marisa Eisenberg: Okay, so with that are we have we got 10 minutes that's good Okay, we can finish up this kind of like why model thing and then that's a perfect time for a break and okay so.

571
01:24:45,300 --> 01:24:54,570
Marisa Eisenberg: When you think of a model and any flavor of model not necessarily a complex systems model what what does that mean to you, what do you think what do you think a model is.

572
01:24:55,800 --> 01:24:58,110
Marisa Eisenberg: You can just write it in the chat or you can unmute or whatever.

573
01:25:10,410 --> 01:25:11,730
Any guesses.

574
01:25:12,780 --> 01:25:19,110
Marisa Eisenberg: Mathematical equation using data great okay good what else what other what other definitions of them all, with people get.

575
01:25:24,690 --> 01:25:31,770
Caroline Godfrey: I think of it as like a mathematical or an effort to mathematically represent something that's happening, naturally.

576
01:25:32,100 --> 01:25:37,890
Marisa Eisenberg: yeah okay oh that's good an effort to mathematically represent something we have natural I like that a lot um.

577
01:25:38,310 --> 01:25:45,780
Marisa Eisenberg: Are there other kinds of models, you know well okay i'm going to stop being quite I have a whole little diagram about this, I can just we can yeah and so.

578
01:25:46,530 --> 01:25:54,060
Marisa Eisenberg: So yes, totally so so the flavors of model that you both were describing are the ones that we're going to spend most of our time on which is sort of like.

579
01:25:54,300 --> 01:26:09,570
Marisa Eisenberg: math or code that's used to represent something about reality or a natural process that we're interested in kind of exploring right and often using data or observation or knowledge that we have about the system to build it.

580
01:26:10,620 --> 01:26:19,320
Marisa Eisenberg: But, in general, very broadly a model is just some kind of abstraction of reality, so we have some real world system that we're interested in.

581
01:26:19,650 --> 01:26:34,920
Marisa Eisenberg: And then we're going to abstract it in some way to try and understand it, and so that could be a physical model people use animal models all the time to explore how different drugs behave if any of you have ever built physical models of things, and you know.

582
01:26:35,910 --> 01:26:37,080
Michael Akira Lee Hayashi: candy its.

583
01:26:37,200 --> 01:26:37,800
Marisa Eisenberg: weight saying.

584
01:26:38,250 --> 01:26:40,200
Michael Akira Lee Hayashi: I should have I should have had one hand you have come to me.

585
01:26:40,980 --> 01:26:41,940
Marisa Eisenberg: Michael I didn't know.

586
01:26:43,320 --> 01:26:43,860
Marisa Eisenberg: yeah here we.

587
01:26:44,070 --> 01:26:51,540
Marisa Eisenberg: Can you can show us Michael builds amazing amazing models of things he's been building ships lately, which is very cool.

588
01:26:52,140 --> 01:27:03,120
Marisa Eisenberg: So we'll we'll get to see that in a second but yeah so you can have physical models of of all kinds of different things, you can have diagram so cartoons schematics we build my hat here we go okay.

589
01:27:04,200 --> 01:27:05,520
Marisa Eisenberg: yeah look at this.

590
01:27:06,180 --> 01:27:08,010
Michael Akira Lee Hayashi: Number my cameras going to do this.

591
01:27:08,580 --> 01:27:09,150
Marisa Eisenberg: We put it.

592
01:27:09,270 --> 01:27:10,020
Marisa Eisenberg: yeah there we go.

593
01:27:10,320 --> 01:27:10,980
battleship.

594
01:27:12,630 --> 01:27:13,440
Marisa Eisenberg: very nice.

595
01:27:13,830 --> 01:27:25,410
Marisa Eisenberg: Yes, you to fall So yes, so that's there's a physical model, you could use that to understand sort of the structure and the you know the design and how battleships are built in where stuff goes and all of that kind of thing right and.

596
01:27:25,920 --> 01:27:34,350
Marisa Eisenberg: You could I don't know if it if it actually flows, but in principle you could maybe use a team and understand some of the like the the you call it hydro dynamics of how.

597
01:27:34,890 --> 01:27:36,330
Marisa Eisenberg: The water and all those kinds of things.

598
01:27:36,720 --> 01:27:45,810
Michael Akira Lee Hayashi: And oh builders do that in fact they make small scale models to make sure that their boat will actually float and go at speed and not get some if someone shoots it in the engines or.

599
01:27:45,810 --> 01:27:45,930
What.

600
01:27:47,550 --> 01:27:59,610
Marisa Eisenberg: Exactly so physical models, I think diagrams we all have built, you know draw up, you know when you if you ever made a Dag to try and think about a causal process, so you ever drawn a diagram of how something works.

601
01:27:59,910 --> 01:28:13,740
Marisa Eisenberg: that's a model to and then of course the ones that we're going to focus on in this class are mostly math or code So these are thinking of using using equations or using code to but it's the same idea you're using equations are using code to build some kind of.

602
01:28:14,790 --> 01:28:21,240
Marisa Eisenberg: version of the real world system so that you can explore what it does and how it works and and so.

603
01:28:21,900 --> 01:28:29,700
Marisa Eisenberg: models are simplifications of reality that's true whether it's a diagram or a physical model or a piece of.

604
01:28:30,030 --> 01:28:41,760
Marisa Eisenberg: code or an equation there's they have to simplify reality, that means that they are definitely wrong in some ways, they have to be, because otherwise, you would have replicated the entirety of the real system.

605
01:28:42,120 --> 01:28:48,480
Marisa Eisenberg: And if you could understand that already, you would have already done it right you needed the simplification in some way to make it understandable.

606
01:28:48,870 --> 01:28:55,800
Marisa Eisenberg: And that simplification means that they are in certain ways going to be wrong, but they are that's also the core of their usefulness.

607
01:28:56,640 --> 01:29:02,250
Marisa Eisenberg: And so that abstraction or simplification is both a strength and a weakness for models.

608
01:29:02,580 --> 01:29:11,970
Marisa Eisenberg: And of course the question this get that what Michael was talking about before the question is always how much to simplify what details, do you keep which ones, do you remove and.

609
01:29:12,450 --> 01:29:15,330
Marisa Eisenberg: what's where's the line between complex and complicated.

610
01:29:15,690 --> 01:29:26,850
Marisa Eisenberg: And so, even simple systems like that full user and one that we just played with you know it only has like two rules right like you draw the thing and then you add one of the same right.

611
01:29:27,270 --> 01:29:40,020
Marisa Eisenberg: But even that can actually be quite complex so as soon as you start adding more realistic rules to your system more realistic structures, it becomes it can be very complex or complicated pretty fast.

612
01:29:40,680 --> 01:29:47,340
Marisa Eisenberg: And so, so that's sort of a quick like why what our models next question is sort of why would you build models.

613
01:29:47,640 --> 01:29:54,570
Marisa Eisenberg: And and and I want to kind of oftentimes people ask this question why build systems models why build models in general.

614
01:29:54,840 --> 01:30:01,680
Marisa Eisenberg: And, and I think it's useful this really kind of comes from this Epstein 2008 paper about why model.

615
01:30:02,040 --> 01:30:06,930
Marisa Eisenberg: The answer, I think that I like the best is you already are you do it, whether you want to or not.

616
01:30:07,140 --> 01:30:21,660
Marisa Eisenberg: If you if you imagine how something works if you imagine what might happen if you use a mental model in any way you're using a model of some kind, the real question that we're then asking is why make that model explicit why write it down why turn it into something.

617
01:30:22,710 --> 01:30:30,600
Marisa Eisenberg: Explicit rather than just something in your head, and the reason there, I think, is then you can lay out the mechanisms, the assumptions the parameters.

618
01:30:30,840 --> 01:30:36,960
Marisa Eisenberg: Whether you do that as equations and code or you do it as a diagram or whatever, but it forces you to sort of make.

619
01:30:37,740 --> 01:30:45,840
Marisa Eisenberg: out in the world explicit what assumptions you're using in your mind so that That way, you can interrogate whether you think those assumptions are correct right.

620
01:30:46,140 --> 01:30:53,760
Marisa Eisenberg: And whether you think that that is actually the right way to think about the system or not, if you if you leave it as a mental model then.

621
01:30:55,410 --> 01:31:07,920
Marisa Eisenberg: You know there's it's very easy to deceive yourself and to kind of make it fuzzy and and change the mental model, as you go, which is good, you want to update your mental model, but you want to acknowledge what is actually driving the the sort of.

622
01:31:08,670 --> 01:31:11,250
Marisa Eisenberg: conclusions that you're drawing from your mental model and so.

623
01:31:11,880 --> 01:31:18,630
Marisa Eisenberg: If we make our models explicit them, we can test them, we can interrogate them, we can explore them, we can make sure that they're actually self consistent.

624
01:31:18,840 --> 01:31:24,150
Marisa Eisenberg: We can explore more complex scenarios and you can just imagine in your mind all those kinds of things, so I think.

625
01:31:24,750 --> 01:31:30,180
Marisa Eisenberg: it's really not a question of why build models it's a question of why make your model explicit and write it down.

626
01:31:30,630 --> 01:31:41,460
Marisa Eisenberg: And, and so Epstein has a great like list of all kinds of different reasons that you might build a model, and I think this paper was written in part as a sort of.

627
01:31:42,420 --> 01:31:55,500
Marisa Eisenberg: frustrated reaction, because often when we build models to things to the question why build models and and also to the obsession with forecasting, we often build models because.

628
01:31:56,070 --> 01:32:05,070
Marisa Eisenberg: The usual thing that people think and it's true, I mean you absolutely do want to use models for forecasting all the time, so it's not like it's not a reasonable thing to suggest but.

629
01:32:06,750 --> 01:32:11,790
Marisa Eisenberg: I think a lot of times, people say what do you use a model for well you use it to predict what's going to happen in.

630
01:32:12,090 --> 01:32:18,300
Marisa Eisenberg: A new circumstance and that's true but there's a lot of other reasons that you can a lot of other things you can use a model for too, and so.

631
01:32:18,990 --> 01:32:25,110
Marisa Eisenberg: Epstein kind of list a bunch of them here and and, and so I thought I would kind of.

632
01:32:25,530 --> 01:32:29,910
Marisa Eisenberg: Like make it a little kind of squish this down into a couple of examples so.

633
01:32:30,210 --> 01:32:43,170
Marisa Eisenberg: You know why build models often it's really to understand what those underlying mechanisms are and the causality of why certain things happen if you turn this does does it go this way, or does it go that way you know those kinds of questions.

634
01:32:43,740 --> 01:32:47,850
Marisa Eisenberg: About mechanism and causality of the situation that you're looking at or the system you're looking at.

635
01:32:48,150 --> 01:32:57,600
Marisa Eisenberg: And you can also of course oftentimes use it for what are called counterfactual So what if scenarios, if you did this intervention if you gave that treatment.

636
01:32:57,930 --> 01:33:08,820
Marisa Eisenberg: You know, would it turn out differently, which one is the best choice those kinds of questions and then of course forecasting and prediction is a huge use of a lot of these models to so that's definitely a big one.

637
01:33:09,270 --> 01:33:09,630
Marisa Eisenberg: Okay.

638
01:33:09,750 --> 01:33:14,520
Michael Akira Lee Hayashi: If I can, if I can get maybe a of a hair philosophical kind of before the break.

639
01:33:15,270 --> 01:33:29,640
Michael Akira Lee Hayashi: I think coming back to the point about being able to make our assumptions explicit and then test them that serves a purpose beyond kind of the general progress of science right like if I if I think the world works in a certain way.

640
01:33:30,480 --> 01:33:40,440
Michael Akira Lee Hayashi: it's important for me to test that belief, to see if i'm right or to see if I need to evaluate reevaluate the way that i've chosen to view a particular situation and.

641
01:33:40,800 --> 01:33:52,920
Michael Akira Lee Hayashi: Being able to implement models, either in computer code or in math is part of that process it forces me to say here exactly is how I think this system works, and then it forces me to see.

642
01:33:54,570 --> 01:34:04,680
Michael Akira Lee Hayashi: It forces me to see whether that might be wrong, and if it is wrong, then it also forces me to re evaluate those those assumptions to think about.

643
01:34:05,160 --> 01:34:14,730
Michael Akira Lee Hayashi: What went in when I was designing this model that led me to be wrong, and I think that process of iterative wrongness is really, really important both kind of.

644
01:34:15,180 --> 01:34:25,710
Michael Akira Lee Hayashi: Like like generally in thinking about how we think about things, but especially in science and trying to get us toward learning about something learning about a phenomenon that we we wanted to study.

645
01:34:26,130 --> 01:34:31,560
Marisa Eisenberg: Yes, totally agree, and that then that's like why I hope everyone gets very comfortable being wrong.

646
01:34:31,860 --> 01:34:35,010
Marisa Eisenberg: it's 90% of what we do all the time right it's sort of like.

647
01:34:35,040 --> 01:34:46,590
Marisa Eisenberg: trying out a model discovering that actually no it doesn't work that way yeah and actually that's a perfect way to end the break so or to pause for the break so let's pause here and then we'll pick it back up at 1015.

648
01:34:47,550 --> 01:34:57,540
Michael Akira Lee Hayashi: i'm going to hop off for today, but I will see you all tomorrow for a lengthy session on stochastic models so i'm looking forward to it, I hope, you're excited okay awesome thanks Mike I forever.

649
01:34:58,620 --> 01:35:00,090
Marisa Eisenberg: or till tomorrow, but you know yeah.

650
01:35:01,500 --> 01:35:02,490
Michael Akira Lee Hayashi: By forever for now.

651
01:35:03,330 --> 01:35:03,720
Marisa Eisenberg: There we go.

652
01:35:06,330 --> 01:35:07,320
Alright yeah.

653
01:35:08,700 --> 01:35:19,680
Marisa Eisenberg: Thank you, thank you um let's see so welcome back and we're going to pick up where we left off, I did want to just start by.

654
01:35:20,220 --> 01:35:31,110
Marisa Eisenberg: I forgot to say this, or zero if you haven't installed on your computer yes and I guess actually first question first is there, anybody who does not yet have our on their computer at all.

655
01:35:32,550 --> 01:35:33,570
Nicolle Krebs: And maybe you don't.

656
01:35:33,870 --> 01:35:46,200
Marisa Eisenberg: Okay, you don't okay so we'll we'll you'll want to get it installed in a minute we'll have some like slides, but if you want to just do it real, let me grab the thing.

657
01:35:46,590 --> 01:35:49,470
Nicolle Krebs: And just a second, let me i'll put two.

658
01:35:49,470 --> 01:35:59,760
Marisa Eisenberg: links in the chat and then, if you don't have it like maybe in the background, while we're kind of going through stuff and you know it's kind of one of those mindless things that you could probably do without.

659
01:36:00,840 --> 01:36:09,720
Marisa Eisenberg: It being a thing, are you Okay, so what you're going to want to do for installing our there's two pieces that you'll want so you'll want to get.

660
01:36:10,920 --> 01:36:17,940
Marisa Eisenberg: The our language itself is from that first link there who are project.org and then.

661
01:36:18,570 --> 01:36:29,190
Marisa Eisenberg: Our studio I haven't installed our studio and forever when you install ours does anyone remember will install our for you, when you go it used to be that you had to install our first, and I think that's still true but i'm not really sure.

662
01:36:30,720 --> 01:36:34,440
Caroline Godfrey: I don't know if this, but I did it last night and I I did both.

663
01:36:35,040 --> 01:36:36,120
Marisa Eisenberg: Okay, good okay i'm.

664
01:36:36,240 --> 01:36:38,100
Marisa Eisenberg: pretty sure that's what you're that's that's still.

665
01:36:38,250 --> 01:36:38,670
Marisa Eisenberg: I like.

666
01:36:39,210 --> 01:36:43,920
Marisa Eisenberg: Only been updating since forever, so I was like maybe a fancy there's up since I lasted this but.

667
01:36:44,550 --> 01:36:53,520
Marisa Eisenberg: Usually what you do is you install our first and then our studio is like the code editor that basically everybody uses for our you don't have to use it, but.

668
01:36:53,760 --> 01:37:04,200
Marisa Eisenberg: it's so standard that I would strongly recommend using our I have friends who hate it and use something else, but I would strongly recommend using our studio and so.

669
01:37:04,950 --> 01:37:11,700
Marisa Eisenberg: install our first from the first link and then install our studio from the second link and then that'll get you all set up so.

670
01:37:11,850 --> 01:37:18,630
Marisa Eisenberg: It should they should have like downloadable things and you just you know sort of Double Click and then click OK, a few different things, but it kind of does what it does.

671
01:37:20,250 --> 01:37:21,030
Marisa Eisenberg: yeah yeah.

672
01:37:21,120 --> 01:37:22,500
Nicolle Krebs: awesome okay good.

673
01:37:23,010 --> 01:37:36,930
Marisa Eisenberg: and great because then we'll get to coding soon and then it'll just be easier if everybody's kind of got it already installed okay so getting us back to where we were at school down cuckoo period okay.

674
01:37:39,480 --> 01:37:59,310
Marisa Eisenberg: So we left off um there we go and we left off talking about why build models and sort of why that's useful, I just wanted to kind of wrap that up a teeny bit so you know we were building mechanistic models in this so most of you probably have have built some flavor of.

675
01:38:00,510 --> 01:38:09,360
Marisa Eisenberg: Models you know, like whether that's a linear regression model or things like that the thing that kind of distinguishes complex systems or systems models from.

676
01:38:10,740 --> 01:38:20,730
Marisa Eisenberg: A linear regression model or a you know any other kind of sort of more statistical flavored model and there's a lot of overlap, but the thing that distinguishes them, I would say is is mechanism so.

677
01:38:21,840 --> 01:38:32,160
Marisa Eisenberg: COMP systems models are sort of founded on the idea of incorporating the mechanistic details the sort of the the the processes by which.

678
01:38:33,450 --> 01:38:36,780
Marisa Eisenberg: sort of systems do whatever it is that they do.

679
01:38:37,830 --> 01:38:47,130
Marisa Eisenberg: into the model itself so and that probably has earned model, it was a weird model because you're it's a model that involves like copying beads and things like this, but.

680
01:38:48,420 --> 01:39:05,580
Marisa Eisenberg: it's a it is it essentially replicates the process by which this hypothetical species of bacteria that weirdly takes turns and replication would would replicate right so so so systems models, the ideas that you incorporate you represent the mechanisms that are.

681
01:39:06,990 --> 01:39:19,830
Marisa Eisenberg: Dr system in the model in the equation, so that you built now there's obviously a lot of Gray area there's plenty of examples of linear models or other like regression models kind of statistical models.

682
01:39:20,280 --> 01:39:25,140
Marisa Eisenberg: Mixed effects all kinds of different things where they are, accounting for mechanism and a lot of different ways so it's not like.

683
01:39:25,350 --> 01:39:36,600
Marisa Eisenberg: I feel like sometimes people think of systems models are one thing and statistical models are a different thing they're both actually the same thing and there's a gradient on how much mechanism you're putting into it and.

684
01:39:37,560 --> 01:39:44,310
Marisa Eisenberg: How much of a sort of statistical framework around likelihoods and parameter estimation, and all that kind of stuff you're putting into it so.

685
01:39:45,420 --> 01:39:49,290
Marisa Eisenberg: it's not like it's a binary thing you have a systems model or you have your.

686
01:39:49,380 --> 01:39:50,640
Marisa Eisenberg: linear regression or whatever.

687
01:39:50,730 --> 01:40:00,480
Marisa Eisenberg: um there's a it's a it's a blend um but anyway we'll get more into that in a bit The last thing I wanted to kind of mentioned in the kind of why model piece of this is that.

688
01:40:01,230 --> 01:40:10,260
Marisa Eisenberg: there's this I feel like it's it's useful to talk a little bit about modeling as particularly so if you've ever seen this there was like a.

689
01:40:10,740 --> 01:40:18,480
Marisa Eisenberg: bajillion ages ago there was a McDonald run sell to God got into like made this quote about the known knowns and the unknown known like the.

690
01:40:18,720 --> 01:40:25,830
Marisa Eisenberg: unknown unknowns and all these different things right what he was referring to is this quadrant that People often talk about um and so.

691
01:40:26,700 --> 01:40:32,220
Marisa Eisenberg: there's The idea is that when you're thinking about a situation or a system or a scenario.

692
01:40:32,520 --> 01:40:47,040
Marisa Eisenberg: You often think about Okay, these are the things that are what are called known knowns So these are things I know and i'm aware of the fact that I know that so, for instance, I know that the sky is blue, and I am aware that I know that fact right i'm.

693
01:40:47,490 --> 01:40:55,710
Marisa Eisenberg: At least currently where I am so that's unknown known known unknowns are things that I know that I do not know.

694
01:40:56,070 --> 01:41:05,370
Marisa Eisenberg: I don't I know, for instance, right now is that I don't know how many birds are in the tree outside that's a unknown unknown to me, I am aware that I don't know that.

695
01:41:05,670 --> 01:41:10,500
Marisa Eisenberg: unknown unknowns are usually, this is the part of a quadrant that people are worried about right, these are things that.

696
01:41:10,860 --> 01:41:20,850
Marisa Eisenberg: I don't know it and i'm not even aware enough to know that I don't know it right, so this is the surprise factor, this is where you know, like people are usually, when they're they're sort of thinking about.

697
01:41:21,360 --> 01:41:32,550
Marisa Eisenberg: uncertainty and knowledge, this is where you're worried, the piece that I think people kind of overlook and don't often think about and we're modeling can be really helpful is this unknown knowns this is stuff that.

698
01:41:33,060 --> 01:41:37,560
Marisa Eisenberg: Like you might sort of wonder what does that mean you know something, but you don't know you know it and.

699
01:41:37,950 --> 01:41:44,100
Marisa Eisenberg: it's really models are especially useful at figuring out the logical consequences of your assumptions.

700
01:41:44,370 --> 01:41:52,890
Marisa Eisenberg: That are little human brains are too small to kind of sort through right so, and if you think about the pulleys are in simulation.

701
01:41:53,280 --> 01:42:01,140
Marisa Eisenberg: If we had more computing brainpower in our heads, we could have mentally run the full user and model 1000 times and been able to tell for our.

702
01:42:01,500 --> 01:42:10,080
Marisa Eisenberg: selves that it was going to turn out to be uniform right but we don't we can't do that so, even though we knew all the mechanisms driving that players are in simulation.

703
01:42:10,290 --> 01:42:17,730
Marisa Eisenberg: We couldn't actually propagate that out into the logical consequences of what that means, and most complex systems are like that, if you say.

704
01:42:18,450 --> 01:42:23,580
Marisa Eisenberg: there's a new infectious disease that I just found this new virus and it's starting to spread.

705
01:42:24,210 --> 01:42:32,100
Marisa Eisenberg: Most of us can't with our just our mental models figure out what's the probability that that turns into an outbreak or that that becomes a pandemic or.

706
01:42:32,280 --> 01:42:40,650
Marisa Eisenberg: You know any of those kinds of things it's too complicated, we just don't have the ability to represent whole societies in our head in a way that you can do that right, and so.

707
01:42:41,250 --> 01:42:52,710
Marisa Eisenberg: models are great for helping us interrogate your unknown notes the things that follow from what you know, but that you don't you can't actually kind of make and simulate yourself and so.

708
01:42:53,340 --> 01:43:01,320
Marisa Eisenberg: That I think is really a lot of why to build models and now that said so we've just done a lot of like why build models and why are they useful.

709
01:43:01,560 --> 01:43:09,720
Marisa Eisenberg: And models can also lead you in very wrong directions right so there's a lot of uncertainty and what's called on identify ability.

710
01:43:10,380 --> 01:43:16,440
Marisa Eisenberg: Where you, you have to really assess what can you actually estimate or determine from this model.

711
01:43:16,710 --> 01:43:28,080
Marisa Eisenberg: It might be that the data that you're measuring doesn't actually directly measure what you're trying to get at, and so, how much can you actually infer about variables that you aren't necessarily directly observing.

712
01:43:28,560 --> 01:43:35,250
Marisa Eisenberg: Or you only observe once in one simulation or one real world instance, you know and so i'm.

713
01:43:36,030 --> 01:43:40,380
Marisa Eisenberg: models have a lot of potential, but you have to be cautious they're really only as good as their assumptions.

714
01:43:40,710 --> 01:43:50,490
Marisa Eisenberg: And we often don't necessarily even totally pay attention to what all the assumptions we're putting into the models are and in the same way that we.

715
01:43:51,240 --> 01:43:59,340
Marisa Eisenberg: have a hard time predicting whether a new virus is going to turn into a pandemic, or a set of beads is going to have a uniform distribution.

716
01:43:59,640 --> 01:44:08,310
Marisa Eisenberg: We also are not great at predicting whether Oh, I assume, this was linear is going to then have huge consequences for how our model behaves right and so.

717
01:44:09,150 --> 01:44:21,840
Marisa Eisenberg: We put in these assumptions kind of blindly like just whatever here it is and without necessarily being aware of how much that can change the outcomes of the model, sometimes in ways that can be a real problem and so i'm.

718
01:44:22,500 --> 01:44:31,650
Marisa Eisenberg: i'm going to do a little story time, very briefly, so like as as one example, this has happened in real world scenarios multiple times, where people have built models.

719
01:44:31,980 --> 01:44:42,510
Marisa Eisenberg: and use them to try and help you know inform public health or other things and and then have real issues so there's an example when the HIV.

720
01:44:43,560 --> 01:44:56,310
Marisa Eisenberg: pandemic was you know was getting started and the who commissioned a model for modeling the spread of HIV in Africa and the model that.

721
01:44:56,880 --> 01:45:11,460
Marisa Eisenberg: They the belt and in in implicitly, it was very detailed it had a lot of good useful mechanism, but it was sort of obscured that in that model, the way that they treated risk meant that.

722
01:45:12,300 --> 01:45:19,710
Marisa Eisenberg: 10 sexual activities with 10 distinct partners conferred the same amount of risk as 10 sexual activities with the same partner.

723
01:45:20,130 --> 01:45:29,820
Marisa Eisenberg: And that is obviously probably not true, having sex 10 times with the same person is a very different level of risk than having sex 10 times with 10 different people.

724
01:45:30,120 --> 01:45:41,190
Marisa Eisenberg: And it ended up, meaning that the model drastically under predicted the number of cases of HIV, that there were going to be and people built policy off of these models right and so um.

725
01:45:41,940 --> 01:45:51,270
Marisa Eisenberg: You have to be very, very careful and you have to like this is part of why For those of you who are taking the tobacco class you'll see I think a lot of this this is part of why comparative modeling.

726
01:45:51,540 --> 01:45:57,750
Marisa Eisenberg: And and doing what's called inference robustness assessment, where you try many different models structures to answer the same question.

727
01:45:57,990 --> 01:46:13,830
Marisa Eisenberg: is so important because you don't want to be blinded by assumptions that you maybe weren't even aware were in there and then that can affect the outcomes right so um so just a little word of caution that this can have real consequences, and you have to be careful.

728
01:46:14,880 --> 01:46:16,410
Marisa Eisenberg: Okay, so that's that.

729
01:46:17,430 --> 01:46:29,100
Marisa Eisenberg: I just realized the Channel or any questions No okay Okay, so all right, so, so the basic formulation of modeling so i'm.

730
01:46:29,850 --> 01:46:37,440
Marisa Eisenberg: going to actually will skip this and kind of come back to it later I think i'm gonna hop along here so let's talk about the modeling process a little bit um.

731
01:46:38,070 --> 01:46:46,260
Marisa Eisenberg: So we often start with a question or a goal and then we're going to try so maybe Our question is, you know, is this disease going to turn into an epidemic or.

732
01:46:47,010 --> 01:46:55,980
Marisa Eisenberg: How many people are going to get cancer lung cancer in the next 10 years, and you know or 50 years or whatever it is.

733
01:46:56,220 --> 01:47:00,840
Marisa Eisenberg: And so you have some question or goal you're trying to answer, and then you spend a bunch of time understanding.

734
01:47:01,140 --> 01:47:11,580
Marisa Eisenberg: The not just the biology, but the data, the biology, that the genealogy you know, etc, all of the information you need to sort of understand the system and what's going on.

735
01:47:11,910 --> 01:47:21,030
Marisa Eisenberg: And then you're going to you're usually what you do is you sort of decide Okay, what are we going to model where our variables, going to be what assumptions are we going to make and.

736
01:47:21,660 --> 01:47:30,330
Marisa Eisenberg: And then you typically sort of draw up some kind of diagram of what your model is going to be structured like and then often you basically convert that diagram into mathematical equations.

737
01:47:30,870 --> 01:47:43,170
Marisa Eisenberg: or code or whatever it might be, and so you'll do it this way and so that's that's usually kind of the rough process for how this works and there's usually a kind of cyclical thing where.

738
01:47:43,950 --> 01:47:50,760
Marisa Eisenberg: You know you start with the real system and the data that you have you build a model you run the model, you get some predictions and results.

739
01:47:51,000 --> 01:48:00,510
Marisa Eisenberg: You Compare that to the real system and see where it works and where it doesn't you revise your model, etc, etc, so you know you're never really quite done you're always kind of in the process of revising and.

740
01:48:00,930 --> 01:48:04,590
Marisa Eisenberg: and comparing to the real world and then revising again and.

741
01:48:05,130 --> 01:48:12,930
Marisa Eisenberg: Like we talked about with Michael earlier, you know it's important to capture the essential features, while leaving out things that aren't essential that can be a really hard problem.

742
01:48:13,230 --> 01:48:18,180
Marisa Eisenberg: And the idea being is keeping your model as simple as possible but not simpler.

743
01:48:18,570 --> 01:48:22,320
Marisa Eisenberg: But of course what's essential depends a lot on what question you're trying to answer.

744
01:48:22,620 --> 01:48:33,540
Marisa Eisenberg: And if you have to make a lot of assumptions so deciding what's the simplest possible model to answer your question is really kind of an art and a science, and so this is part of why it's important to compare.

745
01:48:33,720 --> 01:48:39,060
Marisa Eisenberg: different models so that you can see Okay, if I zig instead of zagging if I did this instead of that you know.

746
01:48:39,450 --> 01:48:47,010
Marisa Eisenberg: Would it would it have made a difference in what my model predicts about this public health question i'm trying to answer and Okay, and so.

747
01:48:47,880 --> 01:48:52,320
Marisa Eisenberg: you're there's a ton of different modeling frameworks we're going to learn about them today, and the rest of the week.

748
01:48:53,070 --> 01:49:07,560
Marisa Eisenberg: oftentimes part of what you have to ask yourself when you're trying to decide which modeling framework to use and so i've listed a few of them here but there's tons is do you, so this is just a few of the questions that maybe you might want to.

749
01:49:09,900 --> 01:49:13,680
Marisa Eisenberg: Ask yourself I think it's easier to talk about it in it.

750
01:49:15,060 --> 01:49:24,300
Marisa Eisenberg: OK so maybe the first question, you might want to ask yourself is is this question that i'm trying to answer do I need a population based model or an individual based model, am I asking a question about.

751
01:49:24,570 --> 01:49:33,990
Marisa Eisenberg: How different individuals, you know respond to something you know, like simulating a treatment on individual people and trying to understand you know, does it.

752
01:49:34,650 --> 01:49:45,210
Marisa Eisenberg: You know, stop whatever does it, you know, like stop cancer in an effective way, or whatever it might be, or is this a population based question where i'm trying to answer.

753
01:49:45,480 --> 01:49:50,970
Marisa Eisenberg: As at the population level how many people are going to what's the incidence of this disease is going to be in next year.

754
01:49:51,480 --> 01:50:05,550
Marisa Eisenberg: So those questions are going to be important do is space important Do I need to be thinking about a spatial model, where I explicitly represent different places in space with different pieces of code or different equations so like, for instance.

755
01:50:06,930 --> 01:50:17,700
Marisa Eisenberg: When we simulated that Bead model of to bacterial populations, we were simulating just one location right, like you, you had one founding pair of bacteria and then it kind of grew.

756
01:50:18,030 --> 01:50:29,130
Marisa Eisenberg: But you could imagine, maybe simulating many different locations and sometimes beads would jump from one location to another, because they move from one place to another so space could be important, or it might not.

757
01:50:29,670 --> 01:50:40,170
Marisa Eisenberg: You most of the models we're going to talk about in this class or time during models, but it's not always the case, sometimes you don't care about how it evolves in time, you only care about maybe space or something else.

758
01:50:40,740 --> 01:50:51,840
Marisa Eisenberg: Maybe it's age and not time specifically um so Okay, then we get to kind of these more methodological things so deterministic versus stochastic this is really asking how so.

759
01:50:52,380 --> 01:51:03,630
Marisa Eisenberg: Probably some of you haven't seen this term before so stochastic means random, and so it means I usually have a little picture you go no.

760
01:51:04,320 --> 01:51:09,150
Marisa Eisenberg: No it's dumb I think it's I think it's in my other slides well we'll get to it okay.

761
01:51:09,540 --> 01:51:24,000
Marisa Eisenberg: A stochastic model is one where the right so like the players are in simulation That was a stochastic model random chance plays a role and how the simulation actually evolved a deterministic model is one where you you you don't you're modeling.

762
01:51:24,660 --> 01:51:36,510
Marisa Eisenberg: These are something that doesn't have random chance as a piece of it or something where you can reasonably model, even though random chance plays a role, you can reasonably model, the average and it's probably fine so like i'm.

763
01:51:36,960 --> 01:51:42,720
Marisa Eisenberg: Whatever as an infectious disease example if you're modeling the introduction of a new pathogen then.

764
01:51:43,320 --> 01:51:52,920
Marisa Eisenberg: You probably need so a stochastic model because random chance is going to play a big role let's say if we were here in person pretend that I came in and I was sick, you know.

765
01:51:53,370 --> 01:52:05,760
Marisa Eisenberg: Whether I happen to you know cough or sneeze or if I wore a mask or not, or all those kinds of questions would play a big role in terms of how many people in the class actually got sick over the course of today right.

766
01:52:06,270 --> 01:52:12,090
Marisa Eisenberg: Where you all were sitting would also be you know important in terms of figuring out who gets sick and and so.

767
01:52:12,420 --> 01:52:18,990
Marisa Eisenberg: stochastic it plays a big role in certain circumstances, but if you are thinking about let's say the whole state of Michigan.

768
01:52:19,200 --> 01:52:28,230
Marisa Eisenberg: And I wanted to you know and we're not at the very beginning of an of an epidemic we're well two three years into a pandemic and it's you know ongoing maybe.

769
01:52:29,160 --> 01:52:39,000
Marisa Eisenberg: It doesn't really play so much rural it's very widespread it's pretty much everywhere, you probably it probably doesn't matter if this exact class got more cases or not.

770
01:52:39,360 --> 01:52:44,160
Marisa Eisenberg: The average across the whole population might be fine and might be enough for what we're trying to do so.

771
01:52:44,880 --> 01:52:51,390
Marisa Eisenberg: deterministic versus stochastic is something that you often have to think a lot about and then discrete versus continuous.

772
01:52:52,290 --> 01:53:00,810
Marisa Eisenberg: This is often actually sort of less of a big deal and it sounds, but it is, it is a thing that you often need to think about So do you do you want, do you need to have.

773
01:53:01,230 --> 01:53:14,730
Marisa Eisenberg: Individual people like I have one to like the beads right you could only have discrete numbers of beads 12345 or is it fine to sort of model it as a continuum where we sort of, say, like okay.

774
01:53:15,690 --> 01:53:18,330
Marisa Eisenberg: Technically, you can have Point five people but.

775
01:53:18,900 --> 01:53:26,220
Marisa Eisenberg: Whenever we're working on numbers that are in the thousands there's a million, so if our if it's easier to model it with continuous numbers.

776
01:53:26,490 --> 01:53:35,880
Marisa Eisenberg: Then that's fine, we can just let that be a thing or maybe it's actually something like a concentration is what you're modeling and it actually comes in sort of really kind of continuous numbers.

777
01:53:36,540 --> 01:53:38,370
Marisa Eisenberg: Okay, so different frameworks will have different.

778
01:53:38,880 --> 01:53:46,290
Marisa Eisenberg: Like sort of assumptions that they make for all of these questions and usually kind of by thinking through these kinds of questions you can figure out what framework, you want to use.

779
01:53:46,710 --> 01:53:56,340
Marisa Eisenberg: And okay so well i'm going to kind of pause it there we're going to switch are there questions about any of the intro stuff that we've done this morning, so far.

780
01:53:59,370 --> 01:54:04,170
Marisa Eisenberg: Not i'm going to switch over to doing some coding.

781
01:54:07,020 --> 01:54:08,430
Marisa Eisenberg: And for that.

782
01:54:09,690 --> 01:54:13,410
Marisa Eisenberg: You get my windows all sort of organized here and useful way.

783
01:54:18,540 --> 01:54:19,440
to restart.

784
01:54:26,100 --> 01:54:32,220
Marisa Eisenberg: So i'm actually going to make right i'm going to share my whole screen and.

785
01:54:33,360 --> 01:54:44,040
Marisa Eisenberg: Possibly i'm going to regret that, but we're going to try this i'm going to make my font really big and hopefully that will mean that you all can see okay.

786
01:54:45,090 --> 01:54:47,100
Marisa Eisenberg: i'm okay so.

787
01:54:48,270 --> 01:54:55,260
Marisa Eisenberg: Can you see the slides okay we'll start with, that is, that are the slides to the even though i'm sharing my whole screen is this okay.

788
01:54:57,420 --> 01:55:02,310
Marisa Eisenberg: yeah okay okay good and then i'm in the code.

789
01:55:05,100 --> 01:55:06,030
Marisa Eisenberg: In the code.

790
01:55:07,170 --> 01:55:23,670
Marisa Eisenberg: types random stuff Can you see that all right is that OK, I can make the font bigger that's fine okay good okay alright so let's do this so um first question first did it does everybody have our installed now.

791
01:55:24,810 --> 01:55:36,000
Marisa Eisenberg: didn't work okay good good good and our studio as well, everybody got does that work too okay good excellent okay so open our studio we're going to do a little like teeny intro.

792
01:55:37,350 --> 01:55:43,920
Marisa Eisenberg: And this is going to be very boring if you've coded in our, but I think it'll help everybody kind of get all on the same page so.

793
01:55:44,460 --> 01:55:48,150
Marisa Eisenberg: If you open our studio you should see something like this and.

794
01:55:48,690 --> 01:56:00,540
Marisa Eisenberg: So if you if you make a new file if you go file new our script and you'll get a little window here, instead of seeing the console taking up the whole space, but you should see sort of these four panels.

795
01:56:00,900 --> 01:56:09,570
Marisa Eisenberg: And, and what these are so you've got I don't think anybody really cares about the command history actually just take that that leader.

796
01:56:09,900 --> 01:56:21,750
Marisa Eisenberg: And so there's four panels you got your script editor your workspace for command console and your current directory, so this this new file that you made, if you went file new our script.

797
01:56:22,500 --> 01:56:30,870
Marisa Eisenberg: You should get a new file, this is where you're going to do all your actual coding your main code you're going to write it here we're going to save this as a as a script and.

798
01:56:31,290 --> 01:56:46,200
Marisa Eisenberg: This down here is what's called the console you can type stuff in here, and it will it will it will repeat everything that you run from your code up in the top area, but you can also type stuff here directly so two plus a giant number is that.

799
01:56:47,400 --> 01:56:58,200
Marisa Eisenberg: So you can say you know, whatever you can make new variables, you can do all the usual kinds of things here and i'm on my desktop so I have a really, really old version of our studio I meant to.

800
01:56:59,250 --> 01:57:05,850
Marisa Eisenberg: update it before I taught this class, but I forgot so will you'll have to put up with my said graphics, I think, but anyway.

801
01:57:06,450 --> 01:57:12,600
Marisa Eisenberg: So you'll write your code in here, this is going to be where you can kind of fiddled with code or.

802
01:57:13,170 --> 01:57:24,480
Marisa Eisenberg: Look, for read error messages and things like that this is what's called the, the environment, and this is where you'll keep track of variables that you have so if we make a new variable so let's call this.

803
01:57:25,470 --> 01:57:34,590
Marisa Eisenberg: stuff is going to equal five, and if you make, if you want to run this there's two ways to do it if you click.

804
01:57:35,310 --> 01:57:44,910
Marisa Eisenberg: run over here on the top right it's probably hard to see because it's very tiny on my screen, but if you click run it'll run that line, and you can see, it makes a new variable called.

805
01:57:45,240 --> 01:57:52,740
Marisa Eisenberg: stuff whose value is five, and you can see down here on the console it says stuff equals five you can also click source.

806
01:57:53,010 --> 01:57:57,510
Marisa Eisenberg: And that'll run the entire document which right now only has one line, but you could do that.

807
01:57:57,840 --> 01:58:03,300
Marisa Eisenberg: The other thing you can do, and this is kind of how most people I know actually sort of run things when they're fiddling around with the code.

808
01:58:03,570 --> 01:58:09,300
Marisa Eisenberg: Is if you press command enter when you're on this line, or if you press control enter if you're on a windows machine.

809
01:58:09,750 --> 01:58:18,120
Marisa Eisenberg: it'll run that line so you can see it, it went stuff equals five again and so it's you know that doesn't really do anything but let's make it seven.

810
01:58:18,510 --> 01:58:26,910
Marisa Eisenberg: And now stuff has a value of stuff so that's how you sort of run stuff or I shouldn't have said I shouldn't have named this stuff that's going to get confusing fast.

811
01:58:27,840 --> 01:58:39,180
Marisa Eisenberg: But that's how you run things and and and so yeah so that's kind of the basic structure over here this this last panel of the window is where you can see.

812
01:58:39,600 --> 01:58:47,280
Marisa Eisenberg: This is your current directory if I wanted to load a file or decide where to save things you can move around in here.

813
01:58:47,520 --> 01:58:54,960
Marisa Eisenberg: And one thing you'll want to you'll want to do is set your working directory to wherever you actually want to sort of SAVE stuff So if I wanted to save stuff.

814
01:58:55,230 --> 01:59:09,270
Marisa Eisenberg: in a different place you know, maybe I wanted to save things in the applications folder or something for some reason I don't actually think there's anything in there let's not do that, but you know if I wanted to save things on my desktop, which is a total disaster but.

815
01:59:12,660 --> 01:59:18,420
Marisa Eisenberg: You done and then there's two ways to set your working directory so.

816
01:59:18,660 --> 01:59:24,990
Marisa Eisenberg: they're working directory is where our will default to saving things to loading things to doing anything that it needs to do with a file.

817
01:59:25,200 --> 01:59:31,110
Marisa Eisenberg: The working directory is kind of its if you don't tell it a different directory specifically let's say I wanted to load some data.

818
01:59:31,320 --> 01:59:42,270
Marisa Eisenberg: It will default to looking forward in the working directory or if I save my code it's going to default to saving that in the working directory So if I decided, I wanted to make that the desktop instead I could say okay.

819
01:59:42,990 --> 01:59:50,880
Marisa Eisenberg: If you go here in more you can click set as working directory and it'll change the desktop to being my working directory instead so.

820
01:59:52,050 --> 01:59:59,010
Marisa Eisenberg: there's a bunch of other things that will do in here too, but for now let's sort of leave that at that okay so um.

821
02:00:00,240 --> 02:00:08,040
Marisa Eisenberg: So we've got our sort of main window talked about how to run things and these slides are also all up on the.

822
02:00:08,760 --> 02:00:17,490
Marisa Eisenberg: On the canvas site, so you can use them as like a reference I also posted during the break to our tutorials So if you find yourself confused.

823
02:00:17,820 --> 02:00:33,240
Marisa Eisenberg: And there's like some quick kind of you know brief our tutorials there that are just from like you know kind of these there's a lot of these on the on on the web, so you can find tons but I posted a couple that you can use as a way of sort of getting familiar with our okay.

824
02:00:34,410 --> 02:00:42,360
Marisa Eisenberg: The Oh, the help you can use there's a help down here, if you want to search for things oh apparently I looked up reshape sometime recently.

825
02:00:43,020 --> 02:00:47,310
Marisa Eisenberg: But you can search for different things in the help honestly I.

826
02:00:48,030 --> 02:00:57,990
Marisa Eisenberg: mean many people I know i'm basically code through Google right so like if you it's very, very common that this is your most common help tool.

827
02:00:58,410 --> 02:01:10,050
Marisa Eisenberg: I can't tell you how useful it is even just if you are getting an error in your code literally copy the text of your error and put it into Google and usually it will help you find something that kind of gets started so.

828
02:01:10,530 --> 02:01:20,010
Marisa Eisenberg: Google is is like the number one most useful thing which will frequently take you to the stack exchange website or all the various different flavors of stack exchange, which is.

829
02:01:20,280 --> 02:01:26,430
Marisa Eisenberg: You know you i'm sure you all you all have been students, so you i'm sure have seen stack exchange right but anyway.

830
02:01:26,700 --> 02:01:33,600
Marisa Eisenberg: The the if you just Google, whatever your your issue is, or why you know the error message that you're getting it's that will often really.

831
02:01:34,110 --> 02:01:42,840
Marisa Eisenberg: kind of get you far um okay so let's start with sort of how to actually do something so let's let's write some code to do some various different things and.

832
02:01:45,000 --> 02:01:52,380
Marisa Eisenberg: let's see here, I made a list of oh yeah okay so just like a random duck okay so um I don't see that.

833
02:01:55,050 --> 02:02:05,610
Marisa Eisenberg: Okay, so let's so we made a variable called stuff let's make another variable called thing sure just 10 and then i'll say stuff plus thing.

834
02:02:06,270 --> 02:02:17,820
Marisa Eisenberg: So if I run this stuff is now seven thing I just ran that line and so thing is 10 So you can see over here, it keeps track of all the variables we've made so we have stuff plus thing.

835
02:02:18,240 --> 02:02:26,520
Marisa Eisenberg: Air stuff and thing has two different variables and then, if we we do this, it just prints the value of stuff plus thing here, so I didn't save this.

836
02:02:26,790 --> 02:02:37,410
Marisa Eisenberg: You know I had to use stuff equals seven to save this value of seven if I just do stuff plus thing it just prints it down here in the console if I wanted to save stuff plus thing i'd say like new thing.

837
02:02:37,890 --> 02:02:46,290
Marisa Eisenberg: And that's going to be this, and now we get new thing is 17 right so that's kind of how you sort of do basic things there's a bunch of this.

838
02:02:46,710 --> 02:02:53,730
Marisa Eisenberg: I really should have not named it stuff and thing it's going to make things confusing and that's Okay, but there's a bunch of.

839
02:02:54,330 --> 02:03:09,030
Marisa Eisenberg: Like functions and useful commands that are built in so maybe I want to change let's start using names that are less confusing so let's say maybe I make a is going to be stuff let's make it a lot of stuff.

840
02:03:10,230 --> 02:03:25,560
Marisa Eisenberg: And so now, you know there's a lot of stuff like this that's built in, I could say be his sign of stuff whatever you know all the usual kinds of functions that you might want are built into our typically so um so that's in there and.

841
02:03:26,610 --> 02:03:45,330
Marisa Eisenberg: What else should we do okay so right functions all the oh comments, yes, this little code examples thing is just some random job, but I did post it it's I think the the junk that I wrote last time we talked but um So if you want to write a comment to yourself so like note to self.

842
02:03:46,500 --> 02:03:53,070
Marisa Eisenberg: This line once you put the hash tag symbol in front of it, it won't run so you can make.

843
02:03:54,180 --> 02:03:58,530
Marisa Eisenberg: notes to yourself, or you can make section so it's very common to do something like.

844
02:03:59,760 --> 02:04:01,230
Marisa Eisenberg: setup stuff.

845
02:04:02,310 --> 02:04:06,480
Marisa Eisenberg: And then you kind of make like a nice little header and now this will.

846
02:04:06,900 --> 02:04:15,180
Marisa Eisenberg: be very noticeable as you're scrolling through your long code you'll be able to find Okay, the setup is all here right, you know, so I very much recommend.

847
02:04:15,510 --> 02:04:24,510
Marisa Eisenberg: comment your code make it easy for yourself to read it later, you know leave notes to yourself, about how this is how things work and all that kind of and okay um.

848
02:04:25,890 --> 02:04:40,620
Marisa Eisenberg: let's maybe oh yeah okay logical operation so there's a bunch of Oh, and we need to do is like bigger variables okay so let's do some arrays so let's make see that's going to be confusing let's call this yeah whatever.

849
02:04:42,120 --> 02:04:42,720
Marisa Eisenberg: yeah.

850
02:04:43,830 --> 02:04:53,280
Marisa Eisenberg: Okay, so we're gonna make yay is going to be let's start making something, these are all been just numbers but let's make some things that are raised, remember, we talked about when we did the.

851
02:04:53,490 --> 02:05:00,990
Marisa Eisenberg: beans simulation we made some major cities and things like that that were you know not just they weren't just like.

852
02:05:02,160 --> 02:05:18,570
Marisa Eisenberg: single numbers, they were kind of lists or tables or things like that, so you can you can come, you can use this to concatenate things and make a list so let's say like this, so this now yay is a numeric variable that has three values, so if I print yay.

853
02:05:19,710 --> 02:05:33,540
Marisa Eisenberg: It has 123 I do view yea it will open up a thing, and you can see that it's a little vector I probably should have let's make a yay have to, so the second entry of yay we're going to make this.

854
02:05:34,890 --> 02:05:35,400
Marisa Eisenberg: 57.

855
02:05:37,290 --> 02:05:51,270
Marisa Eisenberg: So now, you can see yay is a little vector that has one two has three entries, the second entry is 57 right, so you can kind of see how you make you can make lists of things, or you can make a matrix of things so.

856
02:05:51,990 --> 02:06:00,000
Marisa Eisenberg: let's make yay two is going to be a matrix and then you can so notice that when I put matrix so.

857
02:06:01,500 --> 02:06:11,910
Marisa Eisenberg: It I put a parentheses, so this is actually a function, so this is like a command that's built into our for making 2d arrays matrices right.

858
02:06:12,180 --> 02:06:21,750
Marisa Eisenberg: And, and when you start to write it when you write this parentheses here, which is where i'm going to say what details about the matrix I want and.

859
02:06:22,140 --> 02:06:31,290
Marisa Eisenberg: It helpfully puts a little hover here I don't know if you can see, this is probably really small, but it makes a little hover that says oh here's what you need to fill in.

860
02:06:31,530 --> 02:06:36,360
Marisa Eisenberg: What do you want the data in the matrix to be so, it gives the default is an na.

861
02:06:36,810 --> 02:06:48,630
Marisa Eisenberg: And how many rows do you want it to have and how many columns do you want to have, and then a bunch of other sort of details about it so in our case let's say we're going to say that the data or we're going to fill it with let's fill it with.

862
02:06:49,260 --> 02:07:02,430
Marisa Eisenberg: tues and we're going to give it the number of rows let's make that stuff so it'll have seven rows and the number of columns let's make that thing so it'll have 10 columns and so now we do yay to.

863
02:07:03,540 --> 02:07:11,550
Marisa Eisenberg: notice that it it saved it in a different as a different category it's not a list of numbers, or a single value.

864
02:07:12,120 --> 02:07:15,840
Marisa Eisenberg: As soon as it sees a two dimensional or higher array of thing lists.

865
02:07:16,440 --> 02:07:27,990
Marisa Eisenberg: Are says to itself up that's a table a table means data, and so it puts it in a different category, so it listed over here and now anything in this data part of the column, if you click it.

866
02:07:28,260 --> 02:07:34,650
Marisa Eisenberg: it'll open it and show you what's inside and so you can see, this is a table a matrix of two's.

867
02:07:35,310 --> 02:07:41,400
Marisa Eisenberg: With seven rows and 10 columns right and so that's that's what we have and so um you can you can.

868
02:07:42,000 --> 02:07:53,190
Marisa Eisenberg: So you notice before we kind of you can access pieces of the table, or the list with the square brackets, and so, if we go yay two and we do a square bracket.

869
02:07:53,430 --> 02:08:05,220
Marisa Eisenberg: You can take it goes rose comma column so let's say I wanted to take the third row and the know the fifth column, and I wanted to change that to be.

870
02:08:06,630 --> 02:08:16,470
Marisa Eisenberg: Whatever something like that some was probably actually a pi function but anyway, whatever um let's say this now, if I go back to yay to.

871
02:08:17,520 --> 02:08:30,420
Marisa Eisenberg: notice that two things that happened you're actually this is kind of an interesting, this is useful to notice so two things happen here and it put in 3.14159 into the spot, that I asked for the third row the fifth column.

872
02:08:30,870 --> 02:08:40,680
Marisa Eisenberg: But also, it had previously been you can see here that what happened was that it had previously been thinking of all of these entries as integer values.

873
02:08:40,920 --> 02:08:48,630
Marisa Eisenberg: And then, when I gave it, one that was not an integer it's a, this is a it has a fraction right it's a decimal it's got a little point something.

874
02:08:49,110 --> 02:08:55,110
Marisa Eisenberg: It had to convert this whole column into two points something something something's so that it could you know.

875
02:08:55,680 --> 02:09:01,110
Marisa Eisenberg: I don't know that it actually changed how it's internally thinking about it, but how it displays it and now has to.

876
02:09:01,980 --> 02:09:11,280
Marisa Eisenberg: display it with all these decimal points so that it can kind of be consistent across the whole call right so it's kind of a funny thing just a little something, but you can see here that it filled it in with three points.

877
02:09:13,830 --> 02:09:32,160
Marisa Eisenberg: For the rest of it is all right Okay, she didn't make matrices remember before I said, you can you can reference a whole row or a whole column by leaving that piece of it blank so for leaving the other piece blank so let's say I wanted to fill the whole second row with.

878
02:09:34,200 --> 02:09:43,410
Marisa Eisenberg: Five instead so i'm going to say the second row and I leave the columns blank that'll mean it takes all the columns and if I just hit enter.

879
02:09:43,980 --> 02:09:59,550
Marisa Eisenberg: Then you now get fives across the board here right so now, the whole second row across all the columns is full of fives this is make sense, everybody, so you feel like you could kind of like poke around okay good good good okay so um.

880
02:10:00,810 --> 02:10:08,850
Marisa Eisenberg: Alright um there's some handy little things this is fine, oh yeah Okay, if you get a note with.

881
02:10:09,660 --> 02:10:16,680
Marisa Eisenberg: You know, maybe you're going to actually code some stuff in a minute and there's all this junk in here, and you want to clear all the old stuff that you've made.

882
02:10:16,920 --> 02:10:22,680
Marisa Eisenberg: You can click this broom icon that you can also there's a command this too, but you can you can click this broom icon.

883
02:10:23,100 --> 02:10:33,540
Marisa Eisenberg: and say yes please do remove everything and it just deletes all the stuff that i've i've run so far and and then I can go back and we make it all I want to and there you go now we're back.

884
02:10:34,170 --> 02:10:46,950
Marisa Eisenberg: So, but this is part of so a couple of things and you want to make sure that before you run your code you delete all the stuff like that you know run this either either put.

885
02:10:47,970 --> 02:10:57,540
Marisa Eisenberg: there's a you can like you can put this this little code at the top and it'll it'll clear everything So if you do that, that will clear everything.

886
02:10:58,230 --> 02:11:06,990
Marisa Eisenberg: or click the broom the number of times that i've seen people forget that so let's say I had run my code before.

887
02:11:07,890 --> 02:11:26,670
Marisa Eisenberg: And so I have all of this, and then I decided, you know what naming something stuff is silly i'm going to change this and maybe named this cat and so then i'm going to do whatever I guess I need to change it to cat everywhere, but let's say whatever she pretended I do.

888
02:11:28,170 --> 02:11:33,180
Marisa Eisenberg: think you can there's a way to well I could find and replace but anyway suppose I change it to cat.

889
02:11:34,500 --> 02:11:46,830
Marisa Eisenberg: um anyway, so I changed it to cat but then later I use or maybe I forget actually it's even better I forget to change it to cap everywhere so let's say I change stuff into that I changed the name of its cat.

890
02:11:47,070 --> 02:11:55,710
Marisa Eisenberg: But I forgot to change all of these other stuffs to say stuff and then I run my code, I decided Oh, you know what actually I don't think.

891
02:11:56,190 --> 02:12:00,480
Marisa Eisenberg: tad now cat should be seven, I think it should be nine because.

892
02:12:01,110 --> 02:12:14,700
Marisa Eisenberg: cats have nine lives recently I don't know anyway, it should be not so, but because I didn't if I don't clear my memory this I don't clear this the all my variables before I run this code, the next time I run this code.

893
02:12:15,300 --> 02:12:23,310
Marisa Eisenberg: I set cat tonight here, but I forgot to change all of these places where I use stuff now cat right and.

894
02:12:23,910 --> 02:12:40,770
Marisa Eisenberg: But if I run this code, it should, in theory, throw an error, as soon as it reaches this part because there isn't anything named stuff right but I didn't clear stuff stuff is still loaded into memory, and so, then that means that if I run this code, it makes a new thing called cast.

895
02:12:42,120 --> 02:12:51,510
Marisa Eisenberg: And then, it just uses the old stuff to run all of these lines, with no errors right, and so, if you don't remember to clear your your environment before you run your code.

896
02:12:51,780 --> 02:13:02,580
Marisa Eisenberg: you'll really screw yourself up because you can you'll be fiddling with a bunch of things you'll leave stuff in there and then it can change how your code runs because you've got all this extra junk loaded into memory.

897
02:13:02,850 --> 02:13:09,600
Marisa Eisenberg: So if I now clear my memory and then rerun my code again cat thing hey.

898
02:13:10,020 --> 02:13:25,380
Marisa Eisenberg: There is no such thing as stuff what are you doing right it throws an error, which is helpful to me, because now, I say oh whoops this was supposed to be cat right, and so I I would now fix my coat so just be thoughtful about that guys okay i'll leave this this doesn't change it.

899
02:13:26,730 --> 02:13:27,060
Marisa Eisenberg: Okay.

900
02:13:28,230 --> 02:13:30,000
Marisa Eisenberg: let's see let's so that's.

901
02:13:31,410 --> 02:13:38,550
Marisa Eisenberg: I put in here a bunch of examples of how to make different kinds of vectors or lists or matrices tables.

902
02:13:39,060 --> 02:13:55,920
Marisa Eisenberg: This is like more mathematical language, but how do you want to make lists of things or tables of things, and you can do a lot of different ways, so you can play with these different commands that are built into our as ways of doing this and oftentimes you'll use something like.

903
02:13:57,030 --> 02:14:05,070
Marisa Eisenberg: A lot of these kinds of commands so matrix I don't know you can do numeric you can do there's a lot of different so like.

904
02:14:07,470 --> 02:14:11,520
Marisa Eisenberg: You this it'll make it'll fill it with euros, so if you say like.

905
02:14:12,570 --> 02:14:24,510
Marisa Eisenberg: test is numeric five it'll make a blank sort of list of a vector of five numbers that, then you can fill with whatever it is that you want, as you go.

906
02:14:25,200 --> 02:14:35,550
Marisa Eisenberg: So in the slides you can kind of use this as a reference and play around with things you can also if you just Google, if you want to make a list of items in our and you don't know how.

907
02:14:35,790 --> 02:14:41,970
Marisa Eisenberg: You can just Google, how do I make a list of things that are, and it will you usually will find it so if you can kind of like.

908
02:14:42,180 --> 02:14:50,520
Marisa Eisenberg: figure out a way to state your question in plain language, you can usually just Google that and it will it will typically work so um so yeah so anyway so that's the thing.

909
02:14:50,850 --> 02:15:02,430
Marisa Eisenberg: And you can you can do a lot of stuff with figuring out dimensions of objects and things like that, but i'm not going to really worry about that you're in part because we run all this junk again.

910
02:15:03,930 --> 02:15:12,390
Marisa Eisenberg: And notice here if you're wondering about dimensions of objects like how big is your array or your whatever it is i'm sorry.

911
02:15:13,470 --> 02:15:20,730
Marisa Eisenberg: right place and it shows it here in the environment so and each of the numbers that are just playing numbers, it shows what the number is.

912
02:15:20,970 --> 02:15:38,220
Marisa Eisenberg: If you have a list of things and it shows you the length so it's one through five so that's the that's the the indices of this so it's got five elements one through five elements right it's a list or a vector with five things, this is a table or a matrix with.

913
02:15:39,390 --> 02:15:53,430
Marisa Eisenberg: Nine rows and 10 columns right, and so, in many cases it will show a little preview and you can't see the whole thing if the list is too long, or the matrix is too big you can't see it all, but you can see what size, it is what the entries are made of.

914
02:15:54,090 --> 02:15:57,360
Marisa Eisenberg: Just as an example it's not always just numbers, so you can say.

915
02:15:58,950 --> 02:15:59,700
Marisa Eisenberg: dog.

916
02:16:03,780 --> 02:16:06,450
Marisa Eisenberg: So hang on I assign that to something.

917
02:16:09,390 --> 02:16:11,130
Marisa Eisenberg: So now test two.

918
02:16:12,480 --> 02:16:24,900
Marisa Eisenberg: Is a Okay, so it coerced into character, so this is now a little like a vector or list of words strings so cat dog five we don't really use much of the string piece of this.

919
02:16:25,680 --> 02:16:36,390
Marisa Eisenberg: Very often, but you can have other things besides numbers, I guess that's all I was trying to make the point out there and okay So there we go um.

920
02:16:37,110 --> 02:16:48,480
Marisa Eisenberg: basic functions are built in, you know all exponential logs all that kind of thing square roots absolute values, taking the mean of something all of that kind of stuff so maybe I want to take.

921
02:16:49,320 --> 02:17:02,520
Marisa Eisenberg: The mean of all let's say how about yay veena va is 20.333 because it's 157 and.

922
02:17:03,480 --> 02:17:12,510
Marisa Eisenberg: Three and I guess the mean of that ends up being 20.3 right, so you can take means and I don't know that this would be very exciting but.

923
02:17:12,930 --> 02:17:21,150
Marisa Eisenberg: You could do that you can take a median the you know, etc, so you can you can most a lot of the like common functions that you might want to use in.

924
02:17:21,510 --> 02:17:29,160
Marisa Eisenberg: Running some kind of simple analysis taking a mean taking a median taking a standard Eve all of those are built into our so you can just Google.

925
02:17:29,520 --> 02:17:51,660
Marisa Eisenberg: You know standard deviation are variants are whatever any of those kinds of things and they're usually built in, so there are a couple of special ones, and so we saw before our unit generates a random numbers drawn from a 01 distribution so let's just do that.

926
02:17:53,310 --> 02:18:03,540
Marisa Eisenberg: Again, so let's say we want to generate 10 a list of 10 random numbers drawn from zero interval 01 here they are and.

927
02:18:04,140 --> 02:18:14,370
Marisa Eisenberg: wow that is a perfect example of what michaels talking about, for the first three are all really high 80s interesting but anyway, you can do this, a bunch of times, and you can get.

928
02:18:16,500 --> 02:18:24,960
Marisa Eisenberg: You can get a bunch of different lists, you can make huge so i'm going to make a three is going to be a giant list of 100.

929
02:18:25,440 --> 02:18:34,800
Marisa Eisenberg: Random numbers and now you can see over here yay three is there it's got 100 values and they're all random numbers drawn from zero to one and.

930
02:18:35,430 --> 02:18:49,140
Marisa Eisenberg: You can pull a lot so here notice it says, our unit there's lots of other distribution so normal distribution, you can give it a mean and a Sigma immune a Sigma and it'll draw a normal distribution.

931
02:18:49,680 --> 02:18:58,950
Marisa Eisenberg: Or you can there's plus on there's you know all of the distribution any distribution to your heart's content, you can find you can get it to pull a random sample.

932
02:18:59,460 --> 02:19:11,700
Marisa Eisenberg: From that, and you know, etc, so those are all built into our you can do all this, you can set the seed for those of you who are sort of familiar with this idea, maybe for coding purposes, so if I run this our unit.

933
02:19:17,040 --> 02:19:26,970
Marisa Eisenberg: Numbers if I do this again I get different random numbers because it's using a random number generator to produce as close as it can truly random as much as close as it can get to truly random.

934
02:19:27,480 --> 02:19:39,060
Marisa Eisenberg: Data but and, of course, you know for debugging purposes, I might not wanted to produce different numbers every time, maybe there's I noticed that.

935
02:19:39,420 --> 02:19:47,880
Marisa Eisenberg: On a particular run it throws an error but it doesn't do it for every single run and so it's kind of hard to reproduce that error and figure out what's wrong.

936
02:19:48,180 --> 02:19:53,400
Marisa Eisenberg: If it's actually changing it so you can do what's called you can set the seed.

937
02:19:54,240 --> 02:20:04,800
Marisa Eisenberg: And, actually, that was a perfect example to our has our studio has tab completion, so if you start to type set it says Oh, I thought you're trying to set the seed and then you can hit tab and it'll just finish it for you.

938
02:20:05,280 --> 02:20:14,580
Marisa Eisenberg: So i'm going to set the seed to five and now every time I run this pair of lines, it will generate the same.

939
02:20:15,030 --> 02:20:22,830
Marisa Eisenberg: Random number set because i'm setting the scene for the random number generators the random number generator and.

940
02:20:23,310 --> 02:20:29,940
Marisa Eisenberg: takes an argument, called the seed it basically it takes a number that that decides what random numbers it's going to spit out.

941
02:20:30,330 --> 02:20:36,930
Marisa Eisenberg: And so, if you set that seed to a fixed value usually the seed is changing all the time it's often based on like whatever.

942
02:20:37,650 --> 02:20:55,380
Marisa Eisenberg: But the clock time all kinds of weird things but um, but if you set it to something it will always generate the same thing, so if you want to make sure for debugging or something that you get the exact same data every time then it's helpful to set the scene and Okay, what else.

943
02:20:56,670 --> 02:21:11,430
Marisa Eisenberg: We pause here and then we're going to do if statements and for loops and functions and just are there questions about any of this apart, I hope you all have been kind of like trying along on your own thing as we go hasn't been working for everybody.

944
02:21:13,830 --> 02:21:25,920
Marisa Eisenberg: yeah he's like yeah okay good good okay so um and, as I said before, sorry in advance for everybody who's a you know both many of you have seen this Center very comfortable.

945
02:21:26,460 --> 02:21:41,700
Marisa Eisenberg: But just to make sure everybody gets on the same page and OK, so now we start to get into this was all sort of like, how do you sort of move around and do stuff and make basic things that are, but now let's start to think about the logic of programming so um.

946
02:21:42,810 --> 02:21:56,220
Marisa Eisenberg: let's think about a statement so to think about if statements basically a lot of programming involves saying, if the following thing happens do this right so.

947
02:21:56,790 --> 02:22:06,330
Marisa Eisenberg: You often want to have it say okay if, like we did with the beads if the if the random number we generated is less than the probability of the bb and yellow.

948
02:22:06,540 --> 02:22:15,750
Marisa Eisenberg: You want to choose a yellow beat, otherwise we want to choose a blue beam so if statements are great for this and if statements take our sort of they need to.

949
02:22:16,140 --> 02:22:31,680
Marisa Eisenberg: there's a you write the if part of it, but then you need to sort of write the criteria, so the yes, no question does do we do this, or do we do that and, and so, for that I wanted to introduce logical statements and sort of true false statements so.

950
02:22:33,060 --> 02:22:34,230
Marisa Eisenberg: For instance.

951
02:22:36,240 --> 02:22:40,170
Marisa Eisenberg: So there's a couple things you, you want to use, so the double equals.

952
02:22:40,770 --> 02:22:52,230
Marisa Eisenberg: means don't assign these two things to don't say five is going to it's not a command telling you that five is going to be equal to four says check this is asking a question.

953
02:22:52,470 --> 02:23:01,140
Marisa Eisenberg: Is five equal to four so if we run this it'll say false no it's not, but if we do this and say yes that's true so and.

954
02:23:01,860 --> 02:23:11,280
Marisa Eisenberg: You can also do so you can these are this is how you build the question that an if statement is going to work off of so we want to say if.

955
02:23:12,210 --> 02:23:27,810
Marisa Eisenberg: stuff let's say maybe is equal to five, then we would do something right, then we need to be able to write down the question is stuff equal to five, and so this no it's not but then I could say let's change that look that's 56.

956
02:23:29,220 --> 02:23:46,740
Marisa Eisenberg: And now stuff equals five is true, and so this is the distinction between single equals and double equals, this is saying do it, and this is saying is this the case or not, and you could also do things like his stuff greater than or equal to two.

957
02:23:49,530 --> 02:23:57,450
Marisa Eisenberg: or less than sorry I wrote lesson is it less than or equal to two you could say, is it greater than two yes that's true and.

958
02:23:57,870 --> 02:24:13,110
Marisa Eisenberg: You can do a lot of this kind of thing you can also make logical statements that are more complicated so, is it true that stuff is maybe let's say, less than two or um how about.

959
02:24:14,940 --> 02:24:20,640
Marisa Eisenberg: over some of test is equal to zero.

960
02:24:22,410 --> 02:24:33,690
Marisa Eisenberg: So this little vertical guy I guess I shouldn't have actually we could well change this and this little vertical guy is is an or symbol, so this is checking.

961
02:24:34,290 --> 02:24:46,560
Marisa Eisenberg: If this is true or this is true, this whole thing will be true does that make sense, so in this case, this one's false right, so we can do this part and that's false this part.

962
02:24:47,610 --> 02:24:57,150
Marisa Eisenberg: is true because test is just a is is just full of zeros right So if you add up all those zeros you get zero so this whole thing now.

963
02:24:57,990 --> 02:25:07,560
Marisa Eisenberg: is true, because even though the first part is false, the second part is true so or statements say if either one of these is true, the answer is yes and and statement.

964
02:25:08,910 --> 02:25:17,070
Marisa Eisenberg: says if stuff is less than two and the sum of test is zero, then this whole statement is true, so this case this is going to be false.

965
02:25:17,370 --> 02:25:22,590
Marisa Eisenberg: Because you need to have both in order to have the whole statement turned out to be true that make sense, everybody.

966
02:25:23,130 --> 02:25:38,220
Marisa Eisenberg: Okay, this is probably very old news to a lot of folks but just to kind of get everyone Kofi so now let's start to put together our like if statement, so if we wanted to do if so you can actually if you type if and then just hit tab.

967
02:25:39,330 --> 02:25:43,980
Marisa Eisenberg: it's very nice are will help you out it'll say Oh, I think you're trying to write an if statement.

968
02:25:44,610 --> 02:25:49,530
Marisa Eisenberg: Or did you want, and if else they've got like a bunch of functions for these but let's just do this if statement.

969
02:25:49,920 --> 02:26:04,050
Marisa Eisenberg: So it'll help you out it says Okay, if you hit tab it says here's how you format and if statements and, and this is really nice for a lot of ours kind of syntax if you hit tab it will often try and help you finish it so it says.

970
02:26:04,800 --> 02:26:12,390
Marisa Eisenberg: Are our studio will so if and then you fill this condition in with whatever your condition is so maybe, for instance, this.

971
02:26:13,440 --> 02:26:16,410
Marisa Eisenberg: let's put that here, so if this is true.

972
02:26:19,470 --> 02:26:24,570
Marisa Eisenberg: Then everything in the bracket is what you're going to do so maybe we say French.

973
02:26:26,310 --> 02:26:26,850
Marisa Eisenberg: hi there.

974
02:26:28,770 --> 02:26:31,110
Marisa Eisenberg: um so if we run this.

975
02:26:32,490 --> 02:26:41,250
Marisa Eisenberg: it's it's not going to do anything right because this thing is false, this whole statement is false right, so if we run this it doesn't print hi there.

976
02:26:41,820 --> 02:26:52,050
Marisa Eisenberg: If we change stuff to equal one now, it does, because now stuff is less than two and so it'll run the statement you can do if else also so.

977
02:26:53,820 --> 02:26:55,080
Think it's just this.

978
02:26:56,160 --> 02:27:00,720
Marisa Eisenberg: And so, this respect being five and.

979
02:27:07,470 --> 02:27:08,910
Well, who knows actually.

980
02:27:12,510 --> 02:27:13,470
Was print.

981
02:27:14,670 --> 02:27:31,020
Marisa Eisenberg: Today Okay, so what this does it checks this conditional stuff less than two and the sum of test is equal to zero, if this thing is true it prints hi there, otherwise, if this was false, then it will print Hello so.

982
02:27:33,600 --> 02:27:36,900
Marisa Eisenberg: And it prints either because I didn't actually run this hahaha.

983
02:27:38,550 --> 02:27:42,330
Marisa Eisenberg: Okay, so notice what happened when I met when I left stuff as.

984
02:27:42,870 --> 02:27:53,910
Marisa Eisenberg: Of the value of one it printed hi there because it was it got this statement was true so in in here and I change stuff to be invaluable five prints Hello okay So hopefully.

985
02:27:54,480 --> 02:28:02,100
Marisa Eisenberg: If statements, making okay sense seem reasonable, even for those of you who have not voted okay okay good um.

986
02:28:03,030 --> 02:28:22,260
Marisa Eisenberg: So that's if statements there's a bunch more like examples, you can have you can chain multiple if statements together etc and let's take a moment here, so what we're going to do now, if you go to the odd us today's page down here at the bottom there's a lab.

987
02:28:23,910 --> 02:28:33,780
Marisa Eisenberg: And oh interesting, you can just open it in the thing that's fine i'm okay so we're going to do let's take let's take five minutes 10 minutes.

988
02:28:34,650 --> 02:28:44,280
Marisa Eisenberg: And we'll take five minutes, I think we can do this pretty quickly and we're going to start this lab and write an if statement that does this so.

989
02:28:44,610 --> 02:28:51,750
Marisa Eisenberg: write code that generates a random variable X between zero and one, so this is going to use that our unit.

990
02:28:52,380 --> 02:29:05,430
Marisa Eisenberg: If X is bigger than Point six square it so set X equal to X square if X is less than point three make X equal five and otherwise set X equal to zero.

991
02:29:06,030 --> 02:29:25,350
Marisa Eisenberg: And then run this 10 times and see how many times, do you get that X is equal to five does it match what you would expect, based on the fact that you're using a uniform random variable between zero and one okay does that make sense to everybody has a thing to do.

992
02:29:26,550 --> 02:29:27,960
Marisa Eisenberg: It would be helpful to see.

993
02:29:29,220 --> 02:29:40,890
Marisa Eisenberg: So you can take this code and adapt it, the one thing you'll need is you're going to use an lcs so what you're going to do is this so let's say else's stuff.

994
02:29:42,630 --> 02:29:44,940
Marisa Eisenberg: That stuff is.

995
02:29:46,470 --> 02:29:54,300
Marisa Eisenberg: let's say greater than or equal to two and less than five this and then else.

996
02:30:01,980 --> 02:30:10,470
Marisa Eisenberg: Okay, so this is is the kind of if statement that you're going to need If so, this checks let's actually just ditch this.

997
02:30:12,390 --> 02:30:23,280
Marisa Eisenberg: If stuff is less than to do something if stuff otherwise if stuff is greater than or equal to two and less than five so if it's between two and five to this instead.

998
02:30:23,670 --> 02:30:33,870
Marisa Eisenberg: Otherwise, if it's not in any of these two situations do this right, so what you're going to do is that same idea you're going to generate a variable.

999
02:30:34,320 --> 02:30:46,410
Marisa Eisenberg: Variable X with our unit so you'll go, you know X equals our unit just one number So there you go, so now you've got an x there it is over here.

1000
02:30:47,010 --> 02:30:58,560
Marisa Eisenberg: And then you're going to write an if statement that will square it or said it equal to five or said it equal to zero, and then just run that if statement 10 times and see what you get.

1001
02:30:59,580 --> 02:31:05,490
Marisa Eisenberg: Okay, does that make sense, everybody else all right okay take five minutes and and give it a try.

1002
02:31:28,830 --> 02:31:33,750
Marisa Eisenberg: Stop sharing, because I know code, it might as well also do the lab flower yeah.

1003
02:35:23,820 --> 02:35:24,390
Marisa Eisenberg: Okay.

1004
02:35:31,110 --> 02:35:31,860
Marisa Eisenberg: How are you doing.

1005
02:35:34,020 --> 02:35:35,760
Marisa Eisenberg: ish not a minute or two.

1006
02:35:36,810 --> 02:35:37,740
Marisa Eisenberg: Can close okay.

1007
02:38:14,880 --> 02:38:16,710
Marisa Eisenberg: Oh yeah good, thank you for.

1008
02:38:18,060 --> 02:38:21,660
Marisa Eisenberg: Checking in how did everybody get if statements ish kinda.

1009
02:38:22,920 --> 02:38:24,150
Marisa Eisenberg: he's still working.

1010
02:38:24,210 --> 02:38:24,900
might still be worth.

1011
02:38:27,330 --> 02:38:28,710
Caroline Godfrey: A try but mine's not functional.

1012
02:38:30,240 --> 02:38:30,540
Marisa Eisenberg: Okay.

1013
02:38:32,310 --> 02:38:42,840
Marisa Eisenberg: that's Okay, well, I guess how about this, let me ask it this way, how about rather than done does everyone feel like they took a reasonable stab at it and maybe it's okay to reconvene does that feel fine.

1014
02:38:43,950 --> 02:38:45,600
Marisa Eisenberg: Okay um yes.

1015
02:38:46,860 --> 02:39:05,280
Marisa Eisenberg: Okay, so let me, let me show an example and then I can also post some more like if statement kinds of questions that you can play with as practice leader and and but will i'll take you through how the system works, and then we can post somewhere and okay so.

1016
02:39:08,670 --> 02:39:28,080
Marisa Eisenberg: Okay, so here's um So this was our question, we want to generate a random variable X uniformly between zero and one so that's this part so we're going to make a random variable X uniformly between zero and one, let me actually clear all my junk here we.

1017
02:39:30,000 --> 02:39:39,570
Marisa Eisenberg: So we've got one there it is X is point oh six something something and then, when you want to write an if statement, so if X is bigger than Point six we're going to square it.

1018
02:39:40,110 --> 02:39:47,550
Marisa Eisenberg: Okay, so that's the first part, so if X is bigger than Point six then we're going to say X is equal to X squared.

1019
02:39:47,850 --> 02:40:00,030
Marisa Eisenberg: So we're going to we're going to square it and you don't necessarily have to actually set it equal to X squared you could also just print X squared but anyway let's do this and and then otherwise if.

1020
02:40:01,740 --> 02:40:12,930
Marisa Eisenberg: If X is less than point three said it equal to five okay so else if X is less than point three we're going to set X equal to five.

1021
02:40:14,130 --> 02:40:25,050
Marisa Eisenberg: Otherwise that's going to be else X is going to equal zero and then we're going to run this 10 times and see what we get so if you just run it run this.

1022
02:40:26,310 --> 02:40:42,240
Marisa Eisenberg: You can see what it is over here, so we ran it once and we got 500 again Okay, that which is presumably X squared you know, etc, you can run it a bunch of you can also have it if you type.

1023
02:40:42,270 --> 02:40:43,410
Adriana Perez: X at the end.

1024
02:40:44,070 --> 02:40:56,100
Marisa Eisenberg: it'll print, the answer to the console so, then you get sort of a record of what you've got each time, so you can see down here it's printing the value into the into the output here, so you can see a bunch of different ones.

1025
02:40:57,450 --> 02:41:09,720
Marisa Eisenberg: Okay, so that was sort of the version that I was thinking we would make and does this make sense to everybody is a thing let's make take a minute here to kind of make sense of this.

1026
02:41:12,780 --> 02:41:18,780
Caroline Godfrey: I think the thing I was doing right, so it sounds like the spaces matter in like where you put spaces in your code.

1027
02:41:18,780 --> 02:41:21,270
Caroline Godfrey: Like if you don't put a space after X equals.

1028
02:41:21,300 --> 02:41:23,910
Caroline Godfrey: Before our unit like it won't run.

1029
02:41:24,750 --> 02:41:35,550
Marisa Eisenberg: Oh, really, it should be, this should be fine oh that should work, it is true, though in certain situations spaces do matter so like if you do this, that doesn't work.

1030
02:41:35,970 --> 02:41:46,320
Marisa Eisenberg: Like if you just do Elsa all together, then it'll get angry, there are eight languages, where that's fine, but this one, it won't so a lot of these spaces are just for prettiness but.

1031
02:41:47,130 --> 02:41:57,000
Marisa Eisenberg: There are some where it matters that around the equal sign should be okay um what else is grumpy I think it gets mad about the brackets either.

1032
02:41:58,890 --> 02:42:02,040
Marisa Eisenberg: it's really like if you merge commands it gets annoyed.

1033
02:42:02,760 --> 02:42:09,780
Caroline Godfrey: Okay, it doesn't matter like when you have the close bracket, for example, like on the next line before.

1034
02:42:09,870 --> 02:42:23,280
Marisa Eisenberg: That does matter, yes, yes, yes, so like if I did, for like what okay I can't say if I did this, instead, for instance, it does matter, but so that's a that's a really good point so like.

1035
02:42:23,520 --> 02:42:24,870
Marisa Eisenberg: If I run this.

1036
02:42:25,440 --> 02:42:29,760
Marisa Eisenberg: it treats this piece as a complete statement.

1037
02:42:30,210 --> 02:42:40,410
Marisa Eisenberg: And doesn't realize that it needs to run the else part of it, because it's on the next line, so it finishes running this line and says oh I close my brackets i'm done good yay.

1038
02:42:40,650 --> 02:43:00,150
Marisa Eisenberg: And then, when you do else it gets annoyed right it says hey what the heck wise what like this is so, you have to put the else on the same line as the bracket closure and yeah so that elson that and that all has to all be on one line like that yeah does that make sense that yeah okay.

1039
02:43:01,860 --> 02:43:09,870
Caroline Godfrey: Good and then how did you go when you ran it multiple times how did you get it to give something different, each time because mine seems to have just like cemented the value of X.

1040
02:43:10,680 --> 02:43:11,880
Marisa Eisenberg: it's probably because.

1041
02:43:12,150 --> 02:43:16,560
Marisa Eisenberg: Do you have a or use let's see are you setting the seed.

1042
02:43:17,580 --> 02:43:22,320
Marisa Eisenberg: Few that it'll definitely no no okay um.

1043
02:43:23,670 --> 02:43:25,560
Marisa Eisenberg: Maybe that's weird.

1044
02:43:26,610 --> 02:43:28,380
Marisa Eisenberg: Like when you run it again it doesn't change.

1045
02:43:30,030 --> 02:43:35,220
Caroline Godfrey: yeah if I when I just click run up at the top, it just.

1046
02:43:35,250 --> 02:43:40,140
Marisa Eisenberg: yeah Oh, I see if you click run it only runs the one line if you click source, it runs the whole thing.

1047
02:43:40,680 --> 02:43:41,250
Caroline Godfrey: Oh OK.

1048
02:43:41,640 --> 02:43:42,090
Marisa Eisenberg: So that's.

1049
02:43:42,120 --> 02:43:43,560
Caroline Godfrey: yeah that's probably what it is so.

1050
02:43:43,710 --> 02:43:43,950
yeah.

1051
02:43:44,970 --> 02:43:51,210
Marisa Eisenberg: Or you can also do this if you select the whole chunk and then click run it'll run the whole set.

1052
02:43:52,650 --> 02:43:54,240
And then it should generate different values.

1053
02:43:58,500 --> 02:43:58,950
Okay.

1054
02:44:02,520 --> 02:44:03,900
Marisa Eisenberg: awesome okay.

1055
02:44:05,220 --> 02:44:08,580
Marisa Eisenberg: Does that work, hopefully excellent okay good yes good.

1056
02:44:08,670 --> 02:44:11,430
Marisa Eisenberg: Hopefully, everybody is getting things that are kind of behaving.

1057
02:44:11,790 --> 02:44:21,690
Marisa Eisenberg: And I wanted to point out a slightly fancier version of this so it's harder to read, but it's slightly fancier so.

1058
02:44:22,380 --> 02:44:33,540
Marisa Eisenberg: We I said in the instructions, I said run at 10 times over the ask you all did it turn out about the right number of times I don't know we're gonna find out, so you can do it, you could do this.

1059
02:44:33,990 --> 02:44:45,990
Marisa Eisenberg: And you could keep track of you know Okay, so I once I got one zero what am I supposed to be checking how many times it equals five so none yet there's one is my third thing for.

1060
02:44:47,460 --> 02:45:01,500
Marisa Eisenberg: Okay, two fives that have six runs I think seven runs with 359 Okay, so I got three five out of 10 and and.

1061
02:45:02,970 --> 02:45:09,420
Marisa Eisenberg: that's about right right so three times out of 10 I said, if X X was a uniform variable between zero and one.

1062
02:45:10,020 --> 02:45:19,350
Marisa Eisenberg: And I said, if it's less than point three said it equal to five so that should happen about 30% of the time so three five out of 10 is actually like surprisingly right on.

1063
02:45:20,130 --> 02:45:26,790
Marisa Eisenberg: And so that's good so that's kind of what I would expect you can do that, you can run it 10 times and see it and that's fine that's great but.

1064
02:45:27,570 --> 02:45:35,550
Marisa Eisenberg: it's annoying right now, you have to like keep track of how many times it ran a certain way wouldn't it be nice if, instead of doing that you could just do it all at once.

1065
02:45:35,820 --> 02:45:53,820
Marisa Eisenberg: And so you can so if instead you do this let's run let's make our unit is now a list of 10 things so if I go view or X rather view X, so now we have 10 random numbers here, so this is our X and.

1066
02:45:55,440 --> 02:46:03,150
Marisa Eisenberg: So we make X a list of 10 you can, if you just run that in this code it won't work, so if I change this to 10.

1067
02:46:04,230 --> 02:46:09,390
Marisa Eisenberg: It gets annoyed because it says, what do you mean X is greater than Point six X is a list of 10 numbers.

1068
02:46:09,600 --> 02:46:15,960
Marisa Eisenberg: Which one do I check is greater than Point six I don't know what to do, you can there are ways to do this that'll behave, but so.

1069
02:46:16,200 --> 02:46:23,940
Marisa Eisenberg: it'll it'll grumble at you what you can one of the things you can do, one of the ways to deal with, that is, if I want to run it on all 10 numbers at the same time.

1070
02:46:24,360 --> 02:46:34,620
Marisa Eisenberg: I can use it has a built in our has a built in function if outs, so this this built in function works like this, so you do if else.

1071
02:46:35,490 --> 02:46:44,220
Marisa Eisenberg: stuff and if you notice the little hover the test condition and then what to do if you get a yes to the question you're asking and what to do if you get to know.

1072
02:46:44,460 --> 02:46:53,610
Marisa Eisenberg: So you can just fill this in with three arguments, so what i'm going to do, since I have more conditions i'm going to say check if X is greater than Point six.

1073
02:46:54,000 --> 02:47:04,410
Marisa Eisenberg: If the answer is yes, return X squared is the answer is no, well do another check check now if X is less than point three.

1074
02:47:04,950 --> 02:47:15,300
Marisa Eisenberg: If the answer is yes, return five if the answer is no return zero so this one line captures this whole if else if else.

1075
02:47:15,660 --> 02:47:25,410
Marisa Eisenberg: block of code right it's way shorter it's also way harder to read like this is not a very like friendly piece of code right it's got like nested functions.

1076
02:47:25,740 --> 02:47:35,850
Marisa Eisenberg: You know it's just kind of there like it doesn't look very nice right and so um, but it is efficient, if you do this, you get and then let's print out what X is.

1077
02:47:36,270 --> 02:47:46,620
Marisa Eisenberg: You get a nice list of it doesn't all at once all 10 numbers are done at the same time, you know it's very or not at same time but they're all done in one line and so it's very convenient from that so.

1078
02:47:47,160 --> 02:47:52,620
Marisa Eisenberg: just wanted to kind of point this out that there are often like built in functions in our that will give you.

1079
02:47:53,070 --> 02:48:00,900
Marisa Eisenberg: You can do things in sort of a simpler way that's probably easier to read and will work totally just fine and many times, I prefer that myself just because I want to be able to.

1080
02:48:04,560 --> 02:48:15,150
Marisa Eisenberg: Have, but if you need efficiency, there are often built in functions that will help you kind of condensed it down if you want to do that, we also do this with loops which we'll talk about more in a minute as well and.

1081
02:48:16,620 --> 02:48:27,030
Marisa Eisenberg: Oh sorry the callbacks oh yeah sorry sorry okay let's do that again so um when I made this X, I made it into a big column, so if you type view.

1082
02:48:28,050 --> 02:48:28,740
Marisa Eisenberg: X.

1083
02:48:30,300 --> 02:48:31,560
Marisa Eisenberg: it'll it'll show it to you.

1084
02:48:36,060 --> 02:48:36,570
Marisa Eisenberg: Know work.

1085
02:48:37,680 --> 02:48:38,010
Better.

1086
02:48:39,750 --> 02:48:43,710
Marisa Eisenberg: Good good cool okay great okay so so.

1087
02:48:44,730 --> 02:48:46,560
Marisa Eisenberg: Do you all kind of have something.

1088
02:48:48,690 --> 02:49:06,630
Marisa Eisenberg: Do you have something um that that kind of works for this part at least this feels okay i'll post this whole file at the end of our session today it's just gonna be as it's just a bunch of junk but then you'll just have it, you know, like a working example of a bunch of these things.

1089
02:49:07,740 --> 02:49:08,100
Marisa Eisenberg: Okay.

1090
02:49:09,720 --> 02:49:13,830
Marisa Eisenberg: You feel like you could at least like muddle through and get something like this to work yeah.

1091
02:49:15,240 --> 02:49:15,690
Marisa Eisenberg: ish.

1092
02:49:16,770 --> 02:49:19,830
Marisa Eisenberg: Okay okay get okay so.

1093
02:49:21,210 --> 02:49:21,570
Marisa Eisenberg: Okay.

1094
02:49:21,630 --> 02:49:23,580
Rishi Chanderraj: quick question um.

1095
02:49:23,640 --> 02:49:29,550
Rishi Chanderraj: So I imagine when you're doing a bunch of like big complicated simulations.

1096
02:49:30,960 --> 02:49:39,720
Rishi Chanderraj: It might be harder to read, but probably like mixed your problem, little bit more tractable if you.

1097
02:49:39,720 --> 02:49:40,110
Marisa Eisenberg: Do.

1098
02:49:40,140 --> 02:49:41,220
Rishi Chanderraj: Like the second way.

1099
02:49:41,490 --> 02:49:56,460
Marisa Eisenberg: Yes, very strongly yes yeah, so there is a lot of like when you're running a bunch of like even the point is earned doesn't take that long to run and it will, if we had a bunch of complicated if else's it wouldn't be a big deal to do it.

1100
02:49:56,610 --> 02:49:57,390
Rishi Chanderraj: This first way.

1101
02:49:57,630 --> 02:50:10,860
Marisa Eisenberg: But if you're running something that's really time intensive it's often the case that these kinds of what are called vector eyes functions so they're built in functions in our that operate on vectors on on lists of numbers.

1102
02:50:12,540 --> 02:50:22,020
Marisa Eisenberg: Are faster than doing it one, at a time, so, even if we put a loop around this and ran it 10 times this second way would probably be faster because it's it's.

1103
02:50:22,290 --> 02:50:34,950
Marisa Eisenberg: Our has you know, the people who developed our have built very efficient routines for doing large arrays at the same time, with this code and so usually these kinds of things I.

1104
02:50:35,760 --> 02:50:48,600
Marisa Eisenberg: don't think we would see the difference if we tried to time it with this, because it's too simple, but if you try running something that's really slow, it will usually be faster with something like this, so um so it's often.

1105
02:50:49,830 --> 02:50:58,110
Marisa Eisenberg: there's a trade off often between code readability and code speed that I myself will if it's not.

1106
02:50:58,800 --> 02:51:12,840
Marisa Eisenberg: A problem I will lean towards the readability one because I like going to have to read this in two years, and make sense of it but um there are times, where you just have to bite it and you know it's what it is so yeah that's a great point.

1107
02:51:14,250 --> 02:51:14,730
Rishi Chanderraj: um.

1108
02:51:15,180 --> 02:51:16,980
Rishi Chanderraj: yeah um.

1109
02:51:17,070 --> 02:51:22,140
Marisa Eisenberg: Okay, so that's that guy and OK, so now.

1110
02:51:23,310 --> 02:51:34,320
Marisa Eisenberg: Let me go back to the slides Okay, so if statements we kind of talked about I forget about not equal, I totally forgot to say that exclamation point is not so if you wanted to check.

1111
02:51:35,670 --> 02:51:40,170
Marisa Eisenberg: Five is not equal to eight right.

1112
02:51:41,520 --> 02:51:48,990
Marisa Eisenberg: that's true five is not equal date yay good job so okay so anyway just if you need to if you need that for one of your conditions.

1113
02:51:50,700 --> 02:52:08,100
Marisa Eisenberg: Correct yes good yes so kavita i'm not sure how to pronounce, but it can be that makes a really good question if you if you make a mistake in writing in the console here if you're doing your coding here so let's say I said stuff equals.

1114
02:52:09,450 --> 02:52:13,080
Marisa Eisenberg: E like there's not going to be an easy, so I made a typo and.

1115
02:52:14,280 --> 02:52:29,610
Marisa Eisenberg: You can't change this, which is why it's always a good idea to type your code here up in the top part, instead, because then you know if I run this I can it'll still give the same error, but now I can edit it.

1116
02:52:31,290 --> 02:52:37,200
Marisa Eisenberg: And so whoops I don't I don't actually have anything called stuff that was there um but anyway yeah so.

1117
02:52:37,890 --> 02:52:45,240
Marisa Eisenberg: You know, you can do something like this, and so yeah so so that's the danger of writing your code, all in the console.

1118
02:52:45,990 --> 02:52:49,230
Marisa Eisenberg: Is that, then you can't once you hit run it's been run you can't.

1119
02:52:49,770 --> 02:52:57,750
Marisa Eisenberg: edit it now, you could copy it, you can take you can go here and say okay copy that I didn't mean to write stuff I meant to write for.

1120
02:52:58,140 --> 02:53:05,250
Marisa Eisenberg: And then, now it says Okay, so now, I could copy this and say oh I didn't mean to write he I meant to write five, and now it works.

1121
02:53:05,850 --> 02:53:13,710
Marisa Eisenberg: But um it's an annoying way to do it, so I and it's now also your code is all kind of in this weird.

1122
02:53:14,430 --> 02:53:26,820
Marisa Eisenberg: history of everything you've written and so it's it's just a better idea to write it up here instead yeah this but that's that's a great point it's yeah it's it's, this is a good good good thing to note.

1123
02:53:28,500 --> 02:53:28,830
Marisa Eisenberg: Okay.

1124
02:53:29,880 --> 02:53:30,270
Marisa Eisenberg: All right.

1125
02:53:31,350 --> 02:53:38,730
Marisa Eisenberg: So all right so let's talk about for loops really quick so loops are one of those sort of key.

1126
02:53:39,840 --> 02:53:52,950
Marisa Eisenberg: logical things that that that all of programming everywhere basically with like a few exceptions, and is is kind of built around so.

1127
02:53:53,370 --> 02:53:57,480
Marisa Eisenberg: um so we're going to learn about for loops here there's lots of different flavors of loops but.

1128
02:53:57,780 --> 02:54:07,320
Marisa Eisenberg: But the idea is basically we frequently find ourselves in code when we're coding, where we have a table of data, or we have a list of numbers, or whatever.

1129
02:54:07,560 --> 02:54:18,210
Marisa Eisenberg: And we need to for let's say if I had data for each individual in my lady, I have a table of cases of some disease for each individual I need to check, are they.

1130
02:54:18,780 --> 02:54:29,460
Marisa Eisenberg: Is there age within a certain range or for each element of a list, I want to check if it's whatever or I want to change something I need to go through a list of things and and do something.

1131
02:54:29,700 --> 02:54:45,990
Marisa Eisenberg: So for loops are great for this, so the way that they're structured is this so for, and then you give it what's called a sequence, so this is like a list of entries to do something for, and then you do the thing this is easier to understand, with an exam so um.

1132
02:54:47,130 --> 02:54:48,900
Marisa Eisenberg: Well here's like a really simple example.

1133
02:54:50,820 --> 02:54:56,610
Marisa Eisenberg: So again, if you start to type four it says hey did you want to take a for loop.

1134
02:54:57,150 --> 02:55:06,390
Marisa Eisenberg: And then, if you hit tab it'll hopefully help you so notice what it's what it's filled it in with so it says, for a variable in a vector so some.

1135
02:55:06,780 --> 02:55:17,940
Marisa Eisenberg: Variable in a list you want to do whatever you put in these brackets and the standard syntax, for this is that people usually use I, so this is what's called an index so.

1136
02:55:19,740 --> 02:55:25,530
Marisa Eisenberg: People seem for loops I don't know if i'm telling people things that they're like oh my God, so you know not everybody's supposed okay okay so.

1137
02:55:26,370 --> 02:55:35,130
Marisa Eisenberg: I don't want to like the Labor things if it's annoying but yeah so I is what's called an index, so this is a placeholder so usually what you have is let's say.

1138
02:55:35,430 --> 02:55:43,170
Marisa Eisenberg: So here we had X, remember, we had that I have all these old variables, to remember, we had accident was a big column of numbers that we had.

1139
02:55:43,500 --> 02:55:52,500
Marisa Eisenberg: You know, done some processing on now it's got some stuff and fives and zeros and whatever right and so we've got this little column of numbers.

1140
02:55:52,950 --> 02:56:06,240
Marisa Eisenberg: it's got 10 numbers in it and so usually you could say for value in X and actually iterate through the values that are in here, so the first time it ran the loop.

1141
02:56:06,720 --> 02:56:16,950
Marisa Eisenberg: You know value would equals this and then it would equal five etc, but usually we don't because often we don't necessarily want that value we actually just wanted to sort of.

1142
02:56:17,520 --> 02:56:27,270
Marisa Eisenberg: Like keep a placeholder for where we are in the list and then we're going to do something at that point so usually what you do is you use an indexing variable in this case it's often called I so for.

1143
02:56:28,050 --> 02:56:48,360
Marisa Eisenberg: So so like here, for instance, for I in blah blah blah so here we're gonna say, for I in one through 10 and, and so this little piece of code says i'm going to make a new variable called I i'm going to do whatever is in these brackets.

1144
02:56:50,490 --> 02:57:04,170
Marisa Eisenberg: Again and again and again with I said equal to one the little colon here means go from one to 10 in order integer so I is going to set equal to one to two to three to 45678 910.

1145
02:57:04,500 --> 02:57:06,930
Marisa Eisenberg: So i'm going to do whatever is in the brackets.

1146
02:57:07,350 --> 02:57:22,140
Marisa Eisenberg: 10 times, where I is just a is just like a it's like when you're counting something, and you keep track of you know, like it's like a placeholder it's just a way of keeping track of how many you know what iteration of the loop, are you on so.

1147
02:57:22,380 --> 02:57:30,450
Marisa Eisenberg: I is going to equal 1-234-567-8910 and then i'm going to do something which i'm going to write in this little brackets section here so.

1148
02:57:31,320 --> 02:57:42,780
Marisa Eisenberg: So, for instance, if we have X X has 10 entries maybe what i'm going to do is just print out, whatever the value of X is maybe that's what i'm going to do so let's say I say.

1149
02:57:43,530 --> 02:58:02,190
Marisa Eisenberg: print X of I so this will just loop through I will one through 10 every for each value of I i'm going to print the ice entry of X right so that'll just print one.

1150
02:58:04,740 --> 02:58:07,920
Marisa Eisenberg: And then, this one, this one, and this one, you know it prints each one of these.

1151
02:58:09,570 --> 02:58:19,980
Marisa Eisenberg: There you go it printed out all the values of X and we could change the index maybe instead of going from one to 10 I only want to print out the last five entries, so I say, for I equal to five through 10.

1152
02:58:20,700 --> 02:58:31,230
Marisa Eisenberg: Now i'm going to print and it only prints the last oh crap five to 10 5678 910 that's actually six centuries so principle X six entries right.

1153
02:58:32,040 --> 02:58:39,030
Marisa Eisenberg: So does that make sense, so it starts here and it makes I equal to each of the numbers between five and 10.

1154
02:58:39,450 --> 02:58:54,750
Marisa Eisenberg: And then it does whatever you say, and so what I said here was print the value of the ice entry of X does that make sense as a thing, usually indexing is like the first kind of hurdle with programming, that is very confusing.

1155
02:58:55,920 --> 02:58:56,400
Marisa Eisenberg: So.

1156
02:58:57,600 --> 02:59:07,500
Marisa Eisenberg: The logic here is basically that you build a little machine that's essentially going to sort of point two different values here and do something with them so like.

1157
02:59:07,890 --> 02:59:22,950
Marisa Eisenberg: I is going to equal five through 10 but then, if I if I do this, then every time I run this piece of code, because I takes on a new value I print a different entry of X does that make sense.

1158
02:59:24,300 --> 02:59:29,190
Marisa Eisenberg: So I often find it really helpful when i'm making when i'm running a for loop, for the first time.

1159
02:59:29,880 --> 02:59:36,810
Marisa Eisenberg: I usually like to have to make this something different let's say let's print X minus to do just for kicks I usually like to.

1160
02:59:37,320 --> 02:59:45,270
Marisa Eisenberg: Actually physically do the loop myself so like if i'm trying to figure out the logic of how a for loop works, I say okay.

1161
02:59:45,720 --> 02:59:58,140
Marisa Eisenberg: i'm going to be the computer i'm just going to literally do it so okay I is going to work this for loop says, let I equal to one through 10 and run what's in this bracketed sections so.

1162
02:59:58,560 --> 03:00:08,610
Marisa Eisenberg: The first time the loop runs I is going to equal one, so I might even my probably not in my code usually but on a piece of paper say okay I is equal to one so first.

1163
03:00:09,420 --> 03:00:23,610
Marisa Eisenberg: Round of the loop I equals one, and then I would say Okay, so when I equals one then print X of one minus two well what is X have one it's that.

1164
03:00:25,440 --> 03:00:27,750
Marisa Eisenberg: So we're that means we're going to print.

1165
03:00:30,300 --> 03:00:44,850
Marisa Eisenberg: This minus two right, and so you can like really granular Lee step through it and say Okay, what is the loop going to do when I was one it's going to print this number oops crap which is my negative whatever it is.

1166
03:00:45,930 --> 03:01:00,270
Marisa Eisenberg: You know, whatever negative two, I guess, plus that so negative one point something something, and so you know it'll print this thing whatever this ends up being that's one point yeah negative 1.4168 a week and.

1167
03:01:01,050 --> 03:01:08,970
Marisa Eisenberg: And so you can actually sort of step through and you say Okay, so that would be running this code for the first value of I so now next.

1168
03:01:10,530 --> 03:01:12,270
Marisa Eisenberg: Round of the loop.

1169
03:01:13,350 --> 03:01:27,750
Marisa Eisenberg: is equal to, and so that's print X of I minus two I itself is equal to to replace that with two X of two is five so that means print.

1170
03:01:29,490 --> 03:01:41,280
Marisa Eisenberg: Five minus I can spell minus two, which is three, so it should print three and so, then, if we you know, etc, so let's run this thing and make sure it actually does what it should, and there we go.

1171
03:01:41,580 --> 03:01:48,750
Marisa Eisenberg: So now and then you can sort of check yourself right, so I sort of logic my way through what is, what are the first two rounds of the loop going to do.

1172
03:01:49,020 --> 03:01:53,730
Marisa Eisenberg: Okay they're going to print negative one point something and they're going to print three.

1173
03:01:53,940 --> 03:02:05,640
Marisa Eisenberg: And that's what happened, and so I when i'm trying to kind of think through how to build a loop, and what it does, I often actually like literally write out what the loop is going to do for the first few rounds and.

1174
03:02:06,180 --> 03:02:15,360
Marisa Eisenberg: And then that way I can kind of like logic my way through what is this loop actually going to accomplish and you know and how it works so like.

1175
03:02:19,440 --> 03:02:21,360
Marisa Eisenberg: leave a note there and so.

1176
03:02:22,380 --> 03:02:25,680
Marisa Eisenberg: Does this make sense to people kind of what we're doing.

1177
03:02:28,170 --> 03:02:35,040
Marisa Eisenberg: Okay, good okay here's The thing that often people really struggle with you don't just have to.

1178
03:02:36,390 --> 03:02:47,430
Marisa Eisenberg: Take the current value of it, maybe we want to take the previous value of I have X rather the the previous element in the list and I don't know added.

1179
03:02:47,850 --> 03:02:53,250
Marisa Eisenberg: To the current element of the list right So if I make this go from two through 10.

1180
03:02:54,060 --> 03:03:08,550
Marisa Eisenberg: Now it starts on the second entry right, so there is something before I minus one is going to be one which will be something that is in X right there is a first entry of X, so now, if I go to through 10.

1181
03:03:09,090 --> 03:03:18,240
Marisa Eisenberg: Then I could print the previous one X of I minus one plus X, Y and that'll be something that will actually work.

1182
03:03:19,050 --> 03:03:34,440
Marisa Eisenberg: notice that it only gives us 912-345-6789 entries because we only could do there's only a previous one available for entries two through 10 right because you can't there's nothing before the first entry so.

1183
03:03:35,100 --> 03:03:42,240
Marisa Eisenberg: You can use this is the index variable to access different parts of the of the.

1184
03:03:42,870 --> 03:03:52,620
Marisa Eisenberg: list so like, for instance let's say you your if your goal was, I want to take each element of the list and add it to the next element of the list.

1185
03:03:52,920 --> 03:04:01,710
Marisa Eisenberg: This would let you do that right, because now you're saying take my current position go back one add take that added to the current position right.

1186
03:04:01,980 --> 03:04:13,260
Marisa Eisenberg: So you can do some like more intricate logic with kind of how you operate on this list as you move and that's often what ends up happening with for loose is that you, you often find yourself basically.

1187
03:04:14,220 --> 03:04:21,240
Marisa Eisenberg: Like basically it's like a little like a little tape reader or something it's like it's like a little for like a.

1188
03:04:21,690 --> 03:04:24,720
Marisa Eisenberg: Like in like like a link it's like reading.

1189
03:04:25,110 --> 03:04:38,190
Marisa Eisenberg: Mr na or something it's like a little thing that like reads through when you when you when you loop through a list or an array it reads through and does whatever the little machine is going to do and spits out the instructions that it makes you know what I mean.

1190
03:04:39,600 --> 03:04:40,830
Marisa Eisenberg: So so that's the idea.

1191
03:04:41,940 --> 03:04:50,460
Marisa Eisenberg: Okay do loops kind of make sense feel comfy ish okay let's do this, the next.

1192
03:04:51,090 --> 03:05:07,860
Marisa Eisenberg: problem then oh yeah oh yeah yeah Okay, how do you save your output to a text file so um do you want to save the code itself, you can save just by you know hitting save and so then it'll say Where are you I say this i'll say okay example.

1193
03:05:09,750 --> 03:05:23,100
Marisa Eisenberg: that's right, so I can do that, like that, and then i've got the code save if I want to save the console output and actually don't remember there's probably a code for this, I felt like a command for saving the console.

1194
03:05:23,400 --> 03:05:27,810
M. Victoria Salgado: If i'm working with a data set and I work on the data set and changing.

1195
03:05:28,170 --> 03:05:32,790
M. Victoria Salgado: I do, but he runs the output to save the data set.

1196
03:05:32,910 --> 03:05:47,100
M. Victoria Salgado: That change that the set, but I want to see the operations unified what I need I don't know I say the mean of something and then a detail or whatever, and I have a folder all of that information in a file, how do I get that.

1197
03:05:47,550 --> 03:05:48,780
Marisa Eisenberg: yeah yeah so you.

1198
03:05:48,780 --> 03:05:50,130
Marisa Eisenberg: can have it.

1199
03:05:50,250 --> 03:05:59,700
Marisa Eisenberg: You can feel like saving the console is one way to do it and you can save the console output i'm pretty sure there's an option for that usually what I like to do instead.

1200
03:06:00,450 --> 03:06:09,570
Marisa Eisenberg: So you can also just hit like so there's a thing here like select all I think and then copy and you could just save it to a text file So if you right click and go select all and.

1201
03:06:09,900 --> 03:06:17,310
Marisa Eisenberg: copy, you can save it to a text file and the other option, though, is most of the time what you probably would want to do is like.

1202
03:06:17,700 --> 03:06:30,960
Marisa Eisenberg: Whatever output is your T test results, etc, you want to save those two variables, so that that way, then you just save the files, you need at the end, from your environment, so you make a data file with so like.

1203
03:06:31,320 --> 03:06:39,660
Marisa Eisenberg: You know, whatever like if you make like where did we make an array here someplace we did so like yay too, so you would make.

1204
03:06:41,220 --> 03:06:43,560
Marisa Eisenberg: hahaha I made too much hassle.

1205
03:06:44,940 --> 03:06:45,450
Marisa Eisenberg: and

1206
03:06:46,650 --> 03:06:56,280
Marisa Eisenberg: You can make like an array that has a day, a new data file that has all the relevant output of you're saying so, usually for me that's how I would save things i'll save like.

1207
03:06:56,580 --> 03:07:12,660
Marisa Eisenberg: All the pieces of the table that I want for my life by making a paper, and I have a table of like whatever you know P values and all the stuff that I want for something i'll make a like a little like table here that has everything I want and just save it to a file that way.

1208
03:07:13,740 --> 03:07:15,330
Marisa Eisenberg: So if I go.

1209
03:07:15,990 --> 03:07:17,850
M. Victoria Salgado: Like stakeholder you go man.

1210
03:07:18,510 --> 03:07:19,440
Marisa Eisenberg: Oh yeah yeah so.

1211
03:07:19,470 --> 03:07:21,240
Marisa Eisenberg: So we'll get to.

1212
03:07:21,960 --> 03:07:23,280
Marisa Eisenberg: Like like.

1213
03:07:24,450 --> 03:07:33,660
Marisa Eisenberg: Reading in csv s and then saving as CSP and a little bit so we'll do that as like a thing, but yeah but, but you can you like.

1214
03:07:33,840 --> 03:07:34,830
Marisa Eisenberg: You can also.

1215
03:07:34,860 --> 03:07:43,800
Marisa Eisenberg: Like like just save you know you're like you're a file or your entire workspace so like if you wanted to.

1216
03:07:44,070 --> 03:07:47,100
Marisa Eisenberg: If you had all this stuff you can actually save your whole.

1217
03:07:47,340 --> 03:07:53,340
Marisa Eisenberg: Like workspace and everything as a single file and then just pick up where you left off the next time you start your computer so.

1218
03:07:53,460 --> 03:08:03,960
Marisa Eisenberg: We can we can kind of go through how to like do all of those things and a little bit, but yeah that's that's what I would do I usually don't really keep anything that I want to keep a real in the console.

1219
03:08:07,830 --> 03:08:14,310
Marisa Eisenberg: Just because it feels too temporary so um yeah so I usually either save it to a file here like make a.

1220
03:08:15,360 --> 03:08:24,480
Marisa Eisenberg: variable for it and then save that variable to a file or occasionally yeah you can just copy something from the console and then like copy it to a word document or something.

1221
03:08:25,770 --> 03:08:28,470
Marisa Eisenberg: yeah that happens to but yeah yeah yeah.

1222
03:08:30,240 --> 03:08:30,630
Marisa Eisenberg: yeah.

1223
03:08:31,650 --> 03:08:32,460
Marisa Eisenberg: Make sure.

1224
03:08:37,890 --> 03:08:52,140
Marisa Eisenberg: yeah OK so maybe we'll we'll we'll I wasn't going to do this later, but maybe we'll do some examples where we like pull when we do the differential patients, we can pull from like some data files and things like that to see the parameters this afternoon.

1225
03:08:53,190 --> 03:08:55,560
Marisa Eisenberg: yeah because then we can do a little like DEMO of how.

1226
03:08:55,770 --> 03:09:05,610
Marisa Eisenberg: yeah because For those of you who are like working with our for the first time, and you may want to use it, not just for building this kind of model, but to do data analysis that'll yeah well we'll do a little thing this afternoon on like.

1227
03:09:05,880 --> 03:09:20,130
Marisa Eisenberg: Reading files in and saving them out, and all of that kind of stuff just because that will be important and get okay um yes we just talking about oh loops yes okay so for right now, though let's do.

1228
03:09:21,660 --> 03:09:32,910
Marisa Eisenberg: let's do the next problem in the for loops so for in the in the lab and we're going to do for loop, so what we're going to do here and is similar kind of thing so.

1229
03:09:34,440 --> 03:09:36,450
Marisa Eisenberg: we're gonna write this is actually kind of.

1230
03:09:38,400 --> 03:09:44,820
Marisa Eisenberg: know me this is not that exciting I probably should have picked something more fun, but anyway we're going to write a little piece of code.

1231
03:09:45,120 --> 03:09:56,370
Marisa Eisenberg: That you're going to make a vector of zeros of links five so five zeros in a little column, and then you're going to write a for loop that fills in the zeros with.

1232
03:09:57,120 --> 03:10:06,600
Marisa Eisenberg: The squares of the integers from one to five, so you want to basically something kind of like this, so what you're going to do is basically.

1233
03:10:06,990 --> 03:10:14,190
Marisa Eisenberg: Something like you're going to make a vector of five zeros you can do that a lot of different ways so maybe let's say X is equal to, if you go numeric.

1234
03:10:14,640 --> 03:10:24,630
Marisa Eisenberg: Five just clear all this template here, so you can actually see it more easily, you can do this, or you could do you know X is equal to you could just do this if you want.

1235
03:10:28,050 --> 03:10:34,020
Marisa Eisenberg: You do that you can whatever, but so you make a vector of of five zeros and then you're going to write a little for loop.

1236
03:10:35,550 --> 03:10:44,100
Marisa Eisenberg: that's going to go so you'll let's say I and one through five right and you want it to.

1237
03:10:45,570 --> 03:10:52,770
Marisa Eisenberg: In each so this little thing should put in each each entry of acts and just to.

1238
03:10:58,020 --> 03:11:19,770
Marisa Eisenberg: Go and so each of these, we want to replace instead with one squared two squared three squared four squared five squared so we're going to write a little loop that puts in the in each position of X the square of the numbers one through five so let's take a few minutes and wait.

1239
03:11:21,090 --> 03:11:29,580
Marisa Eisenberg: We wrap it up new knowing that when lunch starts I forgetting all of my timing, I think it starts at noon so we'll we'll do this.

1240
03:11:30,090 --> 03:11:44,010
Marisa Eisenberg: yeah good okay so we'll do this for a couple of minutes and then and then we'll we'll after we finished for loops will break we'll do functions after the break after lunch so yeah we're gonna for a couple of minutes and then and then let's come back.

1241
03:13:03,960 --> 03:13:09,330
Marisa Eisenberg: Why am I typing I can just um do you mind sharing your screen, so I can see what it looks like on yours okay.

1242
03:13:12,060 --> 03:13:13,650
Apostolos Alexandridis: yep one second awesome.

1243
03:13:13,680 --> 03:13:14,160
Marisa Eisenberg: Thank you.

1244
03:13:26,940 --> 03:13:29,040
Apostolos Alexandridis: Oh, apparently, I can because screen sharing is.

1245
03:13:29,580 --> 03:13:30,810
Marisa Eisenberg: Here wait i'll fix that.

1246
03:13:31,020 --> 03:13:32,370
Morgan Caitlin Byrd: Well, I just updated it.

1247
03:13:32,400 --> 03:13:33,990
Marisa Eisenberg: Oh good Okay, you should be able to now.

1248
03:13:43,170 --> 03:13:44,130
Marisa Eisenberg: Okay.

1249
03:13:47,370 --> 03:13:50,130
Marisa Eisenberg: And if you do yeah wait, so if you do view yea.

1250
03:13:50,400 --> 03:13:52,260
Apostolos Alexandridis: Trained yeah, so I do something.

1251
03:13:53,490 --> 03:13:56,430
Apostolos Alexandridis: If I do something like you yay yeah.

1252
03:13:57,450 --> 03:14:00,150
Marisa Eisenberg: Oh wait yeah oh weird.

1253
03:14:01,170 --> 03:14:04,140
Apostolos Alexandridis: It just I mean it looks exactly like it does in the environment window.

1254
03:14:04,440 --> 03:14:04,620
But.

1255
03:14:05,700 --> 03:14:08,790
Apostolos Alexandridis: But if I do view yea to which is data.

1256
03:14:08,970 --> 03:14:09,330
yeah.

1257
03:14:10,440 --> 03:14:12,000
Apostolos Alexandridis: it'll it'll it'll do it.

1258
03:14:14,040 --> 03:14:25,470
Apostolos Alexandridis: And so yeah and i'm looking at the help fund the help file, which explains that the point of view is that it tries to force everything to behave like data, so it can display like data.

1259
03:14:26,010 --> 03:14:28,080
Apostolos Alexandridis: um yeah so it seems like.

1260
03:14:28,470 --> 03:14:29,250
Marisa Eisenberg: It ought to it.

1261
03:14:29,580 --> 03:14:35,730
Apostolos Alexandridis: yeah the raison d'etre you isn't working for, so I mean I don't know what i'm doing it's probably a bad configuration somewhere.

1262
03:14:36,030 --> 03:14:38,640
Marisa Eisenberg: yeah I I don't know that i've never seen that.

1263
03:14:38,640 --> 03:14:40,140
Marisa Eisenberg: Before and.

1264
03:14:40,590 --> 03:14:46,650
Marisa Eisenberg: How weird yeah i'm sorry I don't know how to fix it either um yeah that's that's bizarre.

1265
03:14:48,270 --> 03:14:52,320
Marisa Eisenberg: that's a bummer you view is very convenient um.

1266
03:14:53,340 --> 03:14:53,700
Marisa Eisenberg: yeah.

1267
03:14:55,290 --> 03:15:00,000
Apostolos Alexandridis: The problem is it you know, after so many after so many.

1268
03:15:01,020 --> 03:15:01,710
Apostolos Alexandridis: You know.

1269
03:15:03,690 --> 03:15:08,040
Apostolos Alexandridis: After so many well it truncate the list so I can't see a whole list of anything.

1270
03:15:08,370 --> 03:15:08,670
yeah.

1271
03:15:09,870 --> 03:15:14,640
Marisa Eisenberg: yeah so like as soon as the list gets too long, you know, then printing becomes kind of obnoxious.

1272
03:15:14,730 --> 03:15:23,490
Marisa Eisenberg: And view is just convenient hmm I mean my best suggestion right at this moment is to add another column of zero.

1273
03:15:24,720 --> 03:15:26,130
Marisa Eisenberg: data and then you know, whatever.

1274
03:15:27,420 --> 03:15:29,670
Marisa Eisenberg: Which is dumb but you could do.

1275
03:15:30,180 --> 03:15:33,420
Marisa Eisenberg: there's gotta be a way to actually fix it, though I don't know what it is, but yeah.

1276
03:15:38,460 --> 03:15:40,290
Nicolle Krebs: over again how to get it to view.

1277
03:15:41,010 --> 03:15:52,770
Marisa Eisenberg: Oh yeah Okay, so if you in console or in the script if you type view with a capital V, the capital V is important and then whatever it is yeah yeah i'm always doing lowercase backs.

1278
03:15:55,380 --> 03:15:57,000
Kevin Chin-Wei Tracy: Were you trying to view it better.

1279
03:15:57,390 --> 03:16:03,120
Kevin Chin-Wei Tracy: yep So if you do view and then as dark data frame then you're better, you should be able to do the vector.

1280
03:16:03,390 --> 03:16:08,010
Marisa Eisenberg: Oh, I guess that's true yeah you could just convert it to a data frame yeah that's true and.

1281
03:16:09,870 --> 03:16:13,530
Marisa Eisenberg: So yeah so it Kevin is talking about lunch and respond okay.

1282
03:16:16,530 --> 03:16:23,340
Marisa Eisenberg: You could do this so if if X was doing what you're describing you could do this and it will come, I mean it.

1283
03:16:24,060 --> 03:16:36,030
Marisa Eisenberg: I won't see the difference here because it doesn't anyway, but you, you should that should convert this into a data frame which is like a table and so um you know, or you know, like a data thingy and so.

1284
03:16:36,840 --> 03:16:49,320
Marisa Eisenberg: It should it should then make it do this, and which is fine, too, and way less hassle than adding a column zeros but um but yeah so that that would work to you, but it is strange that the the.

1285
03:16:49,950 --> 03:17:01,170
Apostolos Alexandridis: yeah yeah that's working so I guess i'm just wondering like I yeah my understanding from the help is that view as data frame is actually should be redundant, like me, but not for me yeah.

1286
03:17:01,470 --> 03:17:09,030
Marisa Eisenberg: yeah so that's very strange, so I don't know why that is, but yeah but for the meantime, in the meantime that's probably the easiest thing to do.

1287
03:17:30,180 --> 03:17:39,840
Marisa Eisenberg: Okay, so maybe since it's already 1159 we'll have like a hilarious cliffhanger everybody can work on this for loop thingy over lunch.

1288
03:17:40,260 --> 03:17:49,950
Marisa Eisenberg: I mean, whatever or you can just have lunch, you can relax but um but anyway we'll look when we come back we'll resolve the mystery of how to write a for loop that squares things and then.

1289
03:17:50,520 --> 03:18:01,200
Marisa Eisenberg: And then we'll we'll do that Oh yes, good good good good point Thank you Morgan, yet the meeting ID is different for the afternoon so don't come back to this meeting, we got to go to the afternoon.

1290
03:18:02,520 --> 03:18:06,000
Marisa Eisenberg: Okay, so yeah with that I will pause here.

1291
03:18:09,330 --> 03:18:11,910
Marisa Eisenberg: Back at 130 or one.

1292
03:18:13,260 --> 03:18:13,470
minute.

1293
03:18:14,580 --> 03:18:19,500
Marisa Eisenberg: 131 30 okay good hour and a half 130 so i'll see you all back at 130.

