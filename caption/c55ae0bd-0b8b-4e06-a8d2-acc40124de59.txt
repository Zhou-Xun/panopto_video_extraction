1
00:00:00,000 --> 00:00:09,000
Hello again. So now we continue are editing the existing get up against that, we have been working Ritts to cover and relationship types,

2
00:00:09,000 --> 00:00:18,000
as you remember, are the relationship that we had created was a one to many relationship.

3
00:00:18,000 --> 00:00:25,000
How about moving beyond the one to many relationship to other relationship types, a many to many relationship?

4
00:00:25,000 --> 00:00:31,000
One adviser can advise multiple students and one student can be advised by multiple advisers.

5
00:00:31,000 --> 00:00:37,000
One research advisor, one academic advisor. How do we do that in Microsoft Access?

6
00:00:37,000 --> 00:00:43,000
By default, Microsoft Access essentially incorporates every relationship as a one to many relationship.

7
00:00:43,000 --> 00:00:51,000
So to represent a many to many relationship, that has to be a combination of multiple one too many relationships.

8
00:00:51,000 --> 00:00:58,000
How do we do that is the objective of this video. So we begin by checking all the tables to now look at our table.

9
00:00:58,000 --> 00:01:04,000
Right. So we have the student table in the design.

10
00:01:04,000 --> 00:01:07,000
We had the adviser as the foreign keep.

11
00:01:07,000 --> 00:01:20,000
So now when you would create many to many relationship, you would not need the student adviser field in the same entity.

12
00:01:20,000 --> 00:01:25,000
How do we achieve the one two? Because a student can have multiple advisers, right? It's no longer static.

13
00:01:25,000 --> 00:01:32,000
To achieve that, we go to our relationship and use the concept of a linking table,

14
00:01:32,000 --> 00:01:38,000
which links are two entities and stores, that combination of this woman and advisors relationships there.

15
00:01:38,000 --> 00:01:45,000
So. Here you have the existing one to a new relationship.

16
00:01:45,000 --> 00:01:54,000
We delete that and we come to our table.

17
00:01:54,000 --> 00:01:59,000
The Sudam table in that wooden table going to design view.

18
00:01:59,000 --> 00:02:03,000
Now we remove, though, adviser number.

19
00:02:03,000 --> 00:02:09,000
Because we don't no longer want because we we're hoping for. We are hearing from many to many relationship.

20
00:02:09,000 --> 00:02:14,000
So once one does not link to one adviser alone, once again listening to multiple advisers.

21
00:02:14,000 --> 00:02:20,000
So, as I said, it does not have to be in the same table. It should not be in the same table just this way for other Bizer people.

22
00:02:20,000 --> 00:02:26,000
We did not have a student in the student in the list of foods that you had for the advisor entity.

23
00:02:26,000 --> 00:02:35,000
So we delete all the advisors, feel it's going to affect our other entries, but that's OK.

24
00:02:35,000 --> 00:02:49,000
And now we create a new table.

25
00:02:49,000 --> 00:03:12,000
Either way, let me just. I think in this trading table, actually, right now.

26
00:03:12,000 --> 00:03:25,000
As I knew. Yes. So let's call it the student adviser linking people.

27
00:03:25,000 --> 00:03:33,000
And the idea remains, let's call it the link I.D., which is the primary care of this.

28
00:03:33,000 --> 00:03:39,000
And now what are the other figures that should be coming into this table?

29
00:03:39,000 --> 00:03:45,000
Because it's supposed to be a linking table. It should be linking your student table and your adviser or table.

30
00:03:45,000 --> 00:03:54,000
So essentially, the two figures that you would want in this would be the student I.D. and the adviser writing.

31
00:03:54,000 --> 00:04:00,000
So now let's reduce the number, right?

32
00:04:00,000 --> 00:04:05,000
And we create an advisory I.D.

33
00:04:05,000 --> 00:04:14,000
No, again, now, similar to what we had done in the previous video where we had made it more intuitive, the linking table, so we can do the same,

34
00:04:14,000 --> 00:04:24,000
look up his idea where we want to get the list of students from the student table as opposed to ending entering administrative ideas,

35
00:04:24,000 --> 00:04:30,000
student I.D. here and do the same thing with the first name and the last name,

36
00:04:30,000 --> 00:04:38,000
because you might have multiple students with the same first name or last name. And I finish this.

37
00:04:38,000 --> 00:04:47,000
Yes, I do the same thing. But as you see, the data tape is preserved in the design view, though, for for for it.

38
00:04:47,000 --> 00:04:54,000
As I mentioned, even when we were doing the previous intuitive example, when we create the data, I was not disturbed.

39
00:04:54,000 --> 00:05:05,000
But the look is that ensures that what as the end user, you just see the last name on the first name as opposed to the design that's being affected.

40
00:05:05,000 --> 00:05:07,000
So, again, we do the same thing here.

41
00:05:07,000 --> 00:05:16,000
Now we are pulling out the advisor I.D. So we do the same thing with the advisor listening and the advisor last name.

42
00:05:16,000 --> 00:05:24,000
And we finish. Yes. So now we close this because this sort of table.

43
00:05:24,000 --> 00:05:30,000
Yes. And no one has come to our relationships and see what do we have.

44
00:05:30,000 --> 00:05:35,000
OK. So we have this sort of advisor relationship and now we have to add a table here.

45
00:05:35,000 --> 00:05:43,000
Right. The linking table that has to be linked to the student and the advisor entities. So when I.

46
00:05:43,000 --> 00:05:50,000
How this. So now you see that they are already linked.

47
00:05:50,000 --> 00:05:56,000
The student adviser link table is linked to the advisor entity and the student entity.

48
00:05:56,000 --> 00:06:00,000
What we do not have is the same concept of referential integrity. Right.

49
00:06:00,000 --> 00:06:08,000
So we will do that here by enforcing referential integrity so that whatever entries you have in

50
00:06:08,000 --> 00:06:16,000
your student adviser or linked table in the foreign key has to be present in the advisor entity,

51
00:06:16,000 --> 00:06:27,000
as well as whatever entries or instances you have of the student I.D. in the link table have to be present in the student entity.

52
00:06:27,000 --> 00:06:34,000
OK. Same thing with this. OK.

53
00:06:34,000 --> 00:06:42,000
And now you see that this linking table, essentially insurers are many to many relationship between the adviser and the student.

54
00:06:42,000 --> 00:06:46,000
And I will show that we are examples actually be ones become true, though,

55
00:06:46,000 --> 00:06:52,000
creating those entries so that those that is going to save the relationships. And let's come to the tables.

56
00:06:52,000 --> 00:07:04,000
Let's add the entries. So student I.D. Jane and Jane could have David Méndez as the adviser.

57
00:07:04,000 --> 00:07:12,000
Now, you could have heard of that, David Méndez as the adviser.

58
00:07:12,000 --> 00:07:21,000
And we could have Jane having multiple advisers.

59
00:07:21,000 --> 00:07:29,000
Melissa Anthony has an adviser. And that's all allowed because that combination is is is is a management relationship that we have enabled

60
00:07:29,000 --> 00:07:45,515
him so that we can create Menomonee relationship as a combination of multiple one to manage relationships.

