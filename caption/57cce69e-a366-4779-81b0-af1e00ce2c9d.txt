1
00:00:06,950 --> 00:00:15,240
Okay. Okay. Let's get started. So, uh.

2
00:00:21,770 --> 00:00:25,490
So let's just sort things out.

3
00:00:26,540 --> 00:00:39,670
So first one I wanted to make sure is that we have two.

4
00:00:40,010 --> 00:00:49,340
So there was a there was a lot of questions about understanding this CSR and CAC format.

5
00:00:50,660 --> 00:00:55,940
So I just wanted to understand they explain a little bit different way.

6
00:00:56,360 --> 00:01:02,270
So I mean, these two parts are easy, but this part is a little bit hard to understand.

7
00:01:03,080 --> 00:01:12,020
So what, what, what does this really mean? And how do you get get this so that I wanted to cover first.

8
00:01:12,530 --> 00:01:24,440
Okay. So so this is so I try to explain different ways in office hours and this seems like a stick sticking the best.

9
00:01:24,770 --> 00:01:32,450
So let me try this. So this rule pointer is basically tells us which element.

10
00:01:33,140 --> 00:01:42,230
So with so on, so let's say you're indexing the non zero element from 0 to -1,

11
00:01:43,070 --> 00:01:50,899
then know which element should I look for as a start, as a start of that particular role.

12
00:01:50,900 --> 00:01:54,770
So for example in, in row one.

13
00:01:55,220 --> 00:02:05,330
So in here zero means that I need to look at the so there are, there are five elements here.

14
00:02:05,390 --> 00:02:19,340
So negative one one negative one there very one negative two if you if you order the non negative elements in the row first order.

15
00:02:19,880 --> 00:02:31,430
So this is the five elements. Right. So the first one is no one is basically the first element and index zero to look at the rule one,

16
00:02:31,610 --> 00:02:38,420
I need to look at look at this and to look at the row to which you start from here.

17
00:02:39,140 --> 00:02:42,140
I need to know to start from here. Right. Okay.

18
00:02:42,650 --> 00:02:50,720
So this is this is indexes, you know, this is index two and it wrote three star from here.

19
00:02:51,050 --> 00:03:04,850
So this is index five. Okay. So this is equivalent to saying that, oh, how many elements, how many non-zero element is there before rule one.

20
00:03:04,850 --> 00:03:11,150
So I have a zero element before row one and I have two alignment before oh two.

21
00:03:11,420 --> 00:03:19,309
Okay, I have a three and I have five elements before row three which doesn't exist,

22
00:03:19,310 --> 00:03:23,030
but the before rule three, all, all these five elements should be there.

23
00:03:23,540 --> 00:03:27,680
So that's how you how you come up with this 0 to 5.

24
00:03:29,090 --> 00:03:35,300
Similarly if in the case a C representation and you are doing the column first order.

25
00:03:35,930 --> 00:03:47,509
So negative one negative one negative one one negative two because you're indexing from column first.

26
00:03:47,510 --> 00:03:52,010
So this is the element here and here.

27
00:03:52,340 --> 00:03:59,040
So column column one starts, the current column one starts from zero, right?

28
00:03:59,270 --> 00:04:04,840
That's clear. And now column two starts at one, right?

29
00:04:04,850 --> 00:04:11,150
So because of column two, to start the column two, there is a one element before, right?

30
00:04:11,210 --> 00:04:19,700
So, so before column one, there is one element before before column three, there's a three element before.

31
00:04:20,150 --> 00:04:25,330
So column three starts here. Okay, that's that.

32
00:04:25,430 --> 00:04:29,600
So three, right. Okay. Column three starts here.

33
00:04:29,930 --> 00:04:37,489
Okay. And now column four, if you look at column four, column four doesn't have element but still have to have a pointer.

34
00:04:37,490 --> 00:04:41,660
So column four before column four days of now, four elements.

35
00:04:42,530 --> 00:04:51,229
So column four starts here. Even though there is no elements, you still need to record the location and the column.

36
00:04:51,230 --> 00:04:55,490
Five. If you look at column five before column five, there is a four elements.

37
00:04:56,000 --> 00:05:02,540
So column five also starts here and column six, which doesn't exist.

38
00:05:02,540 --> 00:05:07,699
But you still have to have that because that's the that's indicator of that.

39
00:05:07,700 --> 00:05:14,450
This is the end of the column. So column column six, basically.

40
00:05:15,170 --> 00:05:21,180
Oh, sorry. This is not five. Dismissed for three.

41
00:05:21,680 --> 00:05:29,960
So because there are four elements and column six, you have a55 elements before non-zero elements.

42
00:05:30,170 --> 00:05:34,670
So that's, that's how you come up with the 1013, four, four or five.

43
00:05:35,810 --> 00:05:47,050
So, uh, so if you can think about this column pointers is how many elements, non-zero elements exist before this particular column or all.

44
00:05:47,060 --> 00:05:50,450
So that's, that's the easiest, easiest way to get it.

45
00:05:52,190 --> 00:05:55,550
Okay. So any questions about this?

46
00:05:55,970 --> 00:05:59,030
Representations. Okay.

47
00:06:01,150 --> 00:06:04,630
So that's that's the first one.

48
00:06:05,950 --> 00:06:09,280
And a second thing I wanted to mention.

49
00:06:11,050 --> 00:06:14,320
Second thing I wanted to mention is comp, too.

50
00:06:15,850 --> 00:06:28,120
So as I announced yesterday, we need a tighter speed limit, time limit for some some of the problem,

51
00:06:28,120 --> 00:06:39,249
because I noticed that some students were using very inefficient the method that that takes like 10 seconds,

52
00:06:39,250 --> 00:06:46,840
20 seconds or even more, and that that could actually put the child you could get get full credit,

53
00:06:46,840 --> 00:06:53,500
which I do not want, because you need to learn how to implement this in a fast way.

54
00:06:53,770 --> 00:07:06,180
Okay. So so the ten year time limit is 1/2 and that's basically in the call up extra page there.

55
00:07:06,190 --> 00:07:15,280
There are you can see the time limit. So the largest problem, which is really the last test case, you need to make sure that that test within a 1/2.

56
00:07:16,270 --> 00:07:18,610
There are multiple ways to still solve this.

57
00:07:19,390 --> 00:07:30,280
So if you use I believe that you can solve this challenge, decomposition or iGen decomposition or other ways as a single about out of the way.

58
00:07:30,670 --> 00:07:37,450
Some solutions are faster than other solutions, but there are still, even if you use a choice, decomposition,

59
00:07:37,630 --> 00:07:48,340
you can make it really inefficient if you don't account for the outcome, for the methods dimension carefully, you know, if you use, you know.

60
00:07:49,240 --> 00:07:58,090
So the same thing applies the single bullet competition. So you need to think about how do I make this calculation fast enough?

61
00:07:58,150 --> 00:08:02,500
So those are those are important part. So we can give some leeway.

62
00:08:02,500 --> 00:08:08,379
So let's say I implement something that takes like 1.0 or 5 seconds.

63
00:08:08,380 --> 00:08:13,709
1.1 seconds. Right? In that case, when the GSR evaluates.

64
00:08:13,710 --> 00:08:18,340
So she's going to probably use a slightly linear criteria.

65
00:08:18,340 --> 00:08:22,510
So linear the criteria. So probably then might be okay.

66
00:08:22,570 --> 00:08:31,750
But you know, the official policy is that you need to make it less than a second or two to ensure that you're going to get a full credit.

67
00:08:31,840 --> 00:08:37,600
Okay. So for the first two, a problem. A second problem.

68
00:08:40,150 --> 00:08:47,979
Yeah. You can use the, you know, the the color page, the I show that sometimes some problem takes 3 seconds,

69
00:08:47,980 --> 00:08:52,330
so I'll just allow until test 10 seconds multiplying pmf.

70
00:08:52,330 --> 00:08:58,210
I think the longest problem took 12 seconds for for for for the implementation I had.

71
00:08:58,220 --> 00:09:03,970
So I, I'm going to allow until 20 seconds, which is still very hard to get.

72
00:09:04,630 --> 00:09:12,300
So this problem is basically a matter of, you know, how efficiently you can implement the idea,

73
00:09:12,310 --> 00:09:21,400
but dividing concurrent with them and just for your and I don't know if it's going to frustrate you or encourage you,

74
00:09:21,400 --> 00:09:26,100
but you can actually make it run like 1/2, one or 2 seconds.

75
00:09:26,140 --> 00:09:36,940
So if you if you come up with an algorithm that is analog end and that that is much more complicated than you think,

76
00:09:36,940 --> 00:09:43,270
and I might teach that at the end of the semester because that that's kind of cool trick.

77
00:09:43,660 --> 00:09:51,309
But you don't have to do that to, you know, to, to, to meet this criteria.

78
00:09:51,310 --> 00:09:58,930
So we're just requiring only 20 seconds. Okay. So that's the time update.

79
00:09:59,340 --> 00:10:08,709
Okay. And the next question you might end up having, I believe the problem one is a little bit tricky if you don't know how to solve the problem.

80
00:10:08,710 --> 00:10:15,220
So I feel like I need to give some help. So there was a lot of questions regarding that.

81
00:10:16,690 --> 00:10:25,090
So in the rigid regression, you don't need to derive this equation because the equation was given.

82
00:10:26,170 --> 00:10:30,650
But basically this is a quantity you need to calculate, okay?

83
00:10:31,180 --> 00:10:36,940
And you can use the completion or other metric decomposition to calculate that.

84
00:10:37,900 --> 00:10:44,830
But you need to think about what the dimension of this these metrics of operation is.

85
00:10:45,670 --> 00:10:49,450
So this is a P by P metrics, right?

86
00:10:50,170 --> 00:10:59,290
So you need to invert the P by P metrics. I don't recommend inverting it really because that that's that's all about this, all the metrics.

87
00:11:00,480 --> 00:11:05,430
The Chapter four material is How to avoid the Matrix Emergence and the you can still solve the

88
00:11:05,430 --> 00:11:11,790
so the creation but that's that's that's that's up to you to implement but this is a still by

89
00:11:11,880 --> 00:11:19,260
semantics with some some of the cases in the regression you can you could have any query that the

90
00:11:19,260 --> 00:11:26,070
P sometimes you could you could have a lot of P so this and if any so less than N is less than P,

91
00:11:26,600 --> 00:11:34,730
a usual linear regression will fail, but the linear regression still can be calculated because of these diagonal vectors.

92
00:11:35,610 --> 00:11:43,050
So. So in these cases, this can be become really, really slow.

93
00:11:43,440 --> 00:11:55,140
Okay. So and there is so the tricky part of this problem is that there is an alternative representation of these data.

94
00:11:55,680 --> 00:11:59,220
Okay? And that is the problem. Hard to derive.

95
00:11:59,610 --> 00:12:02,150
So that's why I am giving giving as a hint. Okay.

96
00:12:02,160 --> 00:12:09,450
So if you derived yourself sorry for giving too much information, but I think I feel like I need to do this.

97
00:12:10,800 --> 00:12:18,750
So. So these and these are equivalent.

98
00:12:19,200 --> 00:12:29,129
And if you want to if you want to prove that that is that is a very good actually I recommend to

99
00:12:29,130 --> 00:12:36,480
do that because this is a very good exercise to prove and there is a multiple way to prove it.

100
00:12:36,480 --> 00:12:40,889
But because you, for example, use a single event in composition, you can you can figure it out.

101
00:12:40,890 --> 00:12:45,750
Those are equivalent mathematical just to mathematically prove it.

102
00:12:46,500 --> 00:12:52,380
So, uh, so this one is invalid matrix, right?

103
00:12:53,400 --> 00:13:05,130
And so you, you can, if you, uh, so if you try to calculate this, okay, when, and so you basically,

104
00:13:05,250 --> 00:13:11,219
if you want to use a twin decomposition, you just need to make sure that which one is bigger.

105
00:13:11,220 --> 00:13:16,560
So if any is greater than P, then this should be faster.

106
00:13:16,920 --> 00:13:27,300
If it's less than P, this should be faster. You need to implement two different ways and you know, choose not to choose the right one.

107
00:13:28,920 --> 00:13:36,380
Okay. So yeah.

108
00:13:36,500 --> 00:13:43,550
So that's that's a hint to that. I think many people you many people here need.

109
00:13:43,910 --> 00:13:46,720
So I am giving that information. Okay.

110
00:13:47,000 --> 00:13:56,180
Still not very easy because you need to figure out, a, how to how to figure out how to use the compulsion to to calculate this and that.

111
00:13:56,870 --> 00:14:06,710
But this part, you can use the information that I like to offer pretty easily, but this part you need to do a little bit more tweaks.

112
00:14:07,100 --> 00:14:17,720
Uh, as long as you understand the how you can avoid the matrix in book on site, how you can avoid the matrix emerging to calculate,

113
00:14:19,520 --> 00:14:27,560
to calculate the, uh, I mean, to calculate on some operation that involves a matrix inversion.

114
00:14:28,040 --> 00:14:32,659
I believe that you can, you can figure it out, but that's the, that's the technique.

115
00:14:32,660 --> 00:14:38,100
Basically, I would like you to learn and that that I think I gave, you know,

116
00:14:38,100 --> 00:14:43,579
if you hint here and try to figure out the solution that that works a well.

117
00:14:43,580 --> 00:14:53,210
So if you use follows the computer, my expectation is that your solution should be pretty close to 0.411 second or something similar.

118
00:14:53,510 --> 00:14:58,570
Okay. Any questions regarding this?

119
00:15:01,390 --> 00:15:06,850
Okay. Okay. So that's that.

120
00:15:08,380 --> 00:15:17,720
And let me now move on to the slide.

121
00:15:18,440 --> 00:15:22,640
Just slide five. Okay.

122
00:15:23,630 --> 00:15:28,550
So, yeah, the last one we didn't get to discuss this should be quick.

123
00:15:30,230 --> 00:15:38,720
So, uh, you know, let's, let's consider all this a linear regression.

124
00:15:39,560 --> 00:15:50,380
You have a linear regression model where you have a million columns, so a million rows and thousand columns, okay?

125
00:15:51,290 --> 00:15:55,880
And you have the value of X 0 to 10.

126
00:15:56,240 --> 00:15:59,390
So this is a discrete value. Okay.

127
00:16:00,200 --> 00:16:03,230
And you need to solve this linear regression. Okay.

128
00:16:03,980 --> 00:16:10,130
But one thing you know is that this matrix is a mostly tree.

129
00:16:11,420 --> 00:16:18,170
Okay? So you have less than thousand elements that that is not three.

130
00:16:18,860 --> 00:16:22,850
Okay. So matrix of a lot of trees and sometimes one through ten.

131
00:16:23,360 --> 00:16:33,950
Okay. So in this case, if you use the typical the linear model, you can solve it.

132
00:16:33,950 --> 00:16:41,240
But this will take a really long time. Can you think about how to make it faster?

133
00:16:43,160 --> 00:16:52,130
Okay. What kind of algorithms are needed to do that?

134
00:17:22,960 --> 00:17:28,490
You know, all you can discuss this is discussion, so I'll give you a few minutes to discuss.

135
00:18:01,900 --> 00:18:29,980
She was. So.

136
00:18:32,460 --> 00:18:35,490
But it's no secret here.

137
00:18:42,300 --> 00:19:11,570
I can do this if you need. So anyone to suggest a possible solution.

138
00:19:18,760 --> 00:19:22,690
So what is the difficulty in applying the sparse matrix here?

139
00:19:31,500 --> 00:19:38,940
Spa summit is the definition of it is that you have to you have to have a lot of zeros here, but here you have a lot of threes, right?

140
00:19:39,900 --> 00:19:45,020
So how can you make this matrix as fast?

141
00:19:45,420 --> 00:19:49,620
But why is the way to do it? Minus three. Minus three is right.

142
00:19:50,280 --> 00:19:53,760
So let's define the Z equals x minus three. Okay.

143
00:19:54,300 --> 00:20:06,630
And how you can how can you read right this equation data zero plus, you know, X minus x plus three.

144
00:20:06,690 --> 00:20:16,480
That's Z plus three. Sorry. The plus three plus epsilon.

145
00:20:16,840 --> 00:20:20,350
Okay, then you have a beta zero plus three beta.

146
00:20:21,070 --> 00:20:25,150
Okay. Uh, plus.

147
00:20:25,510 --> 00:20:30,250
Okay. And, uh, beta.

148
00:20:32,140 --> 00:20:35,740
Uh, Z. Okay. So it's epsilon.

149
00:20:36,490 --> 00:20:43,180
But this is what you're going to have, right? Okay, then.

150
00:20:43,610 --> 00:20:48,670
Then. Okay. Then let's say. Let's say this is an alpha.

151
00:20:49,090 --> 00:20:53,620
This is let's say this is a beta. And they think this will work.

152
00:20:54,580 --> 00:21:02,500
I mean, let's say messages is gamma just to to make it make it not.

153
00:21:06,350 --> 00:21:16,180
And that's confusing. So again. Do you think now you can you can solve this?

154
00:21:30,480 --> 00:21:33,690
So then you will get a so what?

155
00:21:33,770 --> 00:21:38,240
What do you want to. What are you going to get here? You're going to get Kim.

156
00:21:38,820 --> 00:21:44,690
Get my hat. And, ah, Farhad, you can use the Spurs matrix here because G will be sparse.

157
00:21:45,630 --> 00:21:53,440
And how do you translate gamma head and alpha head into beta zero and beta.

158
00:21:56,160 --> 00:22:01,950
So you need to you need to convert this into the beta zero and beta had zero, right?

159
00:22:15,050 --> 00:22:19,070
So this DNA and beta is the same.

160
00:22:20,420 --> 00:22:26,930
So this is there is an old problem. How about the getting are getting getting better, you know.

161
00:22:30,080 --> 00:22:35,460
How do you get Peter Yarrow? Well, Peter, you know, plus three.

162
00:22:35,480 --> 00:22:39,610
Peter should be Alpha.

163
00:22:39,770 --> 00:22:49,520
Well, actually, uh, I, I, I realized that I messed up.

164
00:22:51,260 --> 00:22:56,780
Okay, so, uh. So here, here, here.

165
00:22:56,780 --> 00:23:00,110
I forgot to add. So. And one's here.

166
00:23:00,410 --> 00:23:03,800
So, uh, for my, my apologies here.

167
00:23:03,890 --> 00:23:15,990
So this is a scalar, right? Because it's a, we're talking about single value or I mean, it's a lot less polygons.

168
00:23:16,520 --> 00:23:21,290
A So, so how do we do it?

169
00:23:23,330 --> 00:23:34,969
So basically one, one, one what probably confused most of you is that this is the this is Z and this is so this is a matrix,

170
00:23:34,970 --> 00:23:42,080
but this is a scalar, but this is actually numbers, right? So you actually have to have it's not I.

171
00:23:43,520 --> 00:23:46,730
Oh, let me make it a matrix of one.

172
00:23:47,090 --> 00:23:49,879
Right. That is the one here. Right.

173
00:23:49,880 --> 00:24:07,100
So I'm going to uh, because a11 is hard to write here, so I'm going to, I'm going to do this, so I'm going to just define as a N by p mentis.

174
00:24:07,220 --> 00:24:10,280
So this, this is a, this is a matrix of ones.

175
00:24:10,490 --> 00:24:15,410
Okay? So to to make to make things straightforward.

176
00:24:16,220 --> 00:24:20,870
So you need to have a matrix and a metrics here, right?

177
00:24:21,080 --> 00:24:25,370
So when you did this, this is not what you have here.

178
00:24:26,120 --> 00:24:33,950
You need to have data, you know, plus three data A and P.

179
00:24:34,100 --> 00:24:43,070
All right. So this is what you have, right? So so then we define this is alpha.

180
00:24:43,310 --> 00:24:50,420
Okay. So basically what, what you need to, what you need to do because of beta and gamma is the same.

181
00:24:50,420 --> 00:24:59,280
You estimate the gain the first. And to get beta, as you know, is alpha, you know, minus three beta hat.

182
00:24:59,470 --> 00:25:02,840
And these are matrix matrix of ones.

183
00:25:03,050 --> 00:25:07,910
So you need to you need to get get it this way. It doesn't make sense.

184
00:25:08,390 --> 00:25:17,299
Then, then, then this will be a proper book, the proper, proper value.

185
00:25:17,300 --> 00:25:24,350
So this is a, this is vector. So, so let me see.

186
00:25:25,460 --> 00:25:32,900
So, so this is vector and this is vector. So this, this will be oh, oh, you know, in the same dimension, basically.

187
00:25:34,770 --> 00:25:43,430
Okay. So.

188
00:25:45,680 --> 00:25:50,150
So that's. That's all about the lectures.

189
00:25:50,330 --> 00:25:55,250
Lecture five. Any other questions? Okay.

190
00:26:01,330 --> 00:26:14,730
So. Before starting Lecture six, I, uh, I was trying to study the current relationship match match the relationship with,

191
00:26:14,740 --> 00:26:19,360
uh, for the roster I have from the class with your face.

192
00:26:19,360 --> 00:26:26,499
And I don't think I'm very good at it. So this is not a attendance check or anything.

193
00:26:26,500 --> 00:26:32,979
I just wanted to know, know your names so I'm actually very bad it in November name.

194
00:26:32,980 --> 00:26:41,230
So if I don't remember your name and if I ask it twice and I apologize, I just wanted to, wanted to check if you don't mind.

195
00:26:42,040 --> 00:26:49,380
So we have about 20 somethings, so maybe, maybe half of our class doesn't do it.

196
00:26:49,760 --> 00:26:51,879
So I don't know which one is easier, but let me,

197
00:26:51,880 --> 00:26:59,470
let me just try to call call the name and raise your hand so that you can just I think just to see the differences, if you don't mind.

198
00:27:00,790 --> 00:27:07,000
So my most. Okay. And I will mention.

199
00:27:07,510 --> 00:27:24,340
Yeah, yeah. And then we check in the pens 2010, ten x 22 and then C 1055.

200
00:27:25,390 --> 00:27:30,860
No, okay. The Z the chin, chin, chin, chin.

201
00:27:31,580 --> 00:27:38,500
So for my eye, I'm very, very bad in the price of pronouncing the names correctly either.

202
00:27:38,620 --> 00:27:44,890
So okay, if I if I didn't realize it correctly, so apologize and call him.

203
00:27:46,600 --> 00:27:52,330
Okay. And the other guy.

204
00:27:52,780 --> 00:27:56,050
Okay. Okay. You can go on.

205
00:27:57,980 --> 00:28:01,520
Okay. And both gentlemen.

206
00:28:02,690 --> 00:28:10,940
Okay. And, uh, so I now notice that some people have a blast in here.

207
00:28:10,940 --> 00:28:13,970
So. So that that was the difference. Isn't good to know that. Okay.

208
00:28:14,450 --> 00:28:17,630
And that we are. Okay.

209
00:28:18,380 --> 00:28:21,700
Jeremiah fog. Okay. Okay.

210
00:28:21,820 --> 00:28:25,700
Okay. Okay. Okay. Okay.

211
00:28:25,850 --> 00:28:31,610
Thank you. Okay. And then the one can.

212
00:28:34,800 --> 00:28:44,070
And Global Command planning to field them in Mali and follow them will be out.

213
00:28:46,640 --> 00:29:06,170
Back in the year when they came here to New York seeing the money run.

214
00:29:08,650 --> 00:29:16,300
Sophia Loren. Okay, well, met met at least three.

215
00:29:18,200 --> 00:29:21,950
Okay. Long. I'll come back.

216
00:29:22,580 --> 00:29:33,400
And. And Ryan came. In a sign needs to be an emergency.

217
00:29:33,850 --> 00:29:42,880
So in a minute, sweetie. And then I don't need Silver to.

218
00:29:44,660 --> 00:29:49,180
Okay. And then loaded Palm Chapel.

219
00:29:49,830 --> 00:29:53,540
All right. So is that the band?

220
00:29:53,800 --> 00:29:57,690
The. Yeah. Okay.

221
00:30:00,170 --> 00:30:08,970
And a way here. And the roads are porous.

222
00:30:12,410 --> 00:30:17,600
Jan Fay one OC and Leah one.

223
00:30:20,370 --> 00:30:25,860
Sue Chung, one of the two way.

224
00:30:28,640 --> 00:30:34,120
Okay. So we have one more Rochester rising soon.

225
00:30:37,130 --> 00:30:43,370
And Chang Yun break in the King James out you.

226
00:30:46,620 --> 00:31:03,390
In a jihad zone when the result is that anyone not from hee hee hee hee hee to kill anyone back home.

227
00:31:04,260 --> 00:31:12,810
I feel like I maybe maybe I am not quite remembering one or two people.

228
00:31:13,260 --> 00:31:21,600
When when when when was the when was the reason? I'll I'll ask you later if I if I can't associate them later.

229
00:31:21,600 --> 00:31:30,239
So that was very helpful because I noticed a lot of differences in the we agree our faces.

230
00:31:30,240 --> 00:31:40,680
There's a lot of variations and these days more so it was good to know I think thank you for thank you for your cooperation.

231
00:31:41,700 --> 00:31:46,349
Okay. So I'll try to avoid asking names again.

232
00:31:46,350 --> 00:31:51,840
But if I do just plate, you know, please bear with me.

233
00:31:53,880 --> 00:32:03,420
Okay, so, so let's let, let's get into the chapter like lecture six material.

234
00:32:04,620 --> 00:32:11,159
So lecture six material. There will be some relevant homework in homework three.

235
00:32:11,160 --> 00:32:15,720
So, uh, this part is also important for, for the class.

236
00:32:17,280 --> 00:32:26,250
Uh, so how many of you have used a cubic splice rate region?

237
00:32:26,460 --> 00:32:32,220
How many use the, use a supply plane fitting in your, any, any kind of work.

238
00:32:32,430 --> 00:32:43,770
Okay, so not many yet. How many so can you just region and again the cubic if we use the spline functions in in the

239
00:32:43,770 --> 00:32:48,360
plotting when you do plotting you're using spline a lot I guess not just for estimation.

240
00:32:49,020 --> 00:32:53,790
Okay. And how many of you know how this line function works?

241
00:32:55,350 --> 00:32:58,920
Okay, so that's what we are going to learn. Looks like we we are.

242
00:33:00,030 --> 00:33:04,469
So what? You know, this lecture will be helpful for most of most of the students.

243
00:33:04,470 --> 00:33:09,180
Okay. So that that that is, that is good to know. Okay.

244
00:33:10,500 --> 00:33:18,690
So interpolation and so this this lecture, I kind of like it because it's it it could be a little bit tedious,

245
00:33:18,690 --> 00:33:24,150
like, oh, who cares about the interpolation extrapolation when there is already a function available?

246
00:33:24,690 --> 00:33:29,969
Some may think that, but the mathematics and all these techniques that are involved,

247
00:33:29,970 --> 00:33:36,900
there is very something that that can be that useful, that can be used in other settings too.

248
00:33:36,900 --> 00:33:41,040
So I think that that is something you probably want to learn about.

249
00:33:42,270 --> 00:33:48,719
Okay. So interpolation, you know, interpolation is the is, you know, finding,

250
00:33:48,720 --> 00:33:54,090
finding the values of the missing data and between extrapolation is the outside the range.

251
00:33:54,090 --> 00:33:58,379
So I think you all know that. And when, when we say curve feeding,

252
00:33:58,380 --> 00:34:04,110
you basically have some sample the point of the function and you are trying to estimate

253
00:34:04,110 --> 00:34:09,270
the continuous value of the function so that that's that's called corporate bidding.

254
00:34:10,770 --> 00:34:19,860
So when you have just a limited number of observations, trying to reconstruct the original function is is generally hard problem.

255
00:34:20,580 --> 00:34:27,830
But there there are many different algorithms that use that and there you can use a linear function,

256
00:34:27,840 --> 00:34:32,370
polynomial function and piecewise linear function or some of the current function.

257
00:34:32,370 --> 00:34:36,540
So those are the things that we are going to use to solve this problem.

258
00:34:37,080 --> 00:34:42,690
Okay. The first linear interpolation, what is a linear interpolation?

259
00:34:43,230 --> 00:34:46,470
Linear interpolation requires to have 2 to 2 points.

260
00:34:46,560 --> 00:34:53,160
Right. And you find the linear function. Okay. So if you have a linear function, two points,

261
00:34:53,160 --> 00:35:04,650
then you can just draw the line between between the two and you can get a solution solution as a slope and y intercept.

262
00:35:05,340 --> 00:35:09,930
And that's the linear interpolation. Okay, this works when you have two points.

263
00:35:11,070 --> 00:35:19,620
So before going to further, don't be confused this way, the linear kind of regression problems.

264
00:35:19,800 --> 00:35:23,010
Okay, we're not trying to solve the regression problems here.

265
00:35:23,110 --> 00:35:29,250
Right? So regression problem, you have a lot of points and you're trying to find the best fitting ones.

266
00:35:29,880 --> 00:35:33,270
This one, we are assuming that there is a just a single function.

267
00:35:33,390 --> 00:35:38,130
So in each of the X, you have a you have a just individual, different values.

268
00:35:38,610 --> 00:35:41,850
There's a single function you need to you need to just reconstruct.

269
00:35:42,480 --> 00:35:46,700
And when you have a value, we are assuming that the values. Exactly correct.

270
00:35:46,880 --> 00:35:48,100
This is not estimated.

271
00:35:48,110 --> 00:35:58,909
You do have a F of X value and we're trying to figure out the F of F over export of all the axes that are not observed in your in your data.

272
00:35:58,910 --> 00:36:06,170
So that that's what we're trying to do. So it's a different problem from the typical statistical regression problem.

273
00:36:06,950 --> 00:36:15,049
So you should be good at feeding. So if you have this point at this point, we are trying to build a linear function between them.

274
00:36:15,050 --> 00:36:19,760
And the requirement is that you should have passed this particular point at this particular point.

275
00:36:22,610 --> 00:36:29,960
Okay. So how do we implement this? Well, that might be a little too easy, but let's let's try to figure it out.

276
00:36:30,290 --> 00:36:40,500
Okay. So this is the linear interpolation implementation.

277
00:36:40,710 --> 00:36:51,650
So, well, you just plug those two equations to the formula here and you don't even need to use need to use a the complicated formula here,

278
00:36:51,650 --> 00:37:00,320
if you know what that means. So just to calculate the slope and the Y intercept, and that is a linear interpolation.

279
00:37:00,470 --> 00:37:09,830
Right. So how do I evaluate whether whether this works or not?

280
00:37:10,130 --> 00:37:15,470
Okay. So how do I visualize this? So we're going to set up some some framework.

281
00:37:16,190 --> 00:37:27,260
So this function, Evo, that poly is basically evaluating all the value of X.

282
00:37:27,740 --> 00:37:30,830
Okay. To the polynomial.

283
00:37:31,190 --> 00:37:36,010
Okay. So X's, you can have a vector of X, you can have a thousand points.

284
00:37:36,020 --> 00:37:42,110
10,000 points doesn't matter. Coefficient is the the coefficient of the polynomial functions.

285
00:37:43,220 --> 00:38:01,700
Okay. So what what is what this is trying to do is that this coefficient of let's say of coefficient is you have this a just a.

286
00:38:04,560 --> 00:38:11,490
Just just on for understanding perspective. MRSA coefficient is just 1 to 3.

287
00:38:13,320 --> 00:38:18,180
Okay. Then what does this evaluate? What does this routine evaluate?

288
00:38:18,840 --> 00:38:27,300
Can you figure? Okay.

289
00:38:27,840 --> 00:38:32,820
So let's try. So in the there's a three drops.

290
00:38:33,180 --> 00:38:36,630
So in the first loop I is doing.

291
00:38:37,220 --> 00:38:40,850
It's actually using I goes from 3 to 1.

292
00:38:40,860 --> 00:38:52,980
Right. So I got three. Okay. When I go to Y becomes one, Y becomes three plus X times, as you know.

293
00:38:53,280 --> 00:38:56,880
But Z, you know, because a y was zero initially.

294
00:38:57,000 --> 00:39:01,080
Right. So this is just, you know. Right. Okay.

295
00:39:01,620 --> 00:39:08,280
And so y y y is just three. And then if I equal to what happens.

296
00:39:08,850 --> 00:39:12,320
Y equals. Now.

297
00:39:12,560 --> 00:39:16,160
Now two plus. Because I equal two. This is two, right?

298
00:39:16,200 --> 00:39:28,350
Two plus explains why. And this is two plus what people the y was three, two plus three x will be evaluated when I becomes one.

299
00:39:30,030 --> 00:39:35,580
Y will be evaluated as one plus.

300
00:39:36,120 --> 00:39:41,380
Okay. X plus x times x times y.

301
00:39:41,700 --> 00:39:47,250
Right. And this will be one plus x y was two plus three x.

302
00:39:47,520 --> 00:39:53,250
Right. This becomes one plus two x plus three x squared.

303
00:39:54,540 --> 00:40:08,820
Okay. So this function is evaluating a polynomial and this is the this is the coefficient for constant term, the first order text to of the on.

304
00:40:08,840 --> 00:40:15,180
So you can this function can evaluate the polynomial for arbitrary degree as well as quick, you know.

305
00:40:15,930 --> 00:40:23,160
So coefficient is a length of three that is should be quadratic function with a coefficient is a length of ten.

306
00:40:23,370 --> 00:40:26,730
It's a 90 degree polynomial. Okay.

307
00:40:30,970 --> 00:40:40,000
So that's what what he's trying to explain so why value we'll eventually evaluate this polynomial.

308
00:40:44,580 --> 00:40:51,100
Okay. So then what we want to do is.

309
00:40:52,120 --> 00:40:56,889
So why do we. Why did you follow them? Well, this is a linear interpolation.

310
00:40:56,890 --> 00:41:04,480
Well, we're going to do the polynomial, so it's a we just made a general version instead of just making something for a linear function.

311
00:41:05,380 --> 00:41:11,530
So linear function is also one degree polynomial, right? So now let's try to do this.

312
00:41:12,070 --> 00:41:15,740
So we have an example of linear interpolation here.

313
00:41:15,760 --> 00:41:22,300
So what I'm going to do is that there are two points negative one in two and a three and six.

314
00:41:22,450 --> 00:41:27,580
Those are two points. Okay. So we're going to find the linear interpolation.

315
00:41:27,970 --> 00:41:34,980
Okay. And what I'm going to do. How do you how do I want to visualize the linear interpolation?

316
00:41:34,990 --> 00:41:38,710
How do you do it? Let's say let's generate some random.

317
00:41:39,160 --> 00:41:46,660
I mean, it's not random. Let's let's let's generate some like a series of point within some intervals.

318
00:41:46,990 --> 00:41:53,080
So starting from the x one minus one, ending from X to plus one.

319
00:41:53,080 --> 00:41:58,660
So you have a enough range to show all the variation between x one and x two.

320
00:41:59,740 --> 00:42:11,350
And what what we are doing here is that for all this value of X and I'm going to do the linear interpolation you get what y?

321
00:42:11,350 --> 00:42:14,740
Why does it do that? So let's go back to the linear interpolation.

322
00:42:15,400 --> 00:42:22,990
The interpolation function actually returns two values B and M, so B is a constant.

323
00:42:22,990 --> 00:42:28,240
Tom M is the first of the term. Right. So this is actually polynomial.

324
00:42:28,810 --> 00:42:32,950
So it returns a to value the coefficient.

325
00:42:33,210 --> 00:42:39,910
Okay. So it's going to just to give a polynomial coefficient, but just the linear linear function.

326
00:42:40,750 --> 00:42:45,790
So this function will will return those two values.

327
00:42:47,860 --> 00:42:53,230
And and after that, we're going to draw the original point and property values using the plot function.

328
00:42:53,770 --> 00:42:58,329
Now, I know that some of you like the plot, but this one is very simple.

329
00:42:58,330 --> 00:43:04,330
So we're not going to use profile. Sorry, I have to do the first.

330
00:43:05,960 --> 00:43:09,430
And run this, then it's going to plot this.

331
00:43:09,770 --> 00:43:15,640
So it's going to plot. So it's going to plot all the points here.

332
00:43:15,650 --> 00:43:19,670
So the individual points are here and.

333
00:43:20,600 --> 00:43:23,929
Well, actually, sorry, plot a plot.

334
00:43:23,930 --> 00:43:27,259
It is a line. So this looks like a line.

335
00:43:27,260 --> 00:43:30,829
And this is it looks like that's the line. And each each of the points.

336
00:43:30,830 --> 00:43:34,309
The X one and x two. Excellent, excellent.

337
00:43:34,310 --> 00:43:41,180
And Y one and extend y two is just put visualized as a point.

338
00:43:41,420 --> 00:43:45,860
So this this is a one way to visualize how actually the interpretation works.

339
00:43:46,010 --> 00:43:50,720
So these are actually all the interpolated values that are connected, its allies.

340
00:43:51,860 --> 00:43:57,260
Okay. So this is just to set up a frame of the unit operation itself is a very easy to understand.

341
00:43:58,020 --> 00:44:09,770
Okay. So we're going to use this frame up to, you know, to to to evaluate the many, many different things.

342
00:44:10,550 --> 00:44:15,810
Okay. So that's the.

343
00:44:20,390 --> 00:44:27,770
Okay. So but this linear interpolation actually have some potential problems.

344
00:44:28,010 --> 00:44:31,010
Okay. What kind of problem that could have? Okay.

345
00:44:32,130 --> 00:44:40,160
So. Well, you know, we are trying to trying to estimate the F of X, right?

346
00:44:40,400 --> 00:44:44,770
And F of X, we don't know. And it's not necessarily linear function.

347
00:44:44,780 --> 00:44:48,980
So if it's not a linear function, the approximation is not accurate.

348
00:44:49,190 --> 00:44:50,990
That's the that's the major problem.

349
00:44:52,880 --> 00:45:03,050
And also another problem is that when you have a very close value, x one and X two, the linear interpolation could be very inaccurate.

350
00:45:03,350 --> 00:45:17,450
Okay, there's another problem. Okay. And so if you have a in a the other problem is that if you have more than two points you can interpolate from,

351
00:45:17,810 --> 00:45:22,370
you can that usually there's only two values you can use for the interpolation.

352
00:45:25,230 --> 00:45:29,430
So. So that's, uh.

353
00:45:29,760 --> 00:45:33,780
Okay. So before going. Hi. Hi. Hi. Hi. Over there, polynomial.

354
00:45:33,790 --> 00:45:37,679
I wanted to show this. So what do I mean?

355
00:45:37,680 --> 00:45:41,250
That this is not very accurate. So this is.

356
00:45:41,310 --> 00:45:45,000
This is a good input. So this this example is exactly the same as before.

357
00:45:46,110 --> 00:45:51,330
In this example, I chose an x three and x four to be very close to each other.

358
00:45:52,190 --> 00:45:58,559
Okay. How those linear interpolation works. So this one still should have a slope of one.

359
00:45:58,560 --> 00:46:03,210
Exactly. And a these also have a slope of one. So should have the same slope.

360
00:46:03,240 --> 00:46:11,879
Does it really look like that? So let's try to figure out. So then the first one we we draw through with the black line.

361
00:46:11,880 --> 00:46:14,430
The second one we draw with the red line here.

362
00:46:15,180 --> 00:46:25,680
If you see them, they are not the same y because we are talking about adding just very small value of ten to the -15.

363
00:46:25,980 --> 00:46:32,820
Right. So in the precision that look for loading number can tolerate a 16 digit.

364
00:46:32,820 --> 00:46:39,720
So if you if you add this small number, then it's not going to fail, but it's going to be inaccurate.

365
00:46:39,960 --> 00:46:43,890
And that's that's what's happening. And you're losing the precision.

366
00:46:43,890 --> 00:46:48,780
So when you when you do this interpolation or anything, you know,

367
00:46:49,260 --> 00:46:55,500
if you have a concern of the precision and you got to be careful about interpreting what you see.

368
00:46:55,510 --> 00:47:03,080
So if you didn't know, then, you know, you might think that, oh, this is a field of value.

369
00:47:03,090 --> 00:47:06,600
It doesn't really cross the value there are supposed to happening.

370
00:47:06,600 --> 00:47:11,160
What's happening I can't figure it out is if you don't know the precision, you can say that.

371
00:47:11,700 --> 00:47:14,480
But if you know the precision is your oh, this is a precision issue,

372
00:47:14,580 --> 00:47:20,220
which just we need to just use different data types or use a different way to avoid the precision problem.

373
00:47:22,940 --> 00:47:26,090
Okay. Any questions so far? Oh, okay.

374
00:47:28,210 --> 00:47:35,500
So now let's try to go from the high of the polynomial.

375
00:47:35,530 --> 00:47:39,790
So if you have a two data points, linear operation is probably makes sense.

376
00:47:40,450 --> 00:47:45,370
But what if you have a three points? What if you have a hundred points?

377
00:47:45,640 --> 00:47:48,160
Okay. Then what are you going to do?

378
00:47:48,220 --> 00:47:59,730
Well, if the higher the polynomial have a more degrees of freedom so it probably can fit the data better than law or the polynomial.

379
00:47:59,740 --> 00:48:04,810
So I'm going to use higher the polynomial because I know that what values should be exactly.

380
00:48:05,430 --> 00:48:09,400
So if you have a three points, you can use a quadratic function.

381
00:48:09,830 --> 00:48:15,909
Right. Polynomial degree to two. If you have a and minus one points, you may want to use all.

382
00:48:15,910 --> 00:48:26,380
And if so, if you have end points, you may want to use all end points to fit into the minus one degree polynomials.

383
00:48:30,350 --> 00:48:41,270
Okay. So. So you have a set of other pairs here and a, you have a, uh, interpolating function,

384
00:48:41,270 --> 00:48:48,960
let's say you have a sum in interpolating function then because this is a input values, you have to have these right?

385
00:48:49,340 --> 00:48:55,400
All the observer value you need to, uh, you need to match those X and y's, right?

386
00:48:56,870 --> 00:49:03,530
So, uh, and the interpolated function is, uh, put the polynomial order one minus one,

387
00:49:03,680 --> 00:49:08,180
which is, which is the so you're trying to feed into, feed into this value.

388
00:49:08,600 --> 00:49:13,730
So you want to calculate the, you want to estimate the beta of J Right.

389
00:49:13,820 --> 00:49:17,870
Yeah. I mean it's not estimating, it's just calculating.

390
00:49:18,110 --> 00:49:30,499
Okay. So you have, you have all the polynomial coefficient of, uh, polynomial.

391
00:49:30,500 --> 00:49:33,559
I, this is a, this is a typo. I'm sorry.

392
00:49:33,560 --> 00:49:38,540
This is meant to be beta j. Obviously, beta j is a polynomial coefficient.

393
00:49:38,870 --> 00:49:44,930
So you need to, you need to feel it fit this value. So how do you do it?

394
00:49:47,030 --> 00:49:53,390
You have a and different equations and you need to fit and polynomials how they do it.

395
00:49:53,750 --> 00:49:57,980
So degrees of degree and minus one polynomial. So you have different equations.

396
00:50:01,370 --> 00:50:10,250
You can do by hand, but the art doesn't have a hand. So how do you how do you let art to solve it?

397
00:50:11,170 --> 00:50:22,100
Okay. Well, if you have a polynomial equations like this, you can actually write the polynomial equation in this matrix form.

398
00:50:23,240 --> 00:50:28,430
Okay. So you have end by end matrix here.

399
00:50:28,760 --> 00:50:32,500
Okay. And you have a coefficient you need to solve it.

400
00:50:32,510 --> 00:50:33,740
You have a value of Y.

401
00:50:34,190 --> 00:50:45,530
So this free matrix is called the band of all the metrics and that that is a very useful matrix you can use to solve any polynomial equations.

402
00:50:46,460 --> 00:50:58,040
Okay then how do you solve this? Because of you this these X1, the end is actually numbers.

403
00:50:58,730 --> 00:51:05,020
So you have a random or the matrix as a sum and balanced and matrix.

404
00:51:05,060 --> 00:51:09,830
So you do have actual metrics. And what you want is to get this beat up.

405
00:51:10,490 --> 00:51:14,450
You can just inverse the metrics and multiply.

406
00:51:14,450 --> 00:51:19,190
And so solve this linear system. And that's what you can do, right?

407
00:51:20,780 --> 00:51:22,550
So let's look at that.

408
00:51:24,650 --> 00:51:35,450
So polynomial interpolation, basically you have x x x is a list of the x value to fit into polynomials and a y is a list of y values.

409
00:51:35,630 --> 00:51:40,650
Okay. Then what you need to do is you need to generate these,

410
00:51:40,660 --> 00:51:47,750
spend them all the metrics so you have an end values, but you need to calculate all this by end matrix.

411
00:51:47,750 --> 00:51:54,230
So this, this matrix you need to calculate. So you need to fill in each of the columns separately.

412
00:51:54,830 --> 00:52:00,500
So this is what you're doing so well. I make a matrix of ones and by.

413
00:52:00,650 --> 00:52:08,389
So start with a matrix of ones. And after that, let's say I start X over.

414
00:52:08,390 --> 00:52:11,540
I is a first column, which should be all ones.

415
00:52:12,410 --> 00:52:18,050
And from the second column to the last column, I keep multiplying x.

416
00:52:18,330 --> 00:52:26,510
Okay. And fill filling them into these random of the each of the column and keep doing that.

417
00:52:26,780 --> 00:52:29,840
Okay. So that's one way to do it.

418
00:52:30,740 --> 00:52:40,520
Obviously, you don't have to do this and you can just oh, I'm going to just the x x I to the end xx8 to the I in this case.

419
00:52:41,030 --> 00:52:45,229
And you can do that to a minus one, right? So in this case, you can do that.

420
00:52:45,230 --> 00:52:49,190
But that that is a more numerical operations than doing this,

421
00:52:49,190 --> 00:52:56,299
because if you do the explanation notation every time you're using the N squared number of operations,

422
00:52:56,300 --> 00:53:02,320
but here you are just using and different number multiplication.

423
00:53:02,330 --> 00:53:04,790
So this is a competition more efficient.

424
00:53:05,390 --> 00:53:14,480
So those are some consider the consideration you want to take into account for when you implement you always after that.

425
00:53:14,480 --> 00:53:20,850
If you calculate beta, just solve function and it'll solve it and it'll return.

426
00:53:20,900 --> 00:53:26,570
So it's a pretty straightforward implementation as long as you know how to construct dependable of the matrix.

427
00:53:28,040 --> 00:53:32,210
Okay. Any questions? Okay.

428
00:53:32,450 --> 00:53:35,900
And then let's try that.

429
00:53:36,170 --> 00:53:41,659
Now, this is quadratic function. So you have a 2D value three observe value three of the values.

430
00:53:41,660 --> 00:53:46,130
So it'll be it'll give a quadratic interpolation.

431
00:53:46,400 --> 00:53:49,640
Okay. So it's going to fit into parabola.

432
00:53:50,360 --> 00:53:54,560
So you're going to have now three values. This poly coefficient will have a three values.

433
00:53:54,700 --> 00:54:03,390
Okay. And you can we can generate a lot of values, create credit, create values from the -2 to 2.

434
00:54:04,550 --> 00:54:12,230
And we're going to get the estimate defeated value F of X and estimate the value of F, kill the x.

435
00:54:12,680 --> 00:54:18,169
Okay. And plot the same thing. So pretty much the same thing as a linear interpolation.

436
00:54:18,170 --> 00:54:21,650
But we'll just have one more coefficient here.

437
00:54:22,610 --> 00:54:27,290
So now you have these three values and looks like working.

438
00:54:27,470 --> 00:54:30,620
Okay. So this looks good so far.

439
00:54:35,850 --> 00:54:39,120
Okay. Any questions so far?

440
00:54:42,710 --> 00:54:50,120
Okay. So first problem of this approach is obviously approximation errors.

441
00:54:50,330 --> 00:54:58,130
So when you create a random or the matrix you are creating.

442
00:55:00,020 --> 00:55:06,589
So there is a lot of operations when you when you calculate this, when you calculate this inverse,

443
00:55:06,590 --> 00:55:12,290
there's a lot of operation you need to subtract between the values and take the,

444
00:55:13,090 --> 00:55:18,850
you know, take, take the and, you know, take explanation and to do the multiplication.

445
00:55:18,860 --> 00:55:24,800
So there's a lot of, a lot of, uh, a lot of operations are involved here.

446
00:55:24,950 --> 00:55:38,720
Right. So so when you, when you have especially some close value between any pairs of x x and x eight plus one, those are potentially the risk.

447
00:55:38,900 --> 00:55:45,710
You already saw that even in the linear interpolation, you could enter the estimate credits, right?

448
00:55:46,010 --> 00:55:54,190
So here you can also introduce approximation errors here and there you can quantify amount of approximation errors in this way.

449
00:55:54,200 --> 00:55:58,640
So let's say the F of X is a smooth function.

450
00:55:58,820 --> 00:56:03,800
Okay. Then, uh, then then you can.

451
00:56:04,070 --> 00:56:08,930
So F of x is really the actual value and this is a fitted polynomial.

452
00:56:09,320 --> 00:56:20,840
Then if you know the antiderivative of the f of x, you can, uh, you can actually quantify the approximation error as actually the dysfunction itself.

453
00:56:20,930 --> 00:56:26,760
Right. So in this function, the de facto function,

454
00:56:27,000 --> 00:56:35,670
basically this one will definitely will have all zeros if X is one of the x of one x over two, x of three and so on.

455
00:56:35,670 --> 00:56:41,790
So it will have no approximation at all if X is exactly one of the x or Y.

456
00:56:42,270 --> 00:56:49,890
But if it's not that there will be a approximation. There's an approximation that is not linear because it's a multiplication of all these values.

457
00:56:50,100 --> 00:56:57,010
Okay. And it depends on the what, what actual value is for the for that F of X.

458
00:56:57,030 --> 00:57:00,660
Okay. Okay.

459
00:57:04,700 --> 00:57:10,730
So let's let's try to look at the aspect of approximation errors.

460
00:57:12,170 --> 00:57:19,370
So let's say you have ten absorb points here, the -3 to 3.

461
00:57:19,610 --> 00:57:23,600
Okay. Just the equally spaced value.

462
00:57:24,680 --> 00:57:30,380
And let's see, I'm trying to my real function, I want you to estimate the same function.

463
00:57:30,740 --> 00:57:34,610
Okay. Same function is obviously not a polynomial function.

464
00:57:34,850 --> 00:57:38,030
Okay. So it's probably harder to estimate.

465
00:57:38,310 --> 00:57:46,910
Let's try that. Okay. So let's use these ten points to do the polynomial interpolation.

466
00:57:47,390 --> 00:57:51,080
Okay. And I make it.

467
00:57:51,710 --> 00:57:54,380
Should I make it bigger? Okay. And.

468
00:57:58,290 --> 00:58:08,820
And okay after that because I try to fit into between so used to my absurd point I use those 1010 values from the -3 to 3,

469
00:58:09,660 --> 00:58:17,760
but in a when I interpolate, I wanted to see how they were, how well they interpolate, but I also wanted to know how well they extrapolate.

470
00:58:18,330 --> 00:58:27,580
So let's look at the area range of the -66 to see see how that works and then evaluating the values.

471
00:58:27,580 --> 00:58:35,220
So D, X and Y values is actually interpolated values and we are trying to visualize the intended function here.

472
00:58:36,180 --> 00:58:39,390
So using the red ones are actually the same function.

473
00:58:39,720 --> 00:58:48,060
Okay. And we are going to show the opposite values a point, and we are going to draw the line as a blue line as actually fitted value.

474
00:58:48,420 --> 00:58:55,560
These X and Y is a feed value. So and this is what it looks like.

475
00:58:57,060 --> 00:59:06,040
Okay. So these are the ten points. So it's trying to find a polynomial that fits these ten values as well.

476
00:59:06,060 --> 00:59:14,310
So this is a nine degree polynomial. So it does really well, actually surprisingly well for in these ranges.

477
00:59:15,000 --> 00:59:19,380
But outside the range, it's not that great.

478
00:59:19,770 --> 00:59:23,970
Okay. So that's that's what it is. And this is not too surprising.

479
00:59:24,060 --> 00:59:27,990
Actually, you might be impressed at how well they do in inside a region.

480
00:59:28,350 --> 00:59:32,820
Okay. So now well, let's try to.

481
00:59:32,850 --> 00:59:42,120
Oh, well, if I you may argue that if I knew that I was I was trying to approximate between the -6 to 6, I should use a wider range.

482
00:59:42,720 --> 00:59:48,900
So instead of using -3 to 3, why don't I use -5 to 5 and that that'll fit better.

483
00:59:49,050 --> 00:59:53,400
You think so? Yes. So this is what it looks like.

484
00:59:53,700 --> 00:59:57,890
So it does. It does do well, if you know where where to target.

485
00:59:57,900 --> 01:00:00,960
So that's a that's a that's a good thing. Okay.

486
01:00:02,040 --> 01:00:06,090
And obviously, if you use an even wider range, it'll be even better.

487
01:00:06,120 --> 01:00:12,780
So, look, it looks almost perfect, but obviously it's not going to work very well outside the region if you go farther.

488
01:00:13,080 --> 01:00:19,060
Okay. So that that's that.

489
01:00:19,980 --> 01:00:25,210
Okay. So a couple of more remarks.

490
01:00:25,990 --> 01:00:30,040
When you use a polynomial operation, these can be expensive.

491
01:00:30,160 --> 01:00:36,750
So it requires a and cubic operation because it involves a matrix solving matrix.

492
01:00:36,760 --> 01:00:44,440
Emergent is needed, so it is computationally challenging when n is very large and let's say you have a thousand point

493
01:00:44,500 --> 01:00:50,620
million points you can make in a million degree polynomial million minus one degree polynomial.

494
01:00:50,620 --> 01:00:53,980
But that that is just the hard to compute. Okay.

495
01:00:55,300 --> 01:01:06,940
And, and if you see the see this thing, this is kind of dangerous if n becomes very, very large because if you multiply those errors.

496
01:01:07,420 --> 01:01:14,469
So I mean, it's it's going to work very well if, if, you know, on on the points that exactly.

497
01:01:14,470 --> 01:01:24,190
Matches, but for the point that doesn't exactly match you cannot predict the how much error will be in in each of the cases,

498
01:01:24,550 --> 01:01:26,860
especially when an is very large.

499
01:01:28,450 --> 01:01:37,060
So when those higher degree polynomial passes all this up to a point, it may fluctuate in the in between in a very unpredictable way.

500
01:01:37,480 --> 01:01:41,590
So that is that is are potential dangers you might want to worry about.

501
01:01:42,430 --> 01:01:46,600
So this is a very famous phenomenon on this phenomenon.

502
01:01:47,080 --> 01:01:53,770
So let me try to explain. Okay. So here here, here's an example.

503
01:01:54,190 --> 01:02:03,010
Okay. We're trying to use the range between the -6 to 6 and use a 15 points between that.

504
01:02:04,420 --> 01:02:13,390
And our observed value here is that we are trying to actually fit into the linear function.

505
01:02:13,840 --> 01:02:20,620
Okay, in your function, but let's say you have some randomness.

506
01:02:20,950 --> 01:02:30,700
Okay, so. Well, my my function. So in this case, it's not you're not trying to actually do the linear regression, okay?

507
01:02:31,000 --> 01:02:36,459
You're you're actually your your absolute value have some errors, right?

508
01:02:36,460 --> 01:02:43,630
So that that's the that's the setting. So some random these so there's no no region to, you know,

509
01:02:44,500 --> 01:02:51,790
not exactly fitting to the to the linear value, but the intent intended function is a linear function.

510
01:02:51,790 --> 01:02:54,669
So I was hoping that, oh, this will, there's an error.

511
01:02:54,670 --> 01:02:59,380
So it'll fluctuate a lot, but it should be very pretty close that, that is what I was expecting.

512
01:03:00,160 --> 01:03:08,860
So let's see what happens if you do this setting. So this is obviously not the intended setting of the most linear interpolation problem,

513
01:03:08,860 --> 01:03:14,979
but also you cannot assume that the all the observed values are always correct

514
01:03:14,980 --> 01:03:18,550
is that there could be sometimes errors if you work with the real world data.

515
01:03:19,150 --> 01:03:23,530
So let's let's see that. Okay, so then this is what it is.

516
01:03:24,220 --> 01:03:34,660
Okay, so probably make it to make a smaller now. Okay, so, so this is X and Y and the, as I say,

517
01:03:34,660 --> 01:03:45,370
the value that was used has a slightly slighter so slightly uh, slightly going, you know, of diagonal here.

518
01:03:45,370 --> 01:03:50,560
So the going up or down. So that's understandable.

519
01:03:51,490 --> 01:03:56,979
But when you expect that the polynomial is fitting, you probably didn't expect that.

520
01:03:56,980 --> 01:04:01,180
This is much of errors, right? This is a little too large errors.

521
01:04:01,270 --> 01:04:11,260
Right. So if there is some inaccuracy in your in your observed values, this could translate into very large inaccuracies in some interpolated points.

522
01:04:12,160 --> 01:04:21,490
And if what you want to do, I have some observation that could have an errors, but I want to find the function that actually smoothly.

523
01:04:21,580 --> 01:04:30,100
I just wanted to find the smoothing function. I just wanted to find something that connects these points are relatively close to each other.

524
01:04:30,220 --> 01:04:33,820
Okay, then this polynomial is probably not what you are looking for.

525
01:04:35,050 --> 01:04:43,390
This, you know, this is not what I want. So when you do the, when you, when you do the smoothing curve, you have observation.

526
01:04:43,390 --> 01:04:46,630
And I want to be able to try to interpret values.

527
01:04:46,930 --> 01:04:52,389
Nobody would believe that. Oh, I my function must be polynomial, so this should be correct.

528
01:04:52,390 --> 01:04:57,760
My, my all values should be exactly correct. So this is the right interpolation.

529
01:04:57,760 --> 01:05:02,499
Nobody will argue that this this doesn't make sense. This kind of interpolation doesn't make sense.

530
01:05:02,500 --> 01:05:15,580
So polynomial interpolation is basically prone to this kind of the randomness or unpredictable behavior due to the hiding.

531
01:05:15,680 --> 01:05:21,440
The nature of the polynomials. Okay.

532
01:05:22,880 --> 01:05:31,190
So how do we avoid that? Well, if I want if what I want it is to just, you know, I don't have to have polynomial.

533
01:05:31,460 --> 01:05:38,660
I want to find something that is reasonable, connecting each values together.

534
01:05:39,170 --> 01:05:49,520
Why don't I actually just avoid that? It has to be nice looking function and I can just assume that this is just linear in a piecewise way.

535
01:05:49,730 --> 01:05:57,440
Okay. So you can use a piecewise, which means that I'm going to use the different functions for each of the intervals and

536
01:05:57,440 --> 01:06:05,719
just connect them with some if well statement which which is may look not very clean,

537
01:06:05,720 --> 01:06:12,500
but you know that that'd be easier way easier alternative to represent as a some sort of function.

538
01:06:12,710 --> 01:06:24,500
Okay. So if you believe that the true function is not really high degree, I think a true to the function should be very simple is a form like a,

539
01:06:24,710 --> 01:06:29,900
you know, exponential function or, you know, linear function and quadratic function and so on.

540
01:06:30,560 --> 01:06:36,320
And you just use the simpler word in the function, but then then you don't have enough,

541
01:06:36,830 --> 01:06:44,370
but you want to leverage all the data points, then just use the, the numbers you need.

542
01:06:44,390 --> 01:06:52,549
For example, if you wanted to use a linear function, only use a pair of pair values of between all the all the in the sliding window so that

543
01:06:52,550 --> 01:06:56,930
you can do the piecewise interpolation so that that's the solution you can come up with.

544
01:06:57,320 --> 01:07:04,100
Okay. So the first thing is a piecewise linear interpolation.

545
01:07:04,100 --> 01:07:09,320
So it's a linear approach to our interplay between the points to draw the line.

546
01:07:09,590 --> 01:07:17,270
So you basically piecewise a linear interpolation. I don't think I need to explain a lot because it's very intuitive what needs to be done.

547
01:07:18,680 --> 01:07:23,990
So this is a same process with the linear population, but you are doing these.

548
01:07:24,110 --> 01:07:25,230
If you have an endpoint,

549
01:07:25,460 --> 01:07:37,250
you are doing this and the all in minus one points in the intervals and you do the extrapolation at the end using the first two or less two values.

550
01:07:37,310 --> 01:07:41,230
Okay. And this computational complexity is linear complexity.

551
01:07:41,240 --> 01:07:45,500
That's a that's a good thing. So let's see how this works.

552
01:07:45,920 --> 01:07:51,770
Okay. So so this is how you do.

553
01:07:56,580 --> 01:08:05,850
Piecewise linear ablation. Okay. When you do the piecewise linear population, it is important that your all the observer values are ordered.

554
01:08:06,060 --> 01:08:10,390
Okay. So your input values can come as a on the order.

555
01:08:10,410 --> 01:08:17,340
So you can actually order them using the or the the using this order.

556
01:08:18,780 --> 01:08:23,130
So, so you have a two, two functions in R.

557
01:08:23,160 --> 01:08:27,600
So if you have a sort, then you'd actually have a saw actually serve them.

558
01:08:28,050 --> 01:08:36,530
But actually in this case, you don't necessarily want to sort them because you still want to keep the order between X and Y.

559
01:08:36,540 --> 01:08:40,440
So you don't want to order Y, you just I just want to reorder X.

560
01:08:40,860 --> 01:08:47,370
So what you can do is that if you do order, it gives you the indices of the each of the sorted value.

561
01:08:47,370 --> 01:08:51,810
So what is index of the smallest value, index of the second smallest value and so on.

562
01:08:52,200 --> 01:08:58,440
So these are the indices. So then you can really rewrite the Y in X based on that order.

563
01:08:58,470 --> 01:09:04,680
So I want to reorder X and Y based on the increasing order of X.

564
01:09:04,710 --> 01:09:08,940
So that's that's that's how you reorder it. Once you Real Madrid,

565
01:09:09,660 --> 01:09:18,899
this de function is just a simple function that you just take the difference between the all the the I all the value of y one then white two y ten,

566
01:09:18,900 --> 01:09:32,380
yy3 and so on so d for d for y I will just give a value n minus one values between all the all the possible intervals and the same same things here.

567
01:09:32,400 --> 01:09:37,740
So this is a easy way to get the slope for all the possible intervals.

568
01:09:37,800 --> 01:09:43,080
Right. And the same thing can happen here.

569
01:09:43,110 --> 01:09:50,759
So when you do the calculate the y intercept because you are doing the each of the interval, you need to have PN minus one values.

570
01:09:50,760 --> 01:09:56,489
And the first value is not used for the calculating the Y intercept.

571
01:09:56,490 --> 01:10:09,180
So you exclude the first value and use the rest of the minus one values to calculate the, calculate the, uh, the, the y intercept.

572
01:10:09,540 --> 01:10:13,160
Okay. Obviously, these two parts can be implements.

573
01:10:14,190 --> 01:10:24,630
These two parts can be implemented in a loop. But if you know how to use the vector WG vector operation, this is always preferred way to do it.

574
01:10:25,380 --> 01:10:29,190
As long as you don't mind a slight complication in understanding it because a

575
01:10:29,190 --> 01:10:34,530
computationally using loop is likely disadvantageous than using the native functions.

576
01:10:35,640 --> 01:10:47,310
Okay. So then what it does is that now this piecewise interpolation function gives the all the x values excluding

577
01:10:47,310 --> 01:10:56,790
the first value x2x3x4x of n and each of them it gives a slope and y intercept to allow the interpolation.

578
01:10:58,470 --> 01:11:03,300
Then this is a piece of work. So that's that's the piecewise linear population.

579
01:11:04,500 --> 01:11:10,860
And if you do the piece to want to do the evaluation, you can, you can apply these things.

580
01:11:10,860 --> 01:11:18,899
So. So I'm going to give a high level explanation.

581
01:11:18,900 --> 01:11:22,170
And it's a, it's a good exercise you to figure out what what this does.

582
01:11:22,170 --> 01:11:29,130
But basically this is what it does. So you have a lot of X values, so you want it interpolate, right?

583
01:11:29,820 --> 01:11:33,660
So for each of the I, each of the values.

584
01:11:33,840 --> 01:11:40,560
Okay, so you have a and different observations here. You have a different coefficient here and a here.

585
01:11:41,190 --> 01:11:55,760
Uh, the coefficient you're giving here is uh, so, so, so it, so when it returns, it returns a matrix because of this SC bind.

586
01:11:55,980 --> 01:11:59,670
Right. So this is a vector. This is a vector. This is vector.

587
01:11:59,670 --> 01:12:05,520
Each of them are consider this column and it's a, it's returning a matrix.

588
01:12:05,680 --> 01:12:14,160
Okay. So the return, the return value is an end minus one row will have a minus one rows and a three columns.

589
01:12:14,220 --> 01:12:29,670
Right. So then so what, what this will do, this coefficient is a so so this function is going to assume that my function.

590
01:12:30,650 --> 01:12:34,139
So. So this one is a linear interpolation.

591
01:12:34,140 --> 01:12:45,030
But you can also do the polynomial interpolation. So I'm going to assume that this is up and minus one times and minus one times is some values.

592
01:12:45,240 --> 01:12:52,200
So first one is x1x to the well, actually not not x1x2 because your copy of interval.

593
01:12:52,200 --> 01:12:57,960
So first value is gone. So. 2x3x minus one.

594
01:12:58,590 --> 01:13:03,500
The second value is a coefficient b know all other b values.

595
01:13:03,830 --> 01:13:08,460
Therefore four for each of the intervals and there's the P1 values.

596
01:13:08,790 --> 01:13:13,340
And if you want to use a quadratic, it cannot be two values and so on.

597
01:13:13,350 --> 01:13:21,930
So and minus one times whatever degrees of polynomial that say the p and this will have a P plus.

598
01:13:24,480 --> 01:13:35,580
If it's a polynomial of degree of P, then it should be sure to have a degree of P plus two because you need to have an X here.

599
01:13:35,660 --> 01:13:38,820
Right. So P plus two columns it'll have. Okay.

600
01:13:39,330 --> 01:13:43,920
So in this case, people one. So that's why you have a minus one times three values.

601
01:13:45,300 --> 01:13:54,150
So then so and here is here he says N but this is really and minus one from the perspective of the original function.

602
01:13:54,330 --> 01:14:04,350
So this is a number of possible interpolated points and each of them are you you're making the X bound.

603
01:14:04,680 --> 01:14:19,079
So this is a this x bound is basically those are PN minus one values that are used for use used for this interpolation by does exclude

604
01:14:19,080 --> 01:14:29,880
the last point because what it what this is going to do is you actually have X one and x two all the way to the Z minus one and next n,

605
01:14:30,600 --> 01:14:35,910
right. So you can do the interpolation for each of them. But I do like to do the extrapolation.

606
01:14:36,450 --> 01:14:39,230
So you're getting rid of the last values, okay.

607
01:14:39,810 --> 01:14:47,840
And just a given negative infinite opinion so that you can use the make this as the last thing to go make.

608
01:14:47,850 --> 01:14:51,000
This is the less obvious that that's what that's what you're trying to do.

609
01:14:51,930 --> 01:14:57,989
So remove this and are trying to make an infinite an infinite okay and the Y is just

610
01:14:57,990 --> 01:15:04,590
a will have a interpolated values and we're using this evil poly function here.

611
01:15:04,800 --> 01:15:11,610
Okay. Okay. And each of them, we're doing the we're doing the interpolation.

612
01:15:11,610 --> 01:15:15,659
So there's, there's there's no magic here. We're just using interpolation.

613
01:15:15,660 --> 01:15:26,489
But when we do the interpolation, we are applying a different we are applying different coefficient based on the where, where x belongs.

614
01:15:26,490 --> 01:15:33,930
So we're trying to extract the X's that, that belongs to each of the interval.

615
01:15:33,930 --> 01:15:39,390
For each of the interval we're using the different coefficient and using only those subsets of them.

616
01:15:40,680 --> 01:15:45,030
We're doing the the, we are doing the interpolation.

617
01:15:45,030 --> 01:15:54,599
So eventually when you go into this loop it'll have, you will eventually have all the predictive values by each of the x value,

618
01:15:54,600 --> 01:16:01,310
which will only be only, only be calculate only once here.

619
01:16:01,350 --> 01:16:10,499
So, so this loop will cover all the all x values that that belongs to anywhere, anywhere here.

620
01:16:10,500 --> 01:16:16,860
So these are well, this, this part is slightly less computationally efficient than what I would like to be.

621
01:16:16,860 --> 01:16:21,120
But this is an easy way to implement. So I'll I'll just do it this way.

622
01:16:22,260 --> 01:16:28,850
Okay. So then now let's try to figure out how this works.

623
01:16:29,090 --> 01:16:32,540
So we have a for observer point here. Okay.

624
01:16:33,020 --> 01:16:42,110
And we can we can use this a piecewise linear interpolation function and try to see how interpolation worked here.

625
01:16:42,200 --> 01:16:48,710
So so this is a this this is a four values in a -3 to 3 is the range we are looking at.

626
01:16:49,430 --> 01:16:55,010
So it looks like so in between. So here and so here.

627
01:16:55,190 --> 01:17:01,800
It does use the great operation in this in this way just to to allow the extrapolation.

628
01:17:01,820 --> 01:17:08,120
It does reach all the way to the negative infinity. So this part is anything that belongs the leftmost one.

629
01:17:08,120 --> 01:17:12,390
So it's just, just using the coefficient here.

630
01:17:12,410 --> 01:17:21,860
Anything that goes over, over the limit also is just a using external extrapolation using the last interpolation.

631
01:17:27,110 --> 01:17:35,660
Okay. So now the the last thing for today is to trying these lunges phenomenal again.

632
01:17:35,960 --> 01:17:41,420
Okay. So we're going to try the same example in the nineties phenomenon.

633
01:17:41,930 --> 01:17:46,580
We for the reproducibility, we actually set the D here. So it's exactly the same problem.

634
01:17:47,480 --> 01:17:54,470
And the let's compare the polynomial interpolation and the piece was a linear interpolation and see how they work.

635
01:17:54,560 --> 01:18:02,690
So piecewise linear interpolation will be will be shown in red and the polynomial interpolation will be shown in blue.

636
01:18:03,590 --> 01:18:06,880
So this is why it looks like. Okay.

637
01:18:07,990 --> 01:18:14,470
So which one do you think it's better? It's a subjective question,

638
01:18:15,400 --> 01:18:21,670
but most people will have opinion that piecewise linear function makes more sense

639
01:18:21,670 --> 01:18:27,820
because we don't expect this kind of a very huge fluctuation in the estimated function.

640
01:18:29,920 --> 01:18:36,580
Okay. So that's all I have today. And we're going to talk about the nature of cubic explains from the next lecture.

641
01:18:39,750 --> 01:18:40,110
So.

