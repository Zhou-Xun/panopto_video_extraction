1
00:00:09,180 --> 00:00:11,470
After watching this video,

2
00:00:11,470 --> 00:00:13,750
you will be able
to use DATA steps,

3
00:00:13,750 --> 00:00:16,810
PROC PRINT with a WHERE
statement and PROC FREQ

4
00:00:16,810 --> 00:00:20,625
to check for consistency
of related variables.

5
00:00:20,625 --> 00:00:24,029
We will also use
two SAS functions

6
00:00:24,029 --> 00:00:27,950
to change from character
to numeric and vice versa.

7
00:00:27,950 --> 00:00:31,450
A typical example of
related variables are

8
00:00:31,450 --> 00:00:34,755
smoking status and
age starting smoking.

9
00:00:34,755 --> 00:00:38,560
Clearly, it's obvious the
nonsmokers cannot have

10
00:00:38,560 --> 00:00:40,150
a valid value for age

11
00:00:40,150 --> 00:00:42,580
starting smoking because
they never smoke.

12
00:00:42,580 --> 00:00:44,980
So that should be
missing instead.

13
00:00:44,980 --> 00:00:48,935
For this particular example
and other similar examples,

14
00:00:48,935 --> 00:00:52,515
you can check it with PROC
PRINT and a WHERE statement.

15
00:00:52,515 --> 00:00:57,180
That is, you will ask SAS
to print age starting

16
00:00:57,180 --> 00:00:59,955
smoking for nonsmokers who have

17
00:00:59,955 --> 00:01:03,405
age starting smoking
different than missing.

18
00:01:03,405 --> 00:01:06,200
As you can see, there are
not really fixed rules

19
00:01:06,200 --> 00:01:08,135
or fixed code for this part,

20
00:01:08,135 --> 00:01:09,830
since it really will depend

21
00:01:09,830 --> 00:01:11,510
on the type of
variables you have,

22
00:01:11,510 --> 00:01:14,780
and you will have to be
creative in coming up with

23
00:01:14,780 --> 00:01:18,830
your own ways of checking
those related consistencies.

24
00:01:18,830 --> 00:01:20,930
Another thing that is usually

25
00:01:20,930 --> 00:01:23,945
recommended is to
recalculate or recreate

26
00:01:23,945 --> 00:01:26,390
any variable that
can be calculated or

27
00:01:26,390 --> 00:01:29,375
recreated from other
variables in the dataset.

28
00:01:29,375 --> 00:01:31,740
In this example,
we are recreating

29
00:01:31,740 --> 00:01:34,310
the variable overweight
that as you know,

30
00:01:34,310 --> 00:01:37,660
it's defined as BMI
higher than 25.

31
00:01:37,660 --> 00:01:39,990
Then we can cross tabulate it

32
00:01:39,990 --> 00:01:41,985
with the original
overweight variable,

33
00:01:41,985 --> 00:01:44,040
and let's see what happen.

34
00:01:44,040 --> 00:01:48,860
Oops. Clearly, here you can
see that although most people

35
00:01:48,860 --> 00:01:50,855
are perfectly classified as being

36
00:01:50,855 --> 00:01:53,425
overweight or not by
the two variables,

37
00:01:53,425 --> 00:01:56,705
there are two people who
are considered overweight

38
00:01:56,705 --> 00:02:00,440
by one variable and not
overweight by the other.

39
00:02:00,440 --> 00:02:03,020
Let's see in more detail.

40
00:02:03,020 --> 00:02:05,300
We can use PROC PRINT to take

41
00:02:05,300 --> 00:02:08,305
a closer look to those
two observations.

42
00:02:08,305 --> 00:02:10,739
You can see that observation

43
00:02:10,739 --> 00:02:14,150
14 is a clear mistake
on the first variable,

44
00:02:14,150 --> 00:02:16,805
because this person is
clearly not overweight,

45
00:02:16,805 --> 00:02:20,225
the BMI is 23.7.

46
00:02:20,225 --> 00:02:23,090
But observation 34 is one of

47
00:02:23,090 --> 00:02:24,515
those errors that I

48
00:02:24,515 --> 00:02:26,495
told you is like the
tip of the iceberg,

49
00:02:26,495 --> 00:02:28,910
an error that hides
another error.

50
00:02:28,910 --> 00:02:33,545
So clearly, 7.5 is an
implausible value for BMI.

51
00:02:33,545 --> 00:02:35,990
In this situation, you
will have to go back to

52
00:02:35,990 --> 00:02:38,720
your raw data and your
data collection forms,

53
00:02:38,720 --> 00:02:42,035
and check what is the
BMI of that person.

54
00:02:42,035 --> 00:02:45,410
Finally, one common
editing problem

55
00:02:45,410 --> 00:02:46,790
that you may encounter

56
00:02:46,790 --> 00:02:48,860
is when you have two subdatasets

57
00:02:48,860 --> 00:02:51,305
with the same variables
but different people,

58
00:02:51,305 --> 00:02:53,435
and you want to
merge them together.

59
00:02:53,435 --> 00:02:55,130
Because they have
the same variables,

60
00:02:55,130 --> 00:02:57,140
you just need a common data set.

61
00:02:57,140 --> 00:03:00,260
You try to put together the
two datasets and you get

62
00:03:00,260 --> 00:03:04,100
this annoying error from
the SAS log that says,

63
00:03:04,100 --> 00:03:06,380
"The variable overweight has been

64
00:03:06,380 --> 00:03:09,275
defined both as numeric
and character."

65
00:03:09,275 --> 00:03:11,870
Basically, in one
of your datasets,

66
00:03:11,870 --> 00:03:13,670
the overweight
variable is numeric,

67
00:03:13,670 --> 00:03:16,045
and in the other is a
character variable.

68
00:03:16,045 --> 00:03:18,350
You cannot merge those datasets

69
00:03:18,350 --> 00:03:20,360
until you solve that problem.

70
00:03:20,360 --> 00:03:22,760
Basically, you have
to decide if you want

71
00:03:22,760 --> 00:03:24,920
the variable to be
numeric or character,

72
00:03:24,920 --> 00:03:27,020
it doesn't matter,
but you have to make

73
00:03:27,020 --> 00:03:28,580
the appropriate change in one of

74
00:03:28,580 --> 00:03:31,000
the datasets before they merge.

75
00:03:31,000 --> 00:03:33,750
To do that, you can
use the SAS functions

76
00:03:33,750 --> 00:03:35,790
PUT to change from numeric to

77
00:03:35,790 --> 00:03:38,445
character or the INPUT

78
00:03:38,445 --> 00:03:40,410
to change from
character to numeric.

79
00:03:40,410 --> 00:03:42,230
Here, you can see how

80
00:03:42,230 --> 00:03:45,860
the code would be for
the overweight variable.

81
00:03:45,860 --> 00:03:48,195
We are done with data cleaning,

82
00:03:48,195 --> 00:03:50,265
just some final remarks.

83
00:03:50,265 --> 00:03:52,485
Be prepared for everything.

84
00:03:52,485 --> 00:03:55,005
Murphy's Law applies here.

85
00:03:55,005 --> 00:03:58,740
But relax and enjoy the process.

86
00:03:58,740 --> 00:04:02,630
In summary, we learned how
to check the consistency of

87
00:04:02,630 --> 00:04:04,580
related variables using PROC FREQ

88
00:04:04,580 --> 00:04:07,045
and PROC PRINT with
a WHERE statement,

89
00:04:07,045 --> 00:04:09,680
and we learned two
SAS functions to

90
00:04:09,680 --> 00:04:12,275
change variables from
character to numeric,

91
00:04:12,275 --> 00:04:14,365
and from numeric to character.

92
00:04:14,365 --> 00:04:16,515
We are done with data cleaning.

93
00:04:16,515 --> 00:04:17,875
Congratulations.

94
00:04:17,875 --> 00:04:20,855
Now you know the basics
to clean any dataset,

95
00:04:20,855 --> 00:04:24,320
and you're ready
to move to Unit 2.

