1
00:00:01,470 --> 00:00:07,740
Well, isn't it time we're done?

2
00:00:08,430 --> 00:00:11,600
Be right. All right. Hi, everyone.

3
00:00:11,600 --> 00:00:14,780
Welcome to our fifth week of epidemiology.

4
00:00:14,780 --> 00:00:18,109
Six, seven, four. This will be the last time we meet before.

5
00:00:18,110 --> 00:00:21,350
Until after the end of the Thanksgiving holiday break.

6
00:00:21,360 --> 00:00:27,530
So there's no class next Wednesday. There is the moment, the following one.

7
00:00:29,060 --> 00:00:34,930
So I am recording. I just want to give you a couple of reminders. There are no late penalties for assignments and I've been sick some force.

8
00:00:34,970 --> 00:00:43,480
But get them in when you're when you're ready with them. I have the answer key up for Mark three so you can check your work there.

9
00:00:45,590 --> 00:00:51,050
Well, at this point I might end up doing that. I look in terms of looking how far we're going to get today.

10
00:00:51,710 --> 00:00:56,570
So this point maybe less. Let's put a pause on it. You can at least get started on the graphing one.

11
00:00:57,200 --> 00:01:03,880
I do have drop in hours on Fridays and remember posts on three discussion threads for a full credit for that portion of your grid.

12
00:01:04,160 --> 00:01:10,160
Any logistics comments? Questions. Yeah, it's not posting on discussion threads do reply.

13
00:01:10,460 --> 00:01:14,060
Yes. Okay. It is wonderful to help your colleagues out.

14
00:01:14,060 --> 00:01:17,810
So even if you don't have a question yourself, please check in with that discussion thread.

15
00:01:18,500 --> 00:01:23,600
Our is a user community based philosophy and software.

16
00:01:24,230 --> 00:01:30,860
So you want to be not just using that user base to ask questions, but also providing help to each other.

17
00:01:31,370 --> 00:01:35,059
So it may not feel like you're quite ready to help each other out, but you definitely are.

18
00:01:35,060 --> 00:01:40,730
And you can help think through stuff or provide some ideas to your colleagues as well.

19
00:01:41,660 --> 00:01:47,990
This is one of the main things that we're trying to work on. My goal with coding is never to code perfectly all the way through,

20
00:01:48,200 --> 00:01:51,979
but to figure out what are some good strategies for troubleshooting my way out

21
00:01:51,980 --> 00:01:55,910
of problems or thinking through problems so you can help each other out there?

22
00:01:56,480 --> 00:01:59,900
And that's a great question. Any other comments? Questions?

23
00:02:03,930 --> 00:02:12,870
How? Here's our outline. We'll review Hummer. Three will recap last class, and then we'll do a little bit of activities related to our project.

24
00:02:12,870 --> 00:02:19,650
Three, we'll talk about some special topics for missing data, for loops, and then we'll take a break and then we'll start plotting.

25
00:02:19,680 --> 00:02:24,690
This is what I'm saying. I think we will get to the beginning of plotting so you can start homework four.

26
00:02:24,690 --> 00:02:29,849
But I don't think you'll have all of the code yet to be able to finish homework.

27
00:02:29,850 --> 00:02:36,100
Four So like we will do that next week. All right.

28
00:02:36,130 --> 00:02:39,500
Hummer three review. Okay, so there were four major questions.

29
00:02:39,770 --> 00:02:44,590
And the goal there was to talk and be able to do univariate descriptive statistics

30
00:02:44,600 --> 00:02:48,950
on the numeric variable univariate descriptive statistics as a factor variable.

31
00:02:49,190 --> 00:02:56,870
So all of our data was helpful in terms of having decided which variables should be which type.

32
00:02:58,160 --> 00:02:59,450
And then in question three,

33
00:02:59,450 --> 00:03:05,300
I wanted you to filter the dataset and then the universe again and then name question four is kind of putting it all together,

34
00:03:05,450 --> 00:03:09,379
doing bivariate descriptors for both numeric and factor. How did this go for you?

35
00:03:09,380 --> 00:03:15,800
What were the pain points? So anybody want to describe their experiences or any challenges along the way?

36
00:03:19,260 --> 00:03:24,510
We got some nice work in the discussion threads helping each other out with some of these challenging concepts.

37
00:03:30,960 --> 00:03:38,340
I remember one of the questions was, what should we do with missing data? And that's that is kind of a perennial question for epidemiologists.

38
00:03:38,340 --> 00:03:43,070
And it's one of the many decision points you'll have as an analyst of how you want to handle it.

39
00:03:43,080 --> 00:03:46,290
So the grading won't be based on which one you choose.

40
00:03:46,290 --> 00:03:53,550
But yeah, I was really surprised how many decisions I had to make when I got my first analyst job.

41
00:03:59,010 --> 00:04:02,550
All right. Well, feel free to raise any points or questions along the way.

42
00:04:04,740 --> 00:04:10,380
Let's talk about what did we learn last time? All right. So the first thing we focus on was univariate descriptive statistics.

43
00:04:11,070 --> 00:04:19,020
This is when we're talking about a single variable at a time and we want to talk about the distribution of it.

44
00:04:19,200 --> 00:04:26,260
So the first major thing when we're doing univariate descriptive statistics will be to figure out what type of variable is it,

45
00:04:26,280 --> 00:04:29,520
what shape does it have? Is it numeric that goes in one bucket?

46
00:04:29,640 --> 00:04:34,200
Have one. So strategies for describing it. Is it categorical a factor that goes in another bucket?

47
00:04:34,200 --> 00:04:39,240
We have a different set of strategies. This is the same decision tree will do at the beginning of graphic as well.

48
00:04:39,930 --> 00:04:44,040
So kind of all of our analytic strategies will depend on the shape or the type of the variable.

49
00:04:44,490 --> 00:04:48,780
So that's why we spend so much time and emphasis and the data coming in to make sure we get those right.

50
00:04:49,440 --> 00:04:59,010
All right. So if our variable is numeric, what are some functions we might use to describe the distribution of body mass variable?

51
00:04:59,730 --> 00:05:05,520
What functions work for you in the homework? All right.

52
00:05:07,230 --> 00:05:11,880
I love the summary function. It gives us a whole bunch of values all rolled into one.

53
00:05:12,150 --> 00:05:14,969
And we don't have to ask for those values individually.

54
00:05:14,970 --> 00:05:20,640
So that all give you the minimum, the first quartile, the median, the mean, the third quartile, the maximum.

55
00:05:21,030 --> 00:05:26,320
Wonderful. What are some other functions? I work for folks. Four numeric variables.

56
00:05:41,610 --> 00:05:46,110
The SC function will get you the standard deviation. Um.

57
00:05:46,710 --> 00:05:54,120
We can ask for those values individually so we can ask for the mean the quantile to ask for different types of quartiles or others.

58
00:05:55,290 --> 00:06:00,540
If we want to use this type of way, we can use a summarized function to put it, wrap it into a nice little table.

59
00:06:01,390 --> 00:06:06,150
Okay. So we got a lot of approaches there from numeric variables. What about four factor variables?

60
00:06:06,150 --> 00:06:12,120
When we have a categorical variable, we usually want to present the number and the percent or the frequency.

61
00:06:12,390 --> 00:06:15,450
What are some functions and are that used to help you do that?

62
00:06:21,420 --> 00:06:25,260
What kind of functions were useful for factor variables? This would be a question to examine.

63
00:06:34,140 --> 00:06:37,299
We? Yeah.

64
00:06:37,300 --> 00:06:40,450
Please. There's all kinds of ways to do it. Do you like Israel?

65
00:06:40,750 --> 00:06:46,000
Yeah. I love the table function. That's going to count up. How many observations are in each category?

66
00:06:46,330 --> 00:06:49,540
A similar function as count. Those will get you the same information.

67
00:06:50,320 --> 00:06:55,840
What are some strategies folks have forgetting the frequency or the percentage of people in each category?

68
00:07:04,230 --> 00:07:08,400
Yeah. Is it possible? Yeah. Use the prompt table function.

69
00:07:09,090 --> 00:07:13,530
You can calculate a fraction of those counts. She has several approaches there.

70
00:07:16,960 --> 00:07:20,530
What about if we want to do bivariate statistics? What are some strategies there?

71
00:07:20,560 --> 00:07:25,510
So here is out. Essentially, we don't just want to know the distribution of one variable itself.

72
00:07:25,510 --> 00:07:33,250
We want to know the distribution of essentially the data split by one variable, another distribution, each of the strata of the data.

73
00:07:34,780 --> 00:07:43,470
What are some ways that you calculated the statistics potentially in question four or three questions, three or four of your heart?

74
00:07:49,730 --> 00:08:06,700
Prejudice. One way you might consider a kind of long form way would be to filter your data set so some set your dataset

75
00:08:06,940 --> 00:08:13,150
into the observations that have your different criteria and then calculate university's ticks on that,

76
00:08:13,630 --> 00:08:19,150
right? So a subset of data into two groups and then calculate univariate on each of those subset

77
00:08:19,150 --> 00:08:27,280
datasets so that we kind of a manual approach we also can do without subset in the data.

78
00:08:27,280 --> 00:08:36,579
We can do it all in one or some useful functions like group five, which will split the data just within the confines of that function.

79
00:08:36,580 --> 00:08:41,630
So we don't have to create new objects. So this can be helpful.

80
00:08:41,640 --> 00:08:47,040
This gives us some idea our our exposure is associated with our outcomes, for example.

81
00:08:49,930 --> 00:08:55,990
We also saw some approaches to automating tables. So we don't have to do all of this stuff manually.

82
00:08:58,180 --> 00:09:06,190
One of the most or one of my favorite aspects of art is how we can create

83
00:09:06,340 --> 00:09:10,180
output that's generated automatically so we don't have to copy paste anymore.

84
00:09:10,720 --> 00:09:15,549
So what what's the function that we were introduced to to help generate either

85
00:09:15,550 --> 00:09:20,050
univariate or bivariate tables automatically that are in formats we can export?

86
00:09:24,510 --> 00:09:27,870
Yeah. We can use the summarize function. Was there another one we could use?

87
00:09:34,650 --> 00:09:42,350
What's Kelly's favorite function? This whole class? Grab the table.

88
00:09:42,410 --> 00:09:49,460
TBL Underscore summary. I really encourage you to practice with this function.

89
00:09:50,270 --> 00:09:56,230
It can save you so much time in the long run because that'll generate each variable in the rows.

90
00:09:56,240 --> 00:09:59,720
And then you can have all of these descriptive statistics in the columns.

91
00:10:00,290 --> 00:10:04,129
And that function is smart enough to recognize which of your variables are numeric,

92
00:10:04,130 --> 00:10:07,580
which are factor, and it'll calculate corresponding statistics there.

93
00:10:08,850 --> 00:10:16,920
It also has a simple option in there where you just say bye and it will split the data and make it bivariate as well.

94
00:10:17,460 --> 00:10:22,770
So investing in learning the table summary function will help your ability to do both of these types of tables.

95
00:10:25,130 --> 00:10:29,600
Is there anything else that is on your mind from last week that we should go over, that we should talk about?

96
00:10:38,260 --> 00:10:43,090
All right. Well, then we will continue forward. And in this section, this is.

97
00:10:45,310 --> 00:10:49,389
Maybe has less continuity than some of the other little modules we've done here have kind of

98
00:10:49,390 --> 00:10:55,270
stuck or several areas that were painful for me to learn and I wrapped them all into one.

99
00:10:55,930 --> 00:11:01,750
So these are tend to be some data management activities, including how to handle missing data,

100
00:11:02,500 --> 00:11:09,540
including this object type dates, which I've been doing and the concept of for loops.

101
00:11:09,550 --> 00:11:14,590
So these are just going outside. Set your expectations. These are three topics that took me a little while to learn,

102
00:11:14,590 --> 00:11:21,430
and here you'll get an introduction to them and you'll probably continue learning about them going forward through your coding career.

103
00:11:23,890 --> 00:11:30,610
So missing data in our missing data are coded with capital and capital X.

104
00:11:31,060 --> 00:11:36,640
How are you used to having missing data coded in SAS? What's what does that software like missing data code to us?

105
00:11:39,300 --> 00:11:45,270
Single period, right? So you can see that different software have different preferences for how they handle missing data.

106
00:11:45,930 --> 00:11:49,080
So especially when we're importing data from different software,

107
00:11:49,620 --> 00:11:53,790
that's why you use specialized functions that know to convert the single period to an end.

108
00:11:54,360 --> 00:11:57,989
Or we could do that manually. It's very common.

109
00:11:57,990 --> 00:11:59,700
Our health data are incomplete.

110
00:12:00,480 --> 00:12:08,010
Oftentimes I'll have a dinosaur that maybe the participant got too tired, didn't want to fill out that full questionnaire.

111
00:12:08,730 --> 00:12:13,440
Maybe the blood draw. They weren't able to pull enough blood, so they couldn't do all of the laboratory assays.

112
00:12:14,130 --> 00:12:17,220
Maybe the plate failed in the lab. There's all kinds of reasons.

113
00:12:17,220 --> 00:12:23,070
We have missing data all the time. So are would like missing data represented with capital and capital.

114
00:12:23,910 --> 00:12:28,020
So here might be a dataset here with some missing values for age.

115
00:12:31,880 --> 00:12:38,030
You as analysts are going to have a whole bunch of questions as you go through this and you're going to have to make choices.

116
00:12:39,020 --> 00:12:42,530
So how do you want to handle those missing data?

117
00:12:42,620 --> 00:12:45,740
For example, do you want to exclude them from your analysis?

118
00:12:46,250 --> 00:12:50,450
Do you want to try to impute or make an educated guess as to what those values are?

119
00:12:50,720 --> 00:12:57,050
There are a lot of options you can do. You could try to weight people differently based on the completeness of their information.

120
00:12:59,320 --> 00:13:06,400
There is no one exactly right answer to those. This is kind of guided by your specific research situation and your question.

121
00:13:06,670 --> 00:13:14,079
And some of the questions that help guide my decision when I'm doing that is I try to ask some of these questions.

122
00:13:14,080 --> 00:13:20,470
So do the participants who have missing data. Do they differ in any kind of demographic way from the people who don't?

123
00:13:21,220 --> 00:13:29,620
Sometimes I see the participants with missing data maybe have been from lower income groups

124
00:13:29,620 --> 00:13:33,670
because it was harder for them to come back for the second visit or something like this.

125
00:13:34,300 --> 00:13:34,959
So we want to know,

126
00:13:34,960 --> 00:13:42,430
are there systematic or structural or demographic shifts between the people with complete data and the people without complete data?

127
00:13:42,610 --> 00:13:50,080
Whereas if we make a choice to exclude the incomplete data cases, are we going to have a different group of participants in our study?

128
00:13:51,860 --> 00:13:57,140
So sometimes I have to drop participants who are missing values. These are really key covariates that I can't do without.

129
00:13:57,560 --> 00:14:00,790
Other times I impute missing values. Those are packages for this.

130
00:14:01,550 --> 00:14:07,940
My fear called mice for missing, uh, missing data imputation.

131
00:14:08,810 --> 00:14:11,910
Or we can use values that allow for missing values.

132
00:14:12,100 --> 00:14:22,530
So there's different types of approaches. The presence of missing values interrupts some functions.

133
00:14:24,840 --> 00:14:33,900
For example, if you're trying to calculate an average of a bunch of numbers, if there are things that are not numbers in there,

134
00:14:33,960 --> 00:14:37,680
you can't you can't calculate that you need numbers to be able to calculate some things.

135
00:14:39,050 --> 00:14:43,370
Some of the functions by default will throw out missing data and keep going forward.

136
00:14:43,670 --> 00:14:47,510
Others will throw up a red flag and say, I can't do anything. There's some missing data here.

137
00:14:47,750 --> 00:14:53,900
Anybody have an idea why there might be differences in how packages or functions handle missing data?

138
00:14:54,140 --> 00:14:58,040
Why isn't there kind of a uniform procedure throughout our.

139
00:15:00,890 --> 00:15:05,900
Yes. Because different people make different packages and they have different preferences.

140
00:15:06,170 --> 00:15:09,829
Exactly. Different people have written the packages. Different people have written the functions.

141
00:15:09,830 --> 00:15:14,630
They might have different preferences just like you all might have different preferences for how you want to handle and do.

142
00:15:16,370 --> 00:15:24,320
So some of the options that you'll find when we look up packages in the future, some people will.

143
00:15:25,480 --> 00:15:30,670
Right there are option to be called and I got our remains remove in our.

144
00:15:30,880 --> 00:15:34,840
So this is sanctioned we remove missing data. This is truth.

145
00:15:34,840 --> 00:15:39,249
I mean, yes, we're going to remove remove the missing data, throw it out and keep going.

146
00:15:39,250 --> 00:15:45,460
Calculate it this once and I got on it that says omit the missing data and keep going.

147
00:15:46,060 --> 00:15:52,060
Or somebody was like an optimist wrote this one that says Use equals complete meaning, only use the complete data.

148
00:15:52,270 --> 00:15:59,080
So these are three equivalent statements and we find each package will only use one of them.

149
00:16:01,240 --> 00:16:09,190
So they're function specific and identical. And we have to look up in the help viewer, which is in use for any given package.

150
00:16:12,460 --> 00:16:18,340
So we've talked about why many different functions use different notations for the same thing because they're written by different authors.

151
00:16:18,340 --> 00:16:21,790
People have different preferences, so we just have to get in the habit of looking at us.

152
00:16:25,050 --> 00:16:27,330
Often times I want to check whether there's missing data.

153
00:16:27,810 --> 00:16:34,560
So to do that, I'll ask our questions and there's a whole number of functions where you could just put is in the front of it.

154
00:16:34,800 --> 00:16:39,540
And that's like asking R a question here. I'm saying, is there any missing in this object?

155
00:16:40,110 --> 00:16:44,580
And it'll give me a series of true and false as if they're missing or not.

156
00:16:45,840 --> 00:16:50,520
So if there's the presence of any truth, then we'll know there's some missing in there.

157
00:16:52,800 --> 00:16:56,610
You can also pair it with the operator, which is the exclamation point.

158
00:16:56,610 --> 00:16:59,810
So this is essentially asking is not missing if you need to.

159
00:17:03,010 --> 00:17:09,640
If you make the analytic decision that, okay, this was a really important variable, it's our main exposure variable.

160
00:17:09,820 --> 00:17:15,060
We can't go forward with any missing data. And there you can't impute missing for your primary exposure.

161
00:17:15,640 --> 00:17:18,190
So you might need to drop people who are missing data,

162
00:17:18,790 --> 00:17:26,920
in which case we can pipe the data set in to the drop in function and then we list whatever variables we want to drop missing on.

163
00:17:30,800 --> 00:17:35,810
No. Assign that as a new object that will have those missing values removed.

164
00:17:39,580 --> 00:17:45,010
Any questions about missing data? Well, get in the code and we'll practice this ourselves.

165
00:17:50,040 --> 00:17:54,000
Yeah. This is one of the topics I spent a lot of time on in that data management phase.

166
00:17:57,080 --> 00:17:59,990
Another topic that was a little tricky for me. Maybe because my.

167
00:18:01,110 --> 00:18:06,690
Data don't often have dates on it, so it doesn't come up that often and have to reteach myself every time it comes up.

168
00:18:07,350 --> 00:18:13,079
But this has to do with data objects. So we talked about a bunch of different object types in the beginning of class.

169
00:18:13,080 --> 00:18:21,030
So a vector could be numeric, a vector could be factor, could be character, it could be logical or it could be a date.

170
00:18:21,810 --> 00:18:26,190
So these are data objects. So you might have a vector of dates in your dataset.

171
00:18:26,580 --> 00:18:33,540
And the way R handles this is it starts it picks a date that it wants to be data zero.

172
00:18:34,050 --> 00:18:37,170
For some reason it picked January 1st, 1970.

173
00:18:37,170 --> 00:18:44,370
I have no idea why R did not exist. Then just pick this day as day zero and then it counts.

174
00:18:45,000 --> 00:18:52,460
How many days since then? So essentially stores dates as count information, plus or minus the stick.

175
00:18:56,990 --> 00:19:03,390
Could anyone think, why might we have a negative date? Prior to 1970.

176
00:19:03,480 --> 00:19:09,780
Exactly. So positive dates will be like anything in the 2000 and negative dates might be something in the 1800s.

177
00:19:14,610 --> 00:19:22,920
The default format is once the information has a four digit year, two digit month and a two digit day.

178
00:19:22,930 --> 00:19:25,980
So something like this. That's the default format.

179
00:19:26,220 --> 00:19:31,920
We'll see if we can convert it between those because you might have collected the data in a different format,

180
00:19:32,190 --> 00:19:39,360
might have de mandir or whatever you need, but this will be what R is expecting for the default.

181
00:19:42,330 --> 00:19:49,470
And so the way in which we change those formats is with percent sign in front of each of these characters.

182
00:19:49,500 --> 00:19:54,000
So if we want to do a four digit year, we would do percent capital Y.

183
00:19:56,310 --> 00:20:00,270
And so that default is capitalized. Percent percent.

184
00:20:02,510 --> 00:20:09,910
And we can flip it around. Like in the United States, there might be comments a few months back slash date back to last year.

185
00:20:09,920 --> 00:20:13,280
So you can convert in between these things by changing the formats.

186
00:20:16,710 --> 00:20:26,300
There's many other options in here as well. You may want to record the date and the time that you're working on the project.

187
00:20:26,310 --> 00:20:32,160
You may notice in the in the header of all of our quarto marked down documents.

188
00:20:32,910 --> 00:20:41,700
I have it record the system date so that every time we render the document it's capturing the date that you ran it on.

189
00:20:42,000 --> 00:20:47,790
So you don't have to remember to update that field. This will do it automatically for you to grab.

190
00:20:47,800 --> 00:20:51,959
What's today's date? Sometimes I want to capture what's the time?

191
00:20:51,960 --> 00:20:54,960
I'm starting a function. If I'm working on something that's.

192
00:20:56,160 --> 00:21:02,460
Computationally massive. I might record the time and do the calculations and record the time again.

193
00:21:02,910 --> 00:21:11,190
So I have a sense of how long did that take me to run? So next time I know how much time to budget, I'm on the high performance computing cluster,

194
00:21:11,430 --> 00:21:17,760
but so these are functions you can include in your code to record the day or the time at which you're working on it.

195
00:21:22,470 --> 00:21:29,970
We can also use this epidemiologically, because typically we'll ask our participants at their baseline visit, What's your birthday?

196
00:21:31,290 --> 00:21:34,379
Then we'll ask. Then we'll record at their follow up visit.

197
00:21:34,380 --> 00:21:42,570
What's today's date so we can calculate their age at today's visit based on the difference between their birthday and today's date.

198
00:21:43,500 --> 00:21:49,710
So we can capture this type of information and then do some arithmetic on these date values.

199
00:21:50,250 --> 00:21:59,370
So, for example, I'm taking today's date minus my participant's birthday divided by three, 65 and a quarter to account for a leap year.

200
00:22:03,400 --> 00:22:09,090
Questions about deaths. These are one of those things I kind of let slip out of my head until I need it in the moment.

201
00:22:09,090 --> 00:22:13,960
And then I go look it up. Yeah.

202
00:22:14,290 --> 00:22:19,150
And I ever saw these characters. Like instead of a number?

203
00:22:19,630 --> 00:22:28,810
Yeah. Usually I want to convert it from a character into a date pretty quickly because, ah, if it's character that it's just those letter expressions.

204
00:22:29,080 --> 00:22:34,420
It's not the, the like numeric value relative to 1970 as not being captured.

205
00:22:34,990 --> 00:22:38,710
So if the values coming in as character like there's a.

206
00:22:39,990 --> 00:22:43,890
A column where people write all the months that like January, February, March.

207
00:22:44,490 --> 00:22:47,970
I usually want to convert that to a date object pretty quickly.

208
00:22:48,120 --> 00:22:53,370
Or if somebody has a date column, that's like numbers like 2714,

209
00:22:53,580 --> 00:23:00,330
I usually want to convert that to a date object very quickly so that I can do these kind of calculations on it.

210
00:23:01,310 --> 00:23:05,270
So that would be if you're working with this type of information.

211
00:23:05,810 --> 00:23:09,200
Most typically it comes in either character or numeric form,

212
00:23:09,380 --> 00:23:14,090
and you want to spend some time converting it to a data object so that you can do the preparations you need.

213
00:23:23,630 --> 00:23:28,940
And I know this will come up for some of you for I'lI project. I've worked I've worked like one on one with folks who are doing.

214
00:23:32,090 --> 00:23:42,550
Like a time series. And also I've seen a few like infectious disease projects where there's weekly serology data or flu data or something like that.

215
00:23:42,560 --> 00:23:48,020
Sometimes you all can have the components can be a major focus of your.

216
00:23:48,020 --> 00:23:54,400
I am happy to have you help you with that as well. Okay.

217
00:23:56,060 --> 00:24:01,250
The third and last me a sticky topic that I wanted to cluster in here is this concept of a four loop.

218
00:24:02,320 --> 00:24:10,180
This might be useful for you in your workplace in the future if you ever find yourself feeling robotic.

219
00:24:10,840 --> 00:24:19,600
If you find yourself where there's some kind of task that you have to do over and over again, and you just have to change one thing every time.

220
00:24:21,080 --> 00:24:23,780
Sometimes I don't mind those kind of monotonous ads for a little while,

221
00:24:23,780 --> 00:24:29,899
but after a while they can get pretty boring and get time consuming and it can be error prone for me,

222
00:24:29,900 --> 00:24:33,530
so I might forget to switch that one number each time.

223
00:24:34,160 --> 00:24:42,800
So for loops are useful strategy for you. If you have something relatively repetitive to perform, it'll keep you from having errors.

224
00:24:43,130 --> 00:24:50,720
So take your time to set up. Once it's set up, it will save you time in the long run and then you can kind of relax a little bit.

225
00:24:55,520 --> 00:25:00,469
Here's the basic structure. And before you see, you might not want to master it right now,

226
00:25:00,470 --> 00:25:08,090
but you'll be aware that this is a concept that you can return to in your job next summer if if you're finding your work to be repetitive.

227
00:25:08,870 --> 00:25:14,580
All right. So it's going to follow this basic structure starts with the word four.

228
00:25:14,750 --> 00:25:20,470
That's helpful. That's what we named it. And it's going to work in this way.

229
00:25:20,480 --> 00:25:28,100
So within these rounded parentheses, it's going to save for some value in the sequence sequences.

230
00:25:30,480 --> 00:25:32,130
Something that has a beginning and an end.

231
00:25:32,260 --> 00:25:40,020
Usually a sequence starts with one number and ends with another number, but it could be like letters stretching from A to Z.

232
00:25:40,500 --> 00:25:46,470
But most typically this might be like 1 to 20. This is essentially how many times you want to perform the operation.

233
00:25:48,500 --> 00:25:51,500
Here is what the actual activity is that you want to repeat.

234
00:25:52,100 --> 00:25:55,740
So within the curly brackets, there's whatever this statement is here.

235
00:25:55,760 --> 00:25:59,660
This is what you customize. This is what you want to do over and over again.

236
00:26:00,050 --> 00:26:05,240
And up here is setting up how many times you want to do it. So this is what do you want repeated?

237
00:26:05,810 --> 00:26:13,240
And this is how many times do you want to repeat it? And essentially the for loop is going to go like this.

238
00:26:13,250 --> 00:26:17,600
So it's going to once you run it, it's going to think for each item in the sequence.

239
00:26:17,600 --> 00:26:23,089
Am I at the end of the sequence yet? If you say no, it's going to go to that statement.

240
00:26:23,090 --> 00:26:28,430
The body of the four live and I get to be going against it. Am I at the end of the sequence now?

241
00:26:28,430 --> 00:26:32,720
I'm going to do the same thing again at the end of the sequence. Now I'm going to do the same again.

242
00:26:32,900 --> 00:26:37,400
So it'll keep repeating here all the way until I get to the end of the sequence.

243
00:26:37,790 --> 00:26:45,300
When you're at the end of the sequence, it'll. So in that way you could get it to repeat something for you as many times as you need it to.

244
00:26:48,960 --> 00:26:56,600
Here is a for example, just to show you some kind of structure here.

245
00:26:57,240 --> 00:27:00,250
So. For some value.

246
00:27:01,060 --> 00:27:07,930
I chose lowercase I. This is kind of a convention. I have no idea why people choose lowercase I, but you can put anything in here you could.

247
00:27:08,230 --> 00:27:15,639
Sometimes I put the name of my cat here so you could say for Bruno and this sequence is here.

248
00:27:15,640 --> 00:27:19,870
This is how many times you want to do it. So I want to do it from 1 to 10 times.

249
00:27:21,140 --> 00:27:29,960
And what do I want to do? I want to print. And this means every time it finds this value, it's going to substitute something from the sequence.

250
00:27:30,970 --> 00:27:34,600
So I was going to look for this. I is going to replace it with a one.

251
00:27:35,380 --> 00:27:38,610
So we print one square. That's the first output.

252
00:27:38,620 --> 00:27:46,790
One square. Then it'll go through the loop again and I'll put the second value in a sequence or two so it'll print to the square.

253
00:27:47,120 --> 00:27:53,330
So that's the value of four. And I'll go through and I'll take the third value in the sequence three square.

254
00:27:54,230 --> 00:27:59,900
Okay, so we get all the way to the end and this way we present, we printed one through ten squared.

255
00:28:00,380 --> 00:28:05,540
So instead of having to type those out, one by one is able to do that calculation over and over again.

256
00:28:05,750 --> 00:28:09,709
So if you find a situation like this where you have some kind of calculation

257
00:28:09,710 --> 00:28:14,530
and all you have to do is update one number for loop might be good for you.

258
00:28:16,560 --> 00:28:21,240
So it's looking for this law piece. I mean, every time it finds it, it puts on something from a sequence.

259
00:28:24,760 --> 00:28:27,940
So you don't have to do it right now, but you'll be aware that it exists.

260
00:28:28,270 --> 00:28:38,820
If you need this going forward in your workplace. Can anyone to think of a scenario where this has come up for you so far?

261
00:28:38,840 --> 00:28:43,700
Has anyone had a coding demand where this would have come in handy?

262
00:28:44,270 --> 00:28:48,410
So a couple of mods? Yeah. What kind of scenario were you being repetitive?

263
00:28:51,090 --> 00:28:58,350
Lot of variables cause they're missing values at seven or nine or like seven, seven, nine, nine, and so on.

264
00:28:58,530 --> 00:29:07,610
Uh huh. And so I had to in SAS, I used to raise the to make it, make it all done in one statement, essentially.

265
00:29:07,620 --> 00:29:11,130
That sounds like something. Yeah, that's. That's great.

266
00:29:11,140 --> 00:29:16,680
I'm glad you're pulling the analogy of a raise from SAS. So this concept of repeating an activity is somewhat familiar.

267
00:29:17,340 --> 00:29:20,639
I always wanna be cautious with those. Like for replacing a seven with.

268
00:29:20,640 --> 00:29:29,640
No, because. Invariably if I automate it, I'm going to take some variable action like age and convert all of a sudden something or something.

269
00:29:29,700 --> 00:29:35,639
It's very tricky when survey designers use numbers for missing values.

270
00:29:35,640 --> 00:29:38,340
That's one of my pet peeves for sure. Yeah.

271
00:29:38,400 --> 00:29:45,020
Have other people encountered scenarios where they're like they've had a repetitive task assigned to them or.

272
00:29:46,320 --> 00:29:51,250
Something like this might be helpful. You can turn up.

273
00:29:56,560 --> 00:30:00,070
Sometimes I like to make a graphic of every variable.

274
00:30:00,100 --> 00:30:10,150
I just. I see the distributions of it. I work with methylation, DNA methylation in our genome wide data.

275
00:30:10,420 --> 00:30:16,600
So there might be 800,000 or a couple million sites I want to perform regression on.

276
00:30:17,410 --> 00:30:22,200
There is no way I'm typing out a regression model for each one of those 800,000 positions.

277
00:30:22,210 --> 00:30:25,390
I'll use a loop like this to help me do that.

278
00:30:26,470 --> 00:30:30,580
So depending on your type of research questions, this might be useful in your nature.

279
00:30:35,710 --> 00:30:39,550
So to recap, we're going to designate missing data in our with an I.

280
00:30:40,960 --> 00:30:45,940
Within a function, we can use options to specify how we want missing data handles.

281
00:30:46,750 --> 00:30:50,650
But you, as the analysts, have to make those choices proactively.

282
00:30:51,790 --> 00:30:56,080
Do you want to drop the people with my saying and you want to include them but try to impute it?

283
00:30:56,650 --> 00:31:06,340
This is up to you to make those choices. We can specify a date with this type of function.

284
00:31:06,340 --> 00:31:11,200
We can convert character and numeric information into dates with this type of function.

285
00:31:11,530 --> 00:31:15,040
And if we want to change the format, the percent sign will be there.

286
00:31:16,960 --> 00:31:21,610
And then the lastly for loops are a thing that can be useful if you have a bunch of repetitive actions.

287
00:31:25,030 --> 00:31:28,269
Let's jump into our code and practice it here. So I'm going to click out.

288
00:31:28,270 --> 00:31:31,630
This is the last segment of the Descriptive Statistics Project.

289
00:31:33,670 --> 00:31:47,190
It was wasn't time. All right.

290
00:31:47,990 --> 00:31:53,990
So if you were here last time, you should have a descriptive statistics class project with your username.

291
00:31:54,650 --> 00:31:58,280
If you want, you can grab it along with my instructor when I click copy to get your job.

292
00:31:58,910 --> 00:32:18,200
But I'm going to reenter this one from last class. All right.

293
00:32:22,310 --> 00:32:36,550
So. Just zoom down sufficiently for folks in the back six.

294
00:32:37,640 --> 00:32:42,080
All right, then I'm going to scroll down to.

295
00:32:47,610 --> 00:32:53,280
This. All right. For me, it's 1 to 97.

296
00:32:53,290 --> 00:32:56,530
It might be a different one for you based on how many notes you've been taking.

297
00:32:57,190 --> 00:33:00,490
But on the outline, this is going to be the one all about missing data.

298
00:33:01,950 --> 00:33:07,439
I. All right.

299
00:33:07,440 --> 00:33:11,580
So our research question that we're going to be working through in this class is going to be all about Ion.

300
00:33:11,670 --> 00:33:18,210
We're going to want to see what are a risk factors or what are exposures associated with differences in iron.

301
00:33:19,140 --> 00:33:34,469
So we're going to use this iron measure in things. So first, before we before we even get started, I want to ask, what are the dimensions of this?

302
00:33:34,470 --> 00:33:42,690
So what's what's the extent of our problems? So I'm going to put my cursor anywhere in here, hit control, enter and ask it out here.

303
00:33:42,710 --> 00:33:48,050
So with our enhanced data that currently has 9000 people in it.

304
00:33:49,490 --> 00:33:53,630
How many people have complete ion measure? What do you see in the output from that?

305
00:33:53,660 --> 00:33:57,350
What are the dimensions of the complete ion dataset?

306
00:34:06,010 --> 00:34:10,090
When I'm actually in the dimensions of a dataframe and it gives me two numbers.

307
00:34:10,510 --> 00:34:15,579
Which one comes first? The rows are the columns. The Royals come first.

308
00:34:15,580 --> 00:34:24,190
So this is saying that there's 5922 rows with complete iron data and those same 27 columns.

309
00:34:24,570 --> 00:34:34,510
Okay. So if we're planning ahead to drop people with missing iron our data, that would go from 9200 people all the way down to 5900.

310
00:34:34,510 --> 00:34:41,350
So that's a pretty big drop just to get to people with our primary variable interest.

311
00:34:42,850 --> 00:34:48,500
What if we made a different choice? What if we consider dropping people who had.

312
00:34:50,050 --> 00:34:55,720
Complete data on every variable. So here I'm saying I'm not putting any variable in the drop.

313
00:34:55,730 --> 00:35:00,100
And so that means by default, I want every variable to be complete.

314
00:35:00,400 --> 00:35:05,260
So if we run this code, this should tell us how many people have complete information on every variable.

315
00:35:07,900 --> 00:35:11,200
Well, what do you see there? Nobody.

316
00:35:11,200 --> 00:35:18,100
Nobody has complete data on every variable. So we have to pick and choose which variables are most important to us.

317
00:35:18,880 --> 00:35:22,530
Which variables? We want to make sure we have complete data.

318
00:35:23,640 --> 00:35:27,690
We can check and see what's the summary? Which variables have the most missing?

319
00:35:29,610 --> 00:35:36,600
So before we are running the summary function on individual variables where I ran the summary function on the entire data set,

320
00:35:36,900 --> 00:35:40,620
so you can see it's giving us information, not everybody, every variable.

321
00:35:43,540 --> 00:35:46,750
In these cases, these first variables, there is no.

322
00:35:46,760 --> 00:35:52,540
And what's that? So that means there's no missing. But when we get down to here, we see there are some mistakes.

323
00:35:53,050 --> 00:35:59,080
This poverty income ratio variable has an I say this education variable has missing.

324
00:36:04,030 --> 00:36:10,239
Yeah. All kinds of variables have missing some of our cell composition variables.

325
00:36:10,240 --> 00:36:13,910
Having missing some of our environmental exposures are met.

326
00:36:13,930 --> 00:36:21,790
So missing gains all over the place, even for some of these like major datasets that a lot of people have put resources in to.

327
00:36:24,580 --> 00:36:29,290
So this is going to come up for us no matter what we choose. So we have to make some make some decisions.

328
00:36:31,300 --> 00:36:35,350
Women are variable. We can check how it handles that.

329
00:36:35,360 --> 00:36:39,160
So we saw if we were on the summary function, just on the iron data.

330
00:36:40,470 --> 00:36:46,200
We see that this function primary function precedes on gives us all kinds of values

331
00:36:46,200 --> 00:36:51,390
with missing whatever we try to mean function with missing data when you get.

332
00:36:58,180 --> 00:37:06,520
Yeah. Yeah, we noticed we get a value of an X so it's missing.

333
00:37:06,560 --> 00:37:11,530
Doesn't throw us an error, but it tells us the value is not a number, the values missing.

334
00:37:12,040 --> 00:37:20,110
How do we find out the issue? What are you going to do if you throw a function like this and you get an output like this?

335
00:37:20,590 --> 00:37:24,010
Walk me through it. What are some steps you're going to take to try to troubleshoot that?

336
00:37:30,900 --> 00:37:41,740
Where are we going to look for help? My favorite place to go is the help yourself.

337
00:37:42,490 --> 00:37:50,570
And what am I going to put in to help your. Should I look up?

338
00:37:53,740 --> 00:37:58,660
Yeah. I want to look up the function. So I'll look up the function that had some trouble.

339
00:37:58,660 --> 00:38:02,520
Look up the mean function. And what do I see here?

340
00:38:02,540 --> 00:38:06,440
The default for the main function is now that RAM equals false.

341
00:38:06,590 --> 00:38:10,630
What does that mean in actual human words? What does RAM equals false?

342
00:38:10,640 --> 00:38:16,750
What's the main function doing with missing data here? It's not removing them.

343
00:38:16,750 --> 00:38:22,719
So it's keeping the missing data in there and it's realizing it can't do a calculation on missing data.

344
00:38:22,720 --> 00:38:26,620
So it's throwing a missing value. So how do we flip this?

345
00:38:26,650 --> 00:38:29,920
How do we tell it that we do want it to temporarily remove missing?

346
00:38:29,920 --> 00:38:34,450
So the missing it'll stay in the data set, but just ignore it for the purposes of this function.

347
00:38:40,140 --> 00:38:43,940
Yeah. Yeah, we can flip that.

348
00:38:43,950 --> 00:38:48,359
So if we don't put anything, it's going to go with default. But if we want, we can flip it.

349
00:38:48,360 --> 00:38:57,450
So we could go here and say Equal strip, so try a different option and then we get the same value that popped out in the summary function.

350
00:38:59,880 --> 00:39:05,700
We get. Instead of doing that, we could omit the missing before we run our main function.

351
00:39:05,730 --> 00:39:11,150
These are equivalent statements. Here's another function that we're going to use going forward.

352
00:39:11,450 --> 00:39:17,389
I'm going to try the correlation function. What what shape of variables that we run correlation on.

353
00:39:17,390 --> 00:39:21,310
Is this something you're familiar with from your bio classes? Yeah.

354
00:39:21,320 --> 00:39:25,820
Nice. Okay, so what what? What are the two variable types that you run correlation on?

355
00:39:28,010 --> 00:39:33,230
Are they in fact, are they numeric? What are they? Yeah.

356
00:39:33,680 --> 00:39:40,370
Two numeric variables. So I'm running at age and I'm running on iron, which are two numeric variables.

357
00:39:40,370 --> 00:39:44,300
And what happens if we run the core function on it. What we got and I again.

358
00:39:45,270 --> 00:39:50,260
So what are we going to do to try to overcome that? And to them.

359
00:39:53,640 --> 00:40:01,240
What do we need to look up? Yeah.

360
00:40:01,240 --> 00:40:13,490
Let's look up the core function of health for your. You see, the core function is for calculating correlations.

361
00:40:15,720 --> 00:40:24,680
But. The default method is Pearson and the default method is to use equals everything.

362
00:40:25,580 --> 00:40:32,850
Use equals everything means everything, even including the missing. So if we want to modify this use equals everything.

363
00:40:32,850 --> 00:40:37,650
We got to scroll down to the argument use. And see what are the options.

364
00:40:38,010 --> 00:40:42,670
So what can we change used to? We're going to change use to all observations.

365
00:40:42,690 --> 00:40:48,120
That sounds like the same thing to me as everything. We're going to change it to complete observations.

366
00:40:48,120 --> 00:40:54,640
Pairwise complete observations. We've got some. There's a couple choices on here that I think would produce the same results.

367
00:40:59,950 --> 00:41:05,980
But then we could do some kind of adjustment to those default settings and get a correlation calculator.

368
00:41:06,610 --> 00:41:12,400
So this would say these two variables have a Pearson correlation coefficient of -4.01.

369
00:41:12,640 --> 00:41:17,080
So very, very low. Close to zero correlation.

370
00:41:18,880 --> 00:41:25,720
All right. So again, that habit, if you expect the value, you run a function, you don't get that value.

371
00:41:26,380 --> 00:41:32,200
Check, check both of these things check to see look that function up in the help viewer.

372
00:41:32,920 --> 00:41:35,770
Check your variable to see if there's any missing.

373
00:41:36,010 --> 00:41:41,170
You know, these are type of diagnostic checks that you can do whenever you run into these type of situations.

374
00:41:45,860 --> 00:41:50,420
Again, the goal is not to like memorize that this is what we need for the core function.

375
00:41:50,690 --> 00:41:56,000
The goal is to figure out what are some strategies that work for you to look this stuff up on your.

376
00:42:02,540 --> 00:42:19,519
Any other comments about missing? All right.

377
00:42:19,520 --> 00:42:24,650
The more we make our first for loop. And we'll make a couple of these throughout the later part of the class.

378
00:42:27,340 --> 00:42:31,480
Those first start up here. I'm not actually making a loop yet.

379
00:42:32,020 --> 00:42:35,020
This entire thing is a loop right here. Right here.

380
00:42:35,020 --> 00:42:38,470
I'm kind of setting the stage, making it so the output will be nice for us.

381
00:42:39,940 --> 00:42:44,919
So first, I'm selecting part of the enhanced data set.

382
00:42:44,920 --> 00:42:48,850
I'm not selecting all of it. I'm selecting part of it.

383
00:42:48,850 --> 00:42:58,510
I'm selecting columns. So we now select is a function that grabs columns and filter is a function that grabs rows.

384
00:42:59,260 --> 00:43:03,580
Here I'm saying select columns if that column is numeric.

385
00:43:04,670 --> 00:43:12,110
So I'm pulling out just the numeric ones because I want to run a function on the numeric ones and I'm assigning that as a new project.

386
00:43:13,860 --> 00:43:20,340
I want to make an output data frame. How big is the output data frame?

387
00:43:21,780 --> 00:43:32,140
I'm setting this output data frame. So you have the number of rows that that male dataset has and to have three columns.

388
00:43:32,290 --> 00:43:36,549
So what does that look like? Here we go.

389
00:43:36,550 --> 00:43:40,060
We've got an empty data set. It's got 19 rows and three columns.

390
00:43:43,700 --> 00:43:51,979
I'm going to give out some labels. So I want the column names of that output data set to be variable, meaning standard deviation.

391
00:43:51,980 --> 00:43:57,770
You might be able to see where this is going. I'm going to do a four loop to calculate the mean and standard deviation for each variable.

392
00:44:01,020 --> 00:44:07,530
All right. So what does that look like? I took the column names, so we see their names now at the top of the variables.

393
00:44:08,770 --> 00:44:12,340
Again. I haven't started the for loop yet. I'm just setting things up.

394
00:44:13,300 --> 00:44:19,780
And then lastly, I'm going to pull I put some information in the output data set to start.

395
00:44:20,260 --> 00:44:29,970
What rows are columns? Am I putting information in? Connecting back to our first week of class.

396
00:44:31,990 --> 00:44:37,090
So when we see the square brackets, this is talking about positions in the in the dataset.

397
00:44:37,480 --> 00:44:43,450
So now I'm saying look at the positions in the output dataset, but which positions, which rows are columns and how do you know?

398
00:44:54,060 --> 00:45:01,120
Yeah, please. The first column. Does the brackets go through?

399
00:45:01,140 --> 00:45:05,170
Column in the dish. Nothing is ever. Yeah, well.

400
00:45:05,640 --> 00:45:08,970
So we know that our always wants Rose first.

401
00:45:09,300 --> 00:45:16,320
Come second. And we're going to anchor that different distinction between rows and columns based on the comma.

402
00:45:17,250 --> 00:45:22,740
So anything to the left of the commas, typing that rows anything to the right of a comma is talking about columns.

403
00:45:23,860 --> 00:45:27,980
This first column and it's got nothing for us.

404
00:45:28,610 --> 00:45:35,220
So that means by default, it's talking about all of the rules. All right, so here I'm saying you give me the column names there.

405
00:45:39,080 --> 00:45:44,270
And what does this look like? All right. So we've got a data set that was kind of set up for ourselves.

406
00:45:44,870 --> 00:45:48,220
So here's all the variables. And now we have.

407
00:45:49,790 --> 00:45:53,690
An empty dataset. It's got a name that we learn, but it's ready and waiting.

408
00:45:53,720 --> 00:45:56,300
I'm going to use a four to fill in all of these values.

409
00:46:00,040 --> 00:46:08,710
So this kind of this used to be how I would build my univariate and bivariate tables before table summary function existed.

410
00:46:09,430 --> 00:46:13,360
So this was like how I wrote my epidemiology papers.

411
00:46:14,700 --> 00:46:19,320
Maybe like three years ago I was by a series of these four loops to build these types of tables.

412
00:46:22,670 --> 00:46:29,570
Conceptually it's still relevant, but functionally I would definitely use the the function to make it easier.

413
00:46:30,620 --> 00:46:35,130
So here we go. All right. What are we doing now? So now I'm saying we're going to initiate before.

414
00:46:36,080 --> 00:46:41,930
So I'm saying for every time we see a lowercase I. I want you to do something.

415
00:46:41,940 --> 00:46:44,969
And how many times do I want you to do it? I want you to do it.

416
00:46:44,970 --> 00:46:49,250
Between one and however many columns are in that numeric data set.

417
00:46:49,310 --> 00:46:57,480
How many columns are in the numeric dataset? Can anyone tell me? 19.

418
00:46:57,990 --> 00:47:01,920
So I am expecting this for a loop to run 19 times.

419
00:47:02,840 --> 00:47:08,010
Right? So before we even run it, I've got an expectation. I'm expecting this for a loop to run 19 times.

420
00:47:09,530 --> 00:47:14,960
All right. And what's this first rule? What's it going to do, this first class? It's going to put something in the output matrix.

421
00:47:15,200 --> 00:47:18,770
Where is it going to put it? What are the rows and columns right here?

422
00:47:20,980 --> 00:47:25,230
Yes. Second column. And it's going to do it one at a time for each us.

423
00:47:26,200 --> 00:47:33,189
So the first time through the fourth loop, it'll be right one second time through the four a little bit do dual row to row three

424
00:47:33,190 --> 00:47:37,420
and I'll always keep doing it in column to the column to our mean variable column.

425
00:47:38,080 --> 00:47:41,690
So it's going to calculate the meaning of whatever that column is.

426
00:47:42,070 --> 00:47:48,070
We've got set in the option of our M equals. True, and I'm rounding it to two decimal places.

427
00:47:48,760 --> 00:47:55,960
So this is how I would set up my tables to have the right esthetics that I want and tap the right rounding that I wanted.

428
00:47:56,940 --> 00:48:00,840
And that it's also going to put a value somewhere else. Where's it going here?

429
00:48:03,470 --> 00:48:16,180
What role, McCollum, is it going? You start the third column and it's going to be whichever row in terms of the sequence of the loop we're on,

430
00:48:16,610 --> 00:48:24,009
it's going to calculate the standard deviation and it'll do that whatever is within the curly brackets.

431
00:48:24,010 --> 00:48:29,110
And then I'm just running that out, but which will just show us what's what's in that object.

432
00:48:29,170 --> 00:48:34,270
All right. So you can put your cursor anywhere in here and run the whole thing together.

433
00:48:35,360 --> 00:48:40,820
Well, Greg, never mind. Let me highlight the whole thing and run as a section.

434
00:48:42,960 --> 00:48:47,910
And now you can check it out. And what do we see here?

435
00:48:47,940 --> 00:48:53,549
Now we've got a data set called out that has all of our variables,

436
00:48:53,550 --> 00:48:58,020
has all of our means that have been rounded to two digits and has all of our standard deviations.

437
00:48:59,690 --> 00:49:05,000
So this is a way we could do our speed up a repetitive task as opposed to having to run all of these individually.

438
00:49:05,240 --> 00:49:10,340
Right. So conceptually, this might be useful for you if you have to repeat things many times.

439
00:49:15,700 --> 00:49:22,149
My comments about four loops, but that's for me a lot of like trial and error to get comfortable with that.

440
00:49:22,150 --> 00:49:25,600
So please don't put pressure on yourself to have to master that right now.

441
00:49:25,600 --> 00:49:31,230
It's like I feel like at this stage it's like good enough to just be aware that these are a thing and you don't have to be like,

442
00:49:31,240 --> 00:49:37,210
terrified of them because people in the Stack Overflow may suggest this as a solution for you.

443
00:49:37,480 --> 00:49:42,880
So you'll always be familiar with this notation when you see those curly brackets, you know what is going on there.

444
00:49:49,270 --> 00:49:52,720
All right, let's do the last sticky subject I have for you today.

445
00:49:53,170 --> 00:49:56,170
This is date and time objects.

446
00:49:56,950 --> 00:50:03,730
The enhanced status does not have any dates in the publicly available data that's considered personally identifiable.

447
00:50:04,330 --> 00:50:09,120
So I just generated some. Made updates here.

448
00:50:09,240 --> 00:50:17,879
So we'll play around with this. You could also so here are some values for day, month and year.

449
00:50:17,880 --> 00:50:24,900
I just pulled out of the air. You can add some other values that are meaningful to you if you want to include your birthday.

450
00:50:27,510 --> 00:50:30,780
So 12 nine.

451
00:50:33,020 --> 00:50:37,360
Whatever day you would like to follow along with like personalize this a little

452
00:50:37,360 --> 00:50:42,610
bit and then I'm going to make three character vectors with this information.

453
00:50:43,720 --> 00:50:46,780
So right now, this is that question that came earlier in class.

454
00:50:47,440 --> 00:50:52,890
What if these are character expressions so we can see that this is a right now it's not even a number.

455
00:50:52,900 --> 00:50:57,400
These are characters that got quotes around them. These are definitely not dates.

456
00:50:57,410 --> 00:51:02,900
Like what if we asked? A C.R. of this variable we just made.

457
00:51:03,500 --> 00:51:08,510
We can see if we ask the structure of it as a character. So our data has no idea that these are dates yet.

458
00:51:08,510 --> 00:51:15,440
We have to put them together and tell our that it's a date. So the first thing I'd do, I'm just going to piece on next to each other.

459
00:51:15,470 --> 00:51:20,330
Paste must stay here and tell it to be separated by X sloshes.

460
00:51:22,430 --> 00:51:26,330
We can see what that looks like. So it's still a character variable.

461
00:51:27,610 --> 00:51:32,050
But it's starting to kind of look the way in the US we typically write things.

462
00:51:36,850 --> 00:51:44,590
Now let's put it into an actual date. So now we're saying take that character variable and convert it to a date.

463
00:51:44,950 --> 00:51:49,390
Here's the format it's in. And now I'm expecting this to actually be a date object.

464
00:51:55,440 --> 00:51:58,950
Oh, my goodness, it worked. So now for the first time, we have an object.

465
00:51:58,950 --> 00:52:01,950
That's when we do the structure function on it.

466
00:52:01,950 --> 00:52:10,330
It's actually. So our has actually taken everything together and considered it as a date.

467
00:52:11,410 --> 00:52:14,410
We can ask coerce it to be numeric.

468
00:52:14,440 --> 00:52:17,649
So what's the underlying number of those dates? We see.

469
00:52:17,650 --> 00:52:21,400
Oh here's date zero that January 1st, 1970.

470
00:52:22,000 --> 00:52:25,090
There is a negative date because that was before 1970.

471
00:52:25,090 --> 00:52:29,260
And here's some positive dates because those were more recent than 1970.

472
00:52:30,510 --> 00:52:35,620
You can convert between these formats. So here it's using.

473
00:52:36,700 --> 00:52:43,269
From last month notation it's once you get it in an object is pretty seamless to output it in whatever

474
00:52:43,270 --> 00:52:48,520
format your study needs you can look up what was the day of the week that the participant came in?

475
00:52:48,640 --> 00:52:51,850
You can see, okay, I was born on a Thursday. You can see this kind of thing.

476
00:52:52,120 --> 00:52:55,630
Sometimes this is relevant in your EPI study, for example.

477
00:52:57,130 --> 00:53:01,330
Stress hormones increase during the workweek, go back down on the weekend.

478
00:53:01,690 --> 00:53:04,840
So sometimes in our regression models, we want to adjust for day of the week.

479
00:53:05,950 --> 00:53:12,460
Similarly, you might want to adjust for a time of day because other hormones might be higher in the morning or in the evening.

480
00:53:13,000 --> 00:53:19,390
So sometimes we need to account for these types of time related factors.

481
00:53:22,900 --> 00:53:31,390
All right. Let's take let's do that activity of calculating age as of today's date so we can ask for today's date with the system date function.

482
00:53:34,060 --> 00:53:41,230
Today's date is November 16th, and now I'm going to take today's date minus the birthdays as a date,

483
00:53:41,800 --> 00:53:46,600
and figure out how old everybody in our study is relative to today.

484
00:53:48,280 --> 00:53:52,740
This has like extreme amount of. Digits after it.

485
00:53:52,760 --> 00:53:57,770
Typically we round down with your. So now I'm using the truncation function.

486
00:53:57,770 --> 00:54:04,730
It's a version of rounding to bring it down to the most recent whole number and that we can put it all together in one.

487
00:54:07,100 --> 00:54:11,400
So you can see that we started with a character expression variable.

488
00:54:12,300 --> 00:54:20,920
We converted it to a date. These are the underlying numbers of days that are using for calculations.

489
00:54:20,920 --> 00:54:24,370
And then here are the participants ages as of today's date.

490
00:54:25,150 --> 00:54:30,340
So once you get it in one of these formats, we can convert back and forth.

491
00:54:34,540 --> 00:54:37,900
All right. When you're all done, we can click the render button.

492
00:54:42,850 --> 00:54:44,200
What happens when we render.

493
00:54:44,200 --> 00:54:55,060
It's going to run this entire corto markdown document and hold and generate the output that we want so we can see this is running.

494
00:54:56,320 --> 00:54:59,320
It's thinking this is kind of a big one for it.

495
00:54:59,530 --> 00:55:07,060
And now we've created this output document that has all of our code and our output next to it.

496
00:55:09,590 --> 00:55:13,220
You might be able to notice we've got the date calculated up here automatically.

497
00:55:17,190 --> 00:55:25,890
If we scroll back up to the top of the portal marked on this notation, might all of a sudden be relevant to you?

498
00:55:26,340 --> 00:55:33,240
So here I say calculate today's date using our software based on the system date.

499
00:55:33,250 --> 00:55:37,940
So today's date and I'll put it in the format of month they come a year.

500
00:55:37,950 --> 00:55:44,220
So that's how we calculate and in your output get November 16th, 2022.

501
00:55:44,760 --> 00:55:53,090
So I'm using this my knowledge on this date format to automatically make it so my reports have today's date right at the top.

502
00:55:56,890 --> 00:56:01,750
Any comments? Questions. I know those are three challenging topics.

503
00:56:02,040 --> 00:56:11,319
I wanted to wrap them all up together. Let's take a five minute break and we come back.

504
00:56:11,320 --> 00:56:16,630
We'll do graphic. So we'll get into data visualization, which for many folks is.

505
00:56:18,260 --> 00:56:22,010
A welcome transition to some people's favorite part of data analysis.

506
00:56:35,400 --> 00:56:39,660
Editing privileges, please. Now, this will be 5 minutes from now.

507
00:56:55,230 --> 00:57:07,970
The. We have a lot.

508
00:57:16,850 --> 00:57:25,190
I don't think will work, but I'm not sure.

509
00:57:35,280 --> 00:57:47,160
I. Seven.

510
00:57:56,590 --> 00:58:02,740
What is it? What if it is you?

511
00:58:07,880 --> 00:58:12,850
But if you get this far. Yes, yes, yes.

512
00:58:13,610 --> 00:58:18,490
If you want to compare your cases.

513
00:58:20,570 --> 00:58:24,450
Like the word.

514
00:58:28,950 --> 00:58:39,419
Comparing it to the properties this year. Yeah, that's why I said, well, I don't know.

515
00:58:39,420 --> 00:58:43,610
That's what I said because of that. We are looking at this.

516
00:58:43,620 --> 00:58:58,710
This would make sense. But they're not really what we want.

517
00:58:59,470 --> 00:59:10,590
Yeah, yeah, yeah. You get you get to work as a group of people.

518
00:59:13,620 --> 00:59:20,220
But let me tell you, that is an excellent report. And, you know, I love how we get to your work.

519
00:59:21,270 --> 00:59:38,430
Well, that's the thing. You know, I'm going to ace everything. And then he's like, oh, yeah, yeah, yeah, yeah.

520
00:59:39,120 --> 00:59:46,350
So you are doing a lot of things. I don't know.

521
00:59:47,270 --> 00:59:59,400
I got married and we've had a little bit difficult to accept.

522
00:59:59,940 --> 01:00:12,230
Oh, but I guess that. Wonderful work on the part.

523
01:00:15,130 --> 01:00:19,480
So I was like, Oh, but I've never used this.

524
01:00:20,020 --> 01:00:23,730
I only. Okay. All right.

525
01:00:27,250 --> 01:00:34,520
Yeah. Well, let me know how that work. I was supposed to be happy with what I were saying.

526
01:00:35,100 --> 01:00:36,170
How how do you do?

527
01:00:37,270 --> 01:01:12,280
But I'm actually looking at me like I may not like the fact that if I look up and I think of all the work done, we are moving away from that.

528
01:01:12,910 --> 01:01:18,360
So you can still have it, but you have to have an architect.

529
01:01:18,950 --> 01:01:23,079
Yeah. All right. Well, let's see.

530
01:01:23,080 --> 01:01:27,750
I don't really know who and what line.

531
01:01:27,760 --> 01:01:35,040
I would tell you more than that table.

532
01:01:36,890 --> 01:01:41,350
What is the gradient right now?

533
01:01:42,040 --> 01:01:48,500
Yeah, it's okay. What is it about?

534
01:01:49,540 --> 01:01:54,940
Yes, the history of literally whatever.

535
01:01:55,930 --> 01:02:02,670
You have access to the spreadsheet, you should go see trash.

536
01:02:02,740 --> 01:02:09,250
But maybe it is possible. But it's the right thing.

537
01:02:09,250 --> 01:02:21,190
And it's so different from what it should be there because it's actually a big joke.

538
01:02:21,200 --> 01:02:34,000
So we're good. And then I like to see something right outside of it.

539
01:02:34,770 --> 01:02:51,910
Yeah, that's a frustrating. Yeah, yeah, yeah, yeah.

540
01:03:00,080 --> 01:03:04,190
All right. Welcome back. Let's make some beautiful pictures. All right.

541
01:03:04,190 --> 01:03:12,530
So first, we're going to do an introduction to plotting and we'll use a scatterplot as our initial example.

542
01:03:13,130 --> 01:03:15,830
So we'll break down the components of a scatterplot first.

543
01:03:16,070 --> 01:03:23,060
And then I think you'll be able to see in the next unit how these principles can be applied to pretty much every other plot you may.

544
01:03:26,100 --> 01:03:29,320
Before we get started, what are some of your plotting preferences?

545
01:03:29,350 --> 01:03:36,030
So what are some things that you like or value esthetically or content wise in a plot?

546
01:03:36,540 --> 01:03:40,110
Because I think you'll see an AR. Things are endlessly customizable.

547
01:03:40,680 --> 01:03:45,510
So before we get bogged down in code, let's just think on a abstract or esthetic.

548
01:03:45,810 --> 01:03:49,770
What what do you. What works with you when you're trying to communicate?

549
01:03:50,190 --> 01:03:56,270
What do you. What do you like to see in a plot? I think this is not letting me edit or type something.

550
01:04:00,800 --> 01:04:05,600
Yeah. No, just. Well, just do it verbally instead of typing.

551
01:04:06,920 --> 01:04:12,020
So, as I might have anything that I'd like to share, any kind of preference, it's totally fine if we don't agree on this.

552
01:04:12,020 --> 01:04:15,740
There's some element of tastes and preferences in here.

553
01:04:19,590 --> 01:04:24,020
Please. I'm so sorry. Yeah.

554
01:04:24,030 --> 01:04:28,260
What do you like about font size? You like it to be big or small? Just like legible.

555
01:04:28,560 --> 01:04:31,650
Legible. Excellent. That's a great criteria.

556
01:04:31,830 --> 01:04:35,340
Or did you say something else at the font size? Okay, perfect.

557
01:04:35,440 --> 01:04:38,460
Yeah. So you want the font size to be big enough to be legible?

558
01:04:38,850 --> 01:04:42,950
Excellent. What else are folks concerned about? Yeah.

559
01:04:43,160 --> 01:04:47,960
Color coding. What do you like about photos? Yeah, it distinguishes.

560
01:04:50,880 --> 01:04:56,460
I assume you want the contrast to be strong so you can tell the difference between I want to be very similar.

561
01:04:56,730 --> 01:05:05,010
We'll see how exactly the various people have their differences and people's vision in terms of what they get, how they can distinguish colors.

562
01:05:05,010 --> 01:05:10,740
And we'll see some strategies for being inclusive with that. I'm thinking back to the font size thing too.

563
01:05:10,980 --> 01:05:15,600
That can even change based on your format.

564
01:05:15,600 --> 01:05:19,050
You're presenting it too. So an acceptable font size.

565
01:05:19,230 --> 01:05:26,790
And some of these are markdown reports were rendered like in your homework document and acceptable font size might be

566
01:05:26,790 --> 01:05:32,910
completely different than the font size you need for your post or your printing for the ILC presentations on Friday.

567
01:05:33,540 --> 01:05:40,520
So the there's no one like standard font size that'll be useful depending on who you're presenting it to.

568
01:05:40,530 --> 01:05:43,880
That might change over time as well, what format you're presenting.

569
01:05:44,130 --> 01:05:48,430
All right. So we've got font size, we've got color that we want a lot of contrast there.

570
01:05:48,450 --> 01:05:50,520
What else do folks like in the plot?

571
01:06:00,620 --> 01:06:09,770
What kind of light grabs your attention when you're looking at a headline image or something, social media or something showcasing this new design?

572
01:06:10,820 --> 01:06:24,020
Yeah, labels. Labels work. What what features do you like in labels usually that are larger than, like, the markings on the axes?

573
01:06:24,410 --> 01:06:28,520
Yeah, I guess they stand out a little more. Yeah.

574
01:06:28,520 --> 01:06:36,349
So you size, you complete. I also personally like on the label because you'll see that by default the labels are going to be like the variable names,

575
01:06:36,350 --> 01:06:41,450
which in some cases can be kind of insider knowledge to know what is.

576
01:06:42,680 --> 01:06:46,030
What is that? I am the F on p pr variable. Right.

577
01:06:46,040 --> 01:06:50,149
Like you have to be only other analysts. So that data center going to know what that is.

578
01:06:50,150 --> 01:06:53,719
So oftentimes I like the labels to be written out in full.

579
01:06:53,720 --> 01:06:58,820
I like them to have units on them so that they can be approachable, maybe to a wider audience.

580
01:06:59,510 --> 01:07:08,030
But that may vary depending on who my audience is. If I'm just doing a quick plot for me and my buddy on the analytic team, I might not take the time.

581
01:07:08,030 --> 01:07:09,320
I had trouble to the full.

582
01:07:09,690 --> 01:07:18,379
So a lot of context dependance with how much effort I want to put into some of these other preferences, any other preferences folks have.

583
01:07:18,380 --> 01:07:27,500
What else do you like about what's. But Joy talks with a lot of stuff.

584
01:07:27,500 --> 01:07:30,260
Do you like clogs that are more simple esthetically?

585
01:07:33,190 --> 01:07:41,020
Yeah, I think civil is better generally because when you have a lot of things going on, it makes your graph interpretable.

586
01:07:41,530 --> 01:07:49,330
And so I usually like the more simple, streamlined kind of approach to the whole set of information.

587
01:07:49,660 --> 01:07:55,239
So try to like strip down a lot of like the background or non informative pieces so you can

588
01:07:55,240 --> 01:07:59,800
focus on just the or have your audience focus on just the point you want them to look at.

589
01:08:04,600 --> 01:08:07,940
And so there might be a whole bunch of different choices you make along the way.

590
01:08:08,030 --> 01:08:15,409
Some people have preferences with background colors, people have preferences with legends, all kinds of things.

591
01:08:15,410 --> 01:08:22,090
And you'll see that. All of these issues and more you can customize on our end.

592
01:08:22,090 --> 01:08:28,580
So it's up to you to. Prioritize how much time to spend on each one of these plots.

593
01:08:28,590 --> 01:08:35,159
If it's just for internal purposes, you might not go down a lot of these esthetics add ons,

594
01:08:35,160 --> 01:08:42,780
but if it's for a showcase and external facing clock, it might spend quite a bit of time optimizing this plot.

595
01:08:42,810 --> 01:08:50,550
I mean, I've spent an entire workday before just on one plot, so you can really scale to what your needs are in that setting.

596
01:08:52,450 --> 01:08:55,090
So here are some of the things that are helpful for me.

597
01:08:55,120 --> 01:09:02,020
The first one is the type of plot you can be quite strategic in picking what type of plot is appropriate for that scenario.

598
01:09:02,920 --> 01:09:07,210
Color is something that is I really gravitate to.

599
01:09:07,930 --> 01:09:11,500
Actually, these labels are super helpful for me, the size of everything.

600
01:09:13,150 --> 01:09:16,059
The older I get, the bigger I. I want everything to be.

601
01:09:16,060 --> 01:09:22,360
For me, I like legend labels, all these kinds of things, and we'll see how to customize each of these aspects and more.

602
01:09:24,470 --> 01:09:35,150
So in this class we're going to code and code plots and a style of plotting affiliated with a tiny verse called juju plot to please know that there is

603
01:09:35,150 --> 01:09:38,690
another style of coding called base our coding and that is equally valid to

604
01:09:38,690 --> 01:09:42,649
plot in and you are welcome to plot on that if that is your preference here,

605
01:09:42,650 --> 01:09:51,350
I'm just for the sake of time, I'm going to introduce this one style of plotting that I think is very flexible to a lot of the different plot types.

606
01:09:51,350 --> 01:09:58,100
We tend to make an epidemiology, so this style of plotting is going to work with something called a grammar of graphics.

607
01:09:58,100 --> 01:10:00,410
That's what the DJ stands for and you do plots.

608
01:10:01,370 --> 01:10:08,900
So there's going to be a couple elements that are required in every plot we're going to make with this vocabulary of graphics.

609
01:10:09,320 --> 01:10:12,649
The first one we have to give it what's a data set we want to visualize.

610
01:10:12,650 --> 01:10:16,400
That makes sense, right? We have to tell it. What object do we want to perform this graphic on?

611
01:10:19,550 --> 01:10:22,880
The next one, we have to decide what are the esthetics we want to map to.

612
01:10:23,930 --> 01:10:30,080
So this is essentially how do we take the data set and attach it to different aspects of the graph?

613
01:10:30,740 --> 01:10:36,830
So like which aspect of the dataset do we want mapped esthetically to the x axis?

614
01:10:37,100 --> 01:10:42,740
Which aspect of the dataset? Essentially, which column of the dataset do we want mapped to the Y axis?

615
01:10:43,580 --> 01:10:50,640
We can even have a third one. Like which column of the dataset do we want mapped to the color of the points on the dataset?

616
01:10:50,740 --> 01:10:57,140
Okay, so there could be multiple many, many variables mapped to the dataset.

617
01:10:57,470 --> 01:11:02,570
So we specify the dataset that we specify the esthetics we want the dataset map to.

618
01:11:05,070 --> 01:11:09,450
Then we specify the geometry. So this is essentially the type of plot.

619
01:11:09,630 --> 01:11:13,380
Do we want the data plotted in a scatterplot?

620
01:11:13,860 --> 01:11:17,790
Do you want the data plotted in a histogram doing a lot of plotting and a box plot?

621
01:11:18,540 --> 01:11:23,129
So these are the three things that are required of all plots.

622
01:11:23,130 --> 01:11:30,930
So we need to do the geometry, which is the type of plot, the data set, which says What object are we working with and the esthetics?

623
01:11:30,930 --> 01:11:35,190
Does that tell it what part of the dataset to put in which part of the plot?

624
01:11:35,340 --> 01:11:42,630
So with these three acquired components, we can make all kinds of graphics with the default settings.

625
01:11:42,640 --> 01:11:47,700
No problem. If we want to get fancy.

626
01:11:47,730 --> 01:11:50,910
So like if I'm just doing an internal plot,

627
01:11:50,910 --> 01:11:57,630
I might just work with these three required elements if I want to get fancy or if I want to do something for an outside audience,

628
01:11:57,930 --> 01:12:00,540
I might spend a lot of time with these optional components.

629
01:12:02,660 --> 01:12:10,040
So this includes I could layer on statistics so I could add a bunch of P values or effect estimates or something to the plot.

630
01:12:10,040 --> 01:12:20,150
So the stat options are for adding or calculating, inputting p values or other statistics on the plot scales.

631
01:12:21,320 --> 01:12:27,860
This is how we modify their color scales, their shape scales, their size.

632
01:12:27,860 --> 01:12:37,910
Scousers Legend scales. These are a whole bunch of ways to adjust the range of values for each of these esthetic choices.

633
01:12:38,630 --> 01:12:45,400
Visual choices for events. This is the space where plotting aren't you typically for this?

634
01:12:45,410 --> 01:12:50,450
This is Cartesian coordinates, but this is if you are want to make maps,

635
01:12:50,450 --> 01:12:57,200
if you're getting into like spatial epidemiology, there's all kinds of different coordinates you could map on to here.

636
01:12:58,630 --> 01:13:03,350
I think this is anything related to not the data.

637
01:13:03,350 --> 01:13:07,520
This is like purely based on visual preferences.

638
01:13:09,590 --> 01:13:16,160
And there's collections of these that are people have already generated that they think looks nice.

639
01:13:16,580 --> 01:13:21,350
So this would be anything like the size of the title or the font of the axes.

640
01:13:21,380 --> 01:13:24,470
And so you don't have to if you don't want to specify each of the items,

641
01:13:24,470 --> 01:13:30,380
you can use a collection that somebody else probably who has better taste than me has already created.

642
01:13:31,790 --> 01:13:35,330
All facets will get into next class. This is for.

643
01:13:35,540 --> 01:13:40,070
If we want to break up the plot and make grids. So a whole bunch of plots together.

644
01:13:41,210 --> 01:13:44,360
And so then these are the optional components. All right.

645
01:13:44,360 --> 01:13:47,840
So every plot is going to have these first three layers.

646
01:13:48,260 --> 01:13:55,070
And then, if you like, you can add these other components. And it's through these other components that you can customize everything about a plot.

647
01:13:56,580 --> 01:14:00,830
So let's start just with the required ones first. All right.

648
01:14:00,830 --> 01:14:04,070
So this is the basic structure of a plot.

649
01:14:04,100 --> 01:14:07,729
It's all going to operate from this go plot function.

650
01:14:07,730 --> 01:14:13,390
The grammar of graphics, plot function. And we're going to give it the data.

651
01:14:13,810 --> 01:14:17,800
So that was that first component. Then we've got the esthetics function.

652
01:14:19,480 --> 01:14:20,560
And what are we saying in here?

653
01:14:20,710 --> 01:14:27,790
What I'm saying on the X axis, I'm on the H variable and on the Y axis, I want the neutrophil lymphocyte ratio variable.

654
01:14:28,300 --> 01:14:33,000
And then what do we see here? We've got H. And we've got neutrophil lymphocyte ratio.

655
01:14:33,450 --> 01:14:36,810
So you specify how much access you want that information.

656
01:14:38,210 --> 01:14:45,140
And I would close out the DG plot function. X axes, rebel axes, variable.

657
01:14:45,710 --> 01:14:51,560
And then we add the geometry. So we add that third piece, we add that geometry layer.

658
01:14:51,740 --> 01:14:56,630
And this is where I say I want it to be a point plot. So I want you to point plot all of these as dots.

659
01:14:58,250 --> 01:15:03,290
In the future, we'll swap out the geometries for histograms, for box plots, all the different kinds.

660
01:15:03,500 --> 01:15:06,649
But this is going to get us to a scatterplot. All right.

661
01:15:06,650 --> 01:15:11,000
So these three basic components can make us this plot. We've got the data.

662
01:15:12,540 --> 01:15:17,219
We've got the variables mapped to different axes, and we've told it.

663
01:15:17,220 --> 01:15:24,710
We want it to make a scatterplot. This is the default setting.

664
01:15:26,130 --> 01:15:31,560
This might not have everything you want here, right? There's no there's no units on our variables.

665
01:15:33,210 --> 01:15:37,470
The size of the axes. Labels might not be as big as what we find.

666
01:15:37,470 --> 01:15:41,850
That's an issue with over plodding or so much data stacked on top of each other.

667
01:15:41,850 --> 01:15:48,950
We can't see a lot. There's this weird grid in the background, so this might be a useful first plot to make,

668
01:15:48,950 --> 01:15:53,330
but then you could add some of those additional choices on top.

669
01:15:54,500 --> 01:15:57,560
So if we want, we can add color and a legend.

670
01:15:57,740 --> 01:16:06,200
So this is that same plot. But now, instead of just adding an x axis variable and a Y axis variable, not adding a color plot.

671
01:16:06,890 --> 01:16:11,000
So I'm saying specify the color based on the sex of the participants.

672
01:16:11,720 --> 01:16:17,330
So I've got red and blue dots where red corresponds to male and blue corresponds to female.

673
01:16:17,540 --> 01:16:22,060
You can see that whenever you add a color by default, it gives us a legend, which is quite nice.

674
01:16:22,070 --> 01:16:26,240
We don't even have to ask for it. Everything else is the same.

675
01:16:26,250 --> 01:16:31,530
We're still doing at gun point, but now we've got three variables represented on the plot.

676
01:16:34,700 --> 01:16:43,220
Here, I'm going to keep building. So now I'm adding additional information to that last block and I'm adding a bunch of that with the labels function.

677
01:16:43,940 --> 01:16:49,360
So I'm saying for the X Axes label, make it a little bit bigger or give it an edge in here.

678
01:16:49,370 --> 01:16:56,340
So I've got a unit. Now for the y axis label, I want it to be neutrophil lymphocyte ratio instead of an LR.

679
01:16:56,740 --> 01:17:05,050
So I'm specifying all the different labels like X equals comma, y equals comma, and I'm specifying an overall title.

680
01:17:05,060 --> 01:17:08,620
So title age versus blood cell ratio comma.

681
01:17:08,830 --> 01:17:11,910
And I'm giving it a better legend title.

682
01:17:11,920 --> 01:17:17,720
So the sex of the participant here as well as. Excuse me.

683
01:17:17,990 --> 01:17:23,780
So you don't have to specify any of these. These are just options that you can features.

684
01:17:23,780 --> 01:17:31,200
You can add to the plot. Make it more intuitive for an outside audience.

685
01:17:38,300 --> 01:17:41,820
Other folks mentioned that they might want to modify the axis.

686
01:17:41,840 --> 01:17:46,070
So here we want to specify what we want the limits to be.

687
01:17:46,670 --> 01:17:52,550
So we've gotta give it two numbers because we've got to give it the minimum and the maximum.

688
01:17:52,910 --> 01:17:58,160
So I'm saying I want your age now. I want to zoom in just ages between the ages of zero and ten.

689
01:17:58,850 --> 01:18:05,720
So we don't want the whole age range. We want to focus on this part of the graph so that my ages only go from 0 to 10.

690
01:18:06,350 --> 01:18:11,870
So you can specify the limits in this way. Limits always need two numbers starting and ending.

691
01:18:15,990 --> 01:18:21,870
Colors are is you can go on a deep dive there.

692
01:18:23,970 --> 01:18:28,080
There's all kinds of ways to represent colors. Each of these colors has a number.

693
01:18:28,590 --> 01:18:32,850
For me, the numbers don't stick in my head beyond the first five.

694
01:18:33,270 --> 01:18:36,780
So, like, number one is black. Number two is red.

695
01:18:36,810 --> 01:18:44,700
Number three is blue. Number four is green. I can't remember all of these numbers, but they also have character expressions.

696
01:18:44,700 --> 01:18:49,770
So all these colors have names. I kind of enjoy putting these in my code.

697
01:18:50,550 --> 01:18:54,570
Like I'm just popping up in your code, like lime green or something in your code.

698
01:18:57,880 --> 01:19:01,480
And this is not an exhaustive list. This is just a generic table.

699
01:19:02,440 --> 01:19:05,470
You can also get any color you like from hex codes.

700
01:19:05,500 --> 01:19:09,280
Has anybody heard of a hex code? You know what a hex code is? Yeah. Can you tell me what a hex.

701
01:19:12,890 --> 01:19:17,280
I and I. I mean, it's. Yeah. It's like a string of.

702
01:19:18,130 --> 01:19:22,730
A combination of numbers, letters and each color.

703
01:19:23,830 --> 01:19:27,450
It's like an identifier for a caller. Yeah, it's cool.

704
01:19:27,460 --> 01:19:32,410
This is this universal system for naming colors, and it's used across fields.

705
01:19:33,040 --> 01:19:40,059
So you can bring these tax cuts to the paint store, and they'll mix up a batch of paint for you to paint in your bedroom wall.

706
01:19:40,060 --> 01:19:43,420
That's matches that hex code computing systems.

707
01:19:43,420 --> 01:19:49,360
We can give that same hex code and I'll match it here. Photographer Like all these different fields, use it.

708
01:19:49,360 --> 01:19:57,879
And just like you described, it's, it's a hexadecimal color system and it always starts with a hash tag and then it has a hex.

709
01:19:57,880 --> 01:20:01,840
It has six digits after it. So two digits for how much red?

710
01:20:02,740 --> 01:20:06,340
Two digits, very much green and two digits for how much blue.

711
01:20:06,670 --> 01:20:13,770
And then each of those six positions, it can have any one of the following a zero for nine or A s,

712
01:20:14,230 --> 01:20:18,400
and sometimes I'll just generate a random hex code for myself just to figure out what.

713
01:20:23,080 --> 01:20:32,110
When you're selecting color schemes. DG Pop will start with you saw when we added two colors.

714
01:20:32,470 --> 01:20:36,130
It'll start with red and then it'll pick colors. We just sent around the color.

715
01:20:36,350 --> 01:20:38,590
So if we picked two colors, it did red and blue.

716
01:20:38,860 --> 01:20:46,020
If we pick three colors, it'll do red, blue and green, and I'll adjust its selection there to try to maximize separation for you.

717
01:20:47,300 --> 01:20:52,860
You can also pick your own colors. Here's two websites that I find personally helpful.

718
01:20:52,880 --> 01:21:11,830
One is called coolers. All right, start the generator.

719
01:21:13,170 --> 01:21:20,170
So coolers starts. If anybody else click to this, you will not have the same colors as me.

720
01:21:20,170 --> 01:21:23,760
It does a random generation. And what are these down here?

721
01:21:23,770 --> 01:21:30,339
What are these look like? Those are hex codes.

722
01:21:30,340 --> 01:21:36,190
So you could take this if you like this color. You can take this hex code and put it into R with a hashtag in front.

723
01:21:36,850 --> 01:21:44,500
But with this software, you can if you see one that you like, if we like, I don't know this color, we can lock it.

724
01:21:44,950 --> 01:21:47,620
And I hit the spacebar. It'll generate colors around it.

725
01:21:47,620 --> 01:21:58,180
And then if we like this color, we can lock it and generate colors around it, and we can just keep generating colors until we find a set that we like.

726
01:22:02,500 --> 01:22:06,610
Okay. So let's say we found, I don't know, something we like.

727
01:22:06,610 --> 01:22:16,120
Okay? We think this is a good looking pallet. We can export it for use in our OR first I would recommend we can look to see what does this look like?

728
01:22:22,960 --> 01:22:27,580
What does this look like if we go to the glasses for people with different types of

729
01:22:27,580 --> 01:22:33,309
vision impairment so we can see if somebody has this type of impairment down here,

730
01:22:33,310 --> 01:22:39,700
this would be what it looks like. That's pretty good. Contrast These two maybe are hard to tell apart with this type of impairment.

731
01:22:39,700 --> 01:22:47,140
This so you can check to see if your color selection is approachable to a wide audience.

732
01:22:47,350 --> 01:22:54,790
Because if we want to share our public health message as widely as possible, we want to make sure the widest number of people can see our differences,

733
01:22:54,790 --> 01:23:02,350
because sometimes you end up with a set of colors that might look different to you, but to other folks, there's the can't tell the difference there.

734
01:23:03,360 --> 01:23:06,590
Okay. So eventually when you find a color palette, you're like, Oh,

735
01:23:06,600 --> 01:23:13,339
you can also like upload your pictures if you have a beautiful sunset and point to places on the picture

736
01:23:13,340 --> 01:23:19,770
and I'll figure out what hex code is there so you can use this to help help yourself find colors that way.

737
01:23:23,160 --> 01:23:24,360
Another one that I like.

738
01:23:24,360 --> 01:23:36,600
If I have to do a whole bunch of colors and I don't have time to look at each one of this, you can tell it how many colors you want.

739
01:23:36,810 --> 01:23:45,510
So if I need 20 colors. It'll make a palette for me.

740
01:23:47,020 --> 01:23:50,110
So it'll pick 20 colors that are pretty different for me.

741
01:23:50,830 --> 01:23:56,740
So and then we can, you can tell it like to maximize difference on different components.

742
01:23:57,010 --> 01:24:02,260
And down here we've got all of the hex codes so we can use these directly in our.

743
01:24:06,590 --> 01:24:16,450
Some options. Once you pick the colors you want, you specify.

744
01:24:16,660 --> 01:24:19,450
In this case, we're saying we want to set our colors manual.

745
01:24:19,480 --> 01:24:27,340
We're going to use a scaled family of functions to scale our data by those manual colors that we've put in this paste on over here.

746
01:24:30,250 --> 01:24:36,160
In general, you want to look for colors that vary by different principles.

747
01:24:36,170 --> 01:24:40,000
There's different schools of thought on how we should categorize this.

748
01:24:42,120 --> 01:24:52,030
If you're saying this sounds like could be a huge time suck or you're unsure about your own esthetic choices,

749
01:24:52,270 --> 01:24:59,170
there are people who have generated an entire art packages that are dedicated to providing beautiful color palettes for you.

750
01:24:59,350 --> 01:25:02,409
So one of the most common ones used is our color brewer.

751
01:25:02,410 --> 01:25:09,580
That was kind of the first one. So we would say we want to scale the color by the brewer package and then say which palette number.

752
01:25:10,090 --> 01:25:14,770
So instead of scaling the color by your manual color selection, we're scaling up by.

753
01:25:15,800 --> 01:25:24,220
This Brewer package that has a number of pallets, this very direct package has just one color palette that's here.

754
01:25:24,770 --> 01:25:28,970
But this one has been shown to work with many vision impairments.

755
01:25:29,690 --> 01:25:33,440
So if you just want a one stop shop, you want something that generally is going to work.

756
01:25:33,440 --> 01:25:36,440
For a lot of people. You can just do scale, color, Madeira.

757
01:25:39,140 --> 01:25:48,040
There's a ton of these packages out there now. There's. A package of colors from national parks in the United States.

758
01:25:48,400 --> 01:25:54,100
So you can have your color, your plot match the colors of Yellowstone National Park.

759
01:25:54,940 --> 01:26:02,890
There's a package that picks colors from Lacroix seltzer water cans so you could pump the most canned colored plots.

760
01:26:03,130 --> 01:26:06,760
There's a package for Wes Anderson movies.

761
01:26:07,450 --> 01:26:13,670
So you can have a Moonrise Kingdom. Colored flags are really like an incredible number of these packages.

762
01:26:13,690 --> 01:26:23,590
Yeah, please. So every album I've heard, somebody has gone through a about it.

763
01:26:24,790 --> 01:26:28,479
What did you think? Oh, wow.

764
01:26:28,480 --> 01:26:35,200
That's very topical with our country. Because I haven't heard about it yet.

765
01:26:35,260 --> 01:26:39,910
So this can be a fun way to bring your personality into plots as well.

766
01:26:40,210 --> 01:26:44,080
And I would invite you as you're doing your plotting.

767
01:26:44,770 --> 01:26:48,010
I'm going to require that you change the color from the default.

768
01:26:49,680 --> 01:26:55,540
You could do it by manual by one of these packages. But I just want you to practice the act of color switching.

769
01:26:56,020 --> 01:26:57,819
You don't need to spend a ton of time on it.

770
01:26:57,820 --> 01:27:07,330
But just to get a little bit familiar there, because colors really help your audience engage with the material in many cases.

771
01:27:09,040 --> 01:27:14,980
I'm so glad to know about that. Yeah. Please have you find other packages here that are interesting.

772
01:27:15,310 --> 01:27:23,920
I'm happy to have you share those with the group. There's additional non data components we can customize with themes.

773
01:27:24,820 --> 01:27:32,110
So here would be where you can change anything that's not related to the data so that the background color or the margin size,

774
01:27:33,040 --> 01:27:39,500
the accent size, all these kinds of things. There's also preset themes.

775
01:27:40,160 --> 01:27:45,890
So the default is the theme gray that has a gray background with white grid lines.

776
01:27:47,330 --> 01:27:51,319
There we can convert it to theme. Classic this is based graphics.

777
01:27:51,320 --> 01:27:55,040
This was the way blacks looked before we started using Google Plus.

778
01:27:55,610 --> 01:27:59,720
So there's a whole bunch of themes and they'll change your font along the way.

779
01:28:03,220 --> 01:28:06,370
We can also do options within the GM point.

780
01:28:08,020 --> 01:28:12,700
Function. So in here we can change the size and shape of the points.

781
01:28:12,700 --> 01:28:17,620
So the default is one. So the default is size one.

782
01:28:18,550 --> 01:28:22,630
The default is shape, I think one.

783
01:28:22,660 --> 01:28:24,670
So you can you can give different shapes.

784
01:28:24,670 --> 01:28:32,620
You can give stars, you can give some that have two colors in them, some that are hollow, some that are solid.

785
01:28:34,210 --> 01:28:38,660
You can specify the outline color. The fill color.

786
01:28:38,660 --> 01:28:43,670
So some in this one, you can see there's a different film color then a different outline color,

787
01:28:44,420 --> 01:28:49,129
but some of them only have one color and you can do transparency.

788
01:28:49,130 --> 01:28:55,610
Transparency is helpful for us when big data sets like NHANES, where you saw those dots were stacked on top of each other.

789
01:28:56,570 --> 01:29:01,010
So here we can set it so that but each point is a little bit see through.

790
01:29:01,970 --> 01:29:11,150
So you can see where the dots are overlapping, but color will be more intense and the dots will be more faint where there's less observations.

791
01:29:13,240 --> 01:29:18,610
So for example, here I'm specifying a whole bunch of options within the GM point function.

792
01:29:18,970 --> 01:29:25,810
I'm saying I want the size of the points to be three. Is this is this point going to get bigger or smaller than the default?

793
01:29:27,230 --> 01:29:38,150
I say size equals three. So the default value for everything is one.

794
01:29:38,630 --> 01:29:42,110
So just trial and error. But this will be bigger than the default.

795
01:29:42,110 --> 01:29:45,770
And if you want it to be smaller than the default, you would give a value less than one.

796
01:29:47,620 --> 01:29:50,680
The shape. I'm saying switch it a shape 22.

797
01:29:51,720 --> 01:29:55,050
So I want to square. I'm saying I want the color.

798
01:29:55,500 --> 01:30:04,230
So this would be the outline color to be C green. I want the filled color to be violet and I want the alpha transparency to be a third.

799
01:30:04,410 --> 01:30:14,070
So this will make it more transparent. So that gives us this box here that's very large as a green outline, a violet fill, and it's very faint.

800
01:30:14,640 --> 01:30:18,180
Okay. So you can, like, test out different combinations that you like.

801
01:30:18,750 --> 01:30:23,880
Usually I'll, like change out one feature at a time and see what happens.

802
01:30:25,500 --> 01:30:31,440
So to recap, these are this is this general principle of plotting that we're going to use with plot.

803
01:30:32,040 --> 01:30:36,240
And there's three required pieces. So first, we have to specify the data set.

804
01:30:37,500 --> 01:30:40,469
Then we have to specify the variables that drive the esthetics.

805
01:30:40,470 --> 01:30:46,920
So usually this is what's the x axis variable with the Y axis variable and what color what variable you want in the color.

806
01:30:47,460 --> 01:30:51,780
And you don't have to have all those three. Sometimes you only want one variable in the whole plot.

807
01:30:54,450 --> 01:30:57,420
Some of the optional features we're going to include for the overall plot.

808
01:30:58,290 --> 01:31:06,149
We'll close out that function and I use a plus line and just add the labels, add colors and themes,

809
01:31:06,150 --> 01:31:13,320
for example, and then we add geometries and this is where we specify the plot type.

810
01:31:13,320 --> 01:31:20,100
So we use John Point to make a scatterplot, we'll use GM histogram to make a histogram next class.

811
01:31:20,850 --> 01:31:24,690
And then within that function there's more features. So you can kind of see how.

812
01:31:25,750 --> 01:31:27,100
This can become a big activity.

813
01:31:27,100 --> 01:31:33,880
You can get more and more customized over time or you could scale back and just do the default features if it's just for you and a colleague.

814
01:31:37,930 --> 01:31:42,460
All right. Let's jump into code and let's make our first couple of plans.

815
01:31:48,040 --> 01:31:51,909
So let's see what I like. Okay.

816
01:31:51,910 --> 01:31:56,500
So I'm going to go back to our main class workspace.

817
01:31:57,640 --> 01:32:06,040
And I've made a new project. So there's the graphing project for my instructor account and you can click copy to make a new project for yourself.

818
01:32:07,720 --> 01:32:35,470
So you. Okay.

819
01:32:37,240 --> 01:32:40,750
So we're getting a little bit more familiar with this format.

820
01:32:41,710 --> 01:32:49,090
You can navigate in the lower right hand side of the files and find the Q MP for our class for on graphing.

821
01:32:51,160 --> 01:32:55,660
So I'm going to click on the Q and file the quartile markdown file for class four

822
01:32:55,660 --> 01:33:01,480
on graphing that that'll pop up a new code file in the upper left hand corner.

823
01:33:02,140 --> 01:33:09,340
You can add your name so that you like as you share this with people you know, who's been working on the code.

824
01:33:10,870 --> 01:33:24,169
And we see that this all compiled today's they all use it. There's a couple of packages here that we'll use in this class that are new to us.

825
01:33:24,170 --> 01:33:35,540
So we don't need to install that plot package because it's part of the tidy verse, but we'll use the Geeni bar to help publish our plots.

826
01:33:35,840 --> 01:33:44,220
And then here's to, for example. Packages for color palettes, but you may have additional color palettes you would like to add.

827
01:33:44,490 --> 01:33:48,150
You know, this year I haven't said ballot equals false as the default.

828
01:33:48,180 --> 01:33:50,790
I don't want to run this every time. This'll take a long time.

829
01:33:51,000 --> 01:33:55,319
If you're working on your personal computer, you may need to run this, but I'm going to skip this.

830
01:33:55,320 --> 01:34:02,010
And the activity we will do every time that activity we will do this time is the slower packages.

831
01:34:02,670 --> 01:34:08,670
So if you want, you can do on line by line to load these packages, activate their functions, or you can just hit the play button.

832
01:34:09,360 --> 01:34:15,500
The play button will run the entire chunk all together. Right.

833
01:34:20,980 --> 01:34:25,390
All right. Now I want to load some data. So what am I want to load here?

834
01:34:25,400 --> 01:34:34,720
I'm just checking. It's going to load data that's present in a folder called Cloud Project, and then the data sets called this class dataset.

835
01:34:35,020 --> 01:34:39,820
So it's going to look for the file called Cloud Project Enhanced Class Dataset.

836
01:34:40,180 --> 01:34:42,760
If you're working on your personal computer, this will be a different file.

837
01:34:43,910 --> 01:34:53,590
I told Tell I was going to go right there and then I'm going to load that data set.

838
01:34:53,590 --> 01:34:58,790
I just added the remote control as object so that output will tell me the name of the object we added.

839
01:34:58,810 --> 01:35:03,250
You don't need to do that. But this tells us that, okay, we just loaded the enhanced dataset.

840
01:35:03,250 --> 01:35:11,950
This is the same dataset we've been working with in class. We're familiar with this dimension, the 9200 observations and the 21 variables.

841
01:35:12,490 --> 01:35:17,260
So I've got to load this in because this is a new project, a new situation,

842
01:35:17,530 --> 01:35:22,390
and every one of these we want to have our packages and we want to have our dataset loaded in at the top.

843
01:35:25,630 --> 01:35:33,650
Because here's a couple of websites you might use if you start to get excited about Juju Plat and want to dig into it more.

844
01:35:34,910 --> 01:35:40,520
But first, let's make let's make a scatterplot. Okay. So talk to us before we even make this plot.

845
01:35:40,520 --> 01:35:47,629
What are you expecting? Okay, so what variables are you expecting to be on the x and y axis based on this code here?

846
01:35:47,630 --> 01:35:54,890
What do you think this code is going to do? What's the data set and what are the variables that we're mapping to a static?

847
01:35:58,190 --> 01:36:03,500
I think. Yeah.

848
01:36:04,020 --> 01:36:08,290
Yeah. The x axis is going to be h.

849
01:36:08,410 --> 01:36:13,380
Mm hmm. And the y axis is the log of blood pressure, I think.

850
01:36:13,840 --> 01:36:16,200
Yeah. Blood. Blood. Exactly. Yeah, exactly.

851
01:36:16,210 --> 01:36:25,030
So we're going to use that for pharmaceutical function of the data set and we're expecting H on the x axis and log of blood, but on the Y axis.

852
01:36:25,390 --> 01:36:29,460
And then we're expecting it to be a scatterplot using the point.

853
01:36:29,920 --> 01:36:37,390
Okay, so let's run it and see what we get. All right.

854
01:36:39,720 --> 01:36:45,630
So we did this. This is all the default style choices.

855
01:36:46,230 --> 01:36:52,500
And do you get this kind of an output where we see the access label as that internal variable name?

856
01:36:53,460 --> 01:36:58,440
We've got these large solid dots, we've got this gray background and the white grid line,

857
01:36:58,890 --> 01:37:05,010
and we've kind of got this issue of overfly where there's a lot of data on top of each other, actually have a nice big data set.

858
01:37:05,370 --> 01:37:08,610
Okay, so this is our first pass. How would you interpret this?

859
01:37:08,940 --> 01:37:15,420
When do you see an association here? Do you do you what's your interpretation of the values you see here?

860
01:37:21,260 --> 01:37:33,280
Did you notice any trends? Any patterns? Generally it's increasing as you age.

861
01:37:33,730 --> 01:37:37,340
Yeah, it looks like there's higher blood loads for older folks than younger folks.

862
01:37:37,370 --> 01:37:43,540
Does that match your expectation based on your understanding of public health policies and practice over time?

863
01:37:45,070 --> 01:37:48,129
Yeah. We've done a nice job of taking lead out of a lot of products.

864
01:37:48,130 --> 01:37:58,480
So there are folks who are younger now are in general on average and of course pockets of people who are highly exposed to light still.

865
01:37:58,480 --> 01:38:04,200
But in general, there's lower exposure levels. Is this reflected in this age trend?

866
01:38:04,220 --> 01:38:11,200
So I always do that. I try to check like, what do I see? Does it match my expectation to to check.

867
01:38:11,620 --> 01:38:15,749
Logic check my work. All right, let's customize it.

868
01:38:15,750 --> 01:38:19,110
So here you notice this first part of the code.

869
01:38:19,120 --> 01:38:22,569
I'm using the exact same code we had up above. All right.

870
01:38:22,570 --> 01:38:26,800
So this template is going to be the same no matter what, but now I'm going to start adding features.

871
01:38:26,810 --> 01:38:32,130
So what are we adding here? What's this adding the labs doing?

872
01:38:32,540 --> 01:38:36,200
What are you expecting to change on the plot relative to last time?

873
01:38:39,210 --> 01:38:42,330
Yeah. It's getting labels to to access.

874
01:38:42,980 --> 01:38:48,110
Nine. So we're going to go from having those internal variable names to more elaborate names.

875
01:38:48,320 --> 01:38:52,760
And we've got some units on both of these so that an outside audience can follow along.

876
01:38:53,360 --> 01:39:01,790
So I can put my cursor anywhere in here. And we see we got a plot down here that has those more complete names.

877
01:39:02,840 --> 01:39:09,350
To avoid. Making everyone dizzy from school scrolling back and forth.

878
01:39:09,360 --> 01:39:15,480
I'm going to do something here with the gear. I'm going to say right now the default is chunk output in line.

879
01:39:15,510 --> 01:39:20,550
That's putting all the plots in here. And so I'm scrolling up and down, I'm going to click chunk, output and console.

880
01:39:22,240 --> 01:39:28,300
That stuff's fine there. So next time I make a plot. It's going to show up.

881
01:39:31,600 --> 01:39:32,739
Over here in the plots.

882
01:39:32,740 --> 01:39:40,630
Just this is going to be helpful for me to have so that we can see see the code here and the output here without scrolling back and forth.

883
01:39:40,870 --> 01:39:42,309
If at any time you want to go back,

884
01:39:42,310 --> 01:39:51,310
you can go back to the line here and say trunk output in line just right now I'm going trunk output and console for for class purposes.

885
01:39:52,930 --> 01:40:00,880
Okay. So what's the next thing we want to change here? Now we've got the data set and the esthetic mapping are the same.

886
01:40:01,030 --> 01:40:05,290
The labs are the same. Now we're changing stuff within 90 on point.

887
01:40:05,320 --> 01:40:09,670
So within the geometry, what changes do you expect to see in the data set?

888
01:40:11,340 --> 01:40:17,300
Or in the plot. What are what are you changing with these options?

889
01:40:29,560 --> 01:40:38,360
What do you expect to change? Yeah.

890
01:40:39,290 --> 01:40:46,100
Points to get smaller and more transparent and change you.

891
01:40:46,490 --> 01:40:50,570
Yeah. So this is all about what do we want the plates to look like?

892
01:40:51,230 --> 01:40:56,570
And the default for all of these is one. So this is saying the size is going to be less than one.

893
01:40:56,570 --> 01:41:01,520
So our size is shrink of the points. The alpha is the transparency.

894
01:41:01,520 --> 01:41:06,860
So this is less than one. So going can become more transparent, more see through and the shape or in a change of shape too.

895
01:41:06,860 --> 01:41:11,250
I can't remember what ship to us. So I can run this and see what this looks like.

896
01:41:12,700 --> 01:41:18,690
Well now. So all those triangles. So now we can see the points are smaller.

897
01:41:18,700 --> 01:41:22,239
We can see where the points are a little bit darker. There's some overlap.

898
01:41:22,240 --> 01:41:27,639
There's more data here. So that that is an option and you can change that.

899
01:41:27,640 --> 01:41:35,350
So you can trial and error say no, I would rather have a Shape seven and and try different things and see what you get.

900
01:41:35,350 --> 01:41:40,059
So that converted me to a square and I really just like change one thing out and see what happens.

901
01:41:40,060 --> 01:41:44,890
Change one thing out and see what happens. If we want to change the color.

902
01:41:48,560 --> 01:41:57,770
Here. Now I'm adding a third variable. So we've got X-axis variable y axis, and I'm saying, what variable do we want mapped to the color of the plot?

903
01:41:59,420 --> 01:42:09,280
You can get that in there. I'm also adding a. Rebuilt to the legend so that we can see these points are painted on a small point.

904
01:42:10,220 --> 01:42:14,360
The observations coming from participants are in red and those from female in blue.

905
01:42:15,640 --> 01:42:19,240
Those are the default colors. If we want, we can change the color palette.

906
01:42:19,900 --> 01:42:26,190
Here, I'm using your dress. Which is that? Colorblind friendly one.

907
01:42:26,190 --> 01:42:32,850
So it's going yellow and purple. You can try another color palette here.

908
01:42:32,860 --> 01:42:36,630
I'm doing one of the color palettes, but there's dozens of these.

909
01:42:38,640 --> 01:42:44,280
And so here's where you could spend time. You can do scale color manual and put in all of your favorite colors.

910
01:42:44,280 --> 01:42:51,420
And there. Here. I'm changing the theme to the classic theme that will take away this great background.

911
01:42:53,230 --> 01:42:57,270
This is the way plots look in kind of historic art.

912
01:42:57,270 --> 01:43:03,920
Before we got into the teddy bears, I still. This type of planning resonates with me.

913
01:43:07,260 --> 01:43:10,290
But you notice that that changed a lot of things simultaneously.

914
01:43:10,290 --> 01:43:15,480
So the labels got slightly bigger. He's rotated, so everything's upright.

915
01:43:16,200 --> 01:43:26,999
If you want, you can change them one by one. So for example, here you can change the text color, you can change the size of the text.

916
01:43:27,000 --> 01:43:30,180
You can do all these things like individually if you need to.

917
01:43:34,400 --> 01:43:42,530
All right. So there I walked you through a couple of progressions that I might have done with a plot these last few minutes of class.

918
01:43:42,890 --> 01:43:45,650
Let's have you make a plot yourself. All right,

919
01:43:45,650 --> 01:43:53,510
so now I want you to make a scatter plot of two variables from 19 states that caught me in data variable and the cadmium variable on the y axis.

920
01:43:54,060 --> 01:43:59,390
Okay, so make a code chunk and see if you can't make a scatterplot with those two variables.

921
01:43:59,720 --> 01:44:02,990
And we can experiment with changing color, size and transparency.

922
01:44:53,430 --> 01:45:37,870
I. All right, help me get started.

923
01:45:37,880 --> 01:45:50,180
How are we going to create a new code so we have space to work? You can click, see plus if you like.

924
01:45:51,260 --> 01:45:55,790
So we've got some space. What function are you going to use to start your code?

925
01:46:01,540 --> 01:46:05,710
What function are all of these graphs we make in this class going to start with?

926
01:46:09,290 --> 01:46:18,169
Yeah. Yeah. G g plot. And the first thing we provide is our data set so enhanced and then we provide our static mapping.

927
01:46:18,170 --> 01:46:21,350
So help me out what variables we want on which axes.

928
01:46:21,350 --> 01:46:24,890
So I'm use the x function and say x equals what?

929
01:46:31,770 --> 01:46:36,929
Yeah. I want to put you on the x axis and y axis.

930
01:46:36,930 --> 01:46:46,990
We're going to have the X for the cadmium. Okay.

931
01:46:47,480 --> 01:46:54,290
And then what type of plot we want? We want jum point.

932
01:46:58,410 --> 01:47:07,010
Okay. I'll usually start with the default, so I'll make that first with no options just to make sure I've got the code right.

933
01:47:07,020 --> 01:47:12,510
Just make sure the variables are showing up where I want them to go, make sure there's no errors happening there.

934
01:47:13,140 --> 01:47:18,840
But then if I want to start changing something, so what if I want to play with the size of the points?

935
01:47:19,170 --> 01:47:24,180
I could do that here. So size equals, I don't know.

936
01:47:24,180 --> 01:47:28,170
Maybe we want the size to be five. We want the price to be huge.

937
01:47:28,740 --> 01:47:32,310
Maybe we want the transparency with Alpha to be.

938
01:47:33,260 --> 01:47:36,950
Point one on. All right.

939
01:47:37,030 --> 01:47:39,390
So change a couple of things and then see what happens.

940
01:47:39,440 --> 01:47:45,730
We got these kind of big bubbles and you can you can try it and out, see what esthetics you like.

941
01:47:46,360 --> 01:47:52,389
If we would like to change the color of all the points here so we're not we're not using a variable to color it by.

942
01:47:52,390 --> 01:48:05,400
But if we want to color all the points, we can go scale color manual and specify what color we want to give in here.

943
01:48:05,410 --> 01:48:12,820
So maybe Dodger Blue. I got a warning message.

944
01:48:12,840 --> 01:48:29,300
Don't like that. So we can provide different we are we could do a scale color barrier and we can do different colors in there.

945
01:48:30,770 --> 01:48:33,770
Change those colors online so you can experiment.

946
01:48:34,070 --> 01:48:39,050
We're running out of time here, but you can change changes kinds of aspects of one at a time.

947
01:48:39,740 --> 01:48:42,630
So for classes, we are for homework this week.

948
01:48:45,410 --> 01:48:56,180
Homework assignment for graphing and are the first one is to make a scatterplot, which you guys you folks have the tools to do now.

949
01:48:56,450 --> 01:49:01,510
And then when we meet next class, we'll see how to make a bar plot and a density plot and a box class.

950
01:49:01,550 --> 01:49:04,370
And we'll talk about different plot types next time on.

951
01:49:04,400 --> 01:49:09,620
But feel free to practice and experiment with the scatterplot aspects while it's still fresh in your mind.

952
01:49:10,550 --> 01:49:16,550
And the due date for this. I'll push back a week so that we can continue to learn about this.

953
01:49:17,390 --> 01:49:22,020
Are there any comments? Questions? Enjoy it.

954
01:49:22,320 --> 01:49:26,730
This is as much an artistic expression as it is a scientific one.

955
01:49:27,360 --> 01:49:36,990
So feel free to play around with what you like here and see what helps you better communicate your observations.

956
01:49:38,430 --> 01:49:41,160
All right. Thank you, everyone, for your attention. I'll turn off the recording.

