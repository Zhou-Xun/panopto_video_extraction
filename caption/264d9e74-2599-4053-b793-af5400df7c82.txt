1
00:00:00,300 --> 00:00:04,230
All right, let's get going.

2
00:00:05,160 --> 00:00:10,620
So we have three last lectures left, including this.

3
00:00:10,650 --> 00:00:16,610
There's a51, two, five, five lectures.

4
00:00:17,550 --> 00:00:21,210
The midterm two is December seven.

5
00:00:21,780 --> 00:00:34,080
So a little bit tight. Hopefully, we can get everything well, everything before the midterm Tuesday, which is hope to give you a little bit of time.

6
00:00:34,230 --> 00:00:40,620
We can have a review at least for the second half of the class.

7
00:00:40,740 --> 00:00:47,490
Okay. So if you cannot attend the lectures this Wednesday, that's fine.

8
00:00:47,490 --> 00:00:51,930
But you make sure you check out the the recording.

9
00:00:53,220 --> 00:01:05,250
I don't know the quality of the reporting, but that seems or we could do this all because there is no class by the university on Wednesday.

10
00:01:05,520 --> 00:01:10,650
Oh, really? Yes. Tuesday is when Thanksgiving break starts for students.

11
00:01:12,150 --> 00:01:16,440
Thanks for telling me. Yes. All right, then.

12
00:01:16,700 --> 00:01:22,500
Then we don't have classes. All right?

13
00:01:23,760 --> 00:01:28,290
I don't know. Make it okay. All right, let's get going again.

14
00:01:31,500 --> 00:01:36,320
All right. So. So no class on Wednesday and next.

15
00:01:37,380 --> 00:01:43,380
All right. So so last time we were talking about generalization, of course, on all sizes.

16
00:01:43,890 --> 00:01:51,270
So so the first two parts we talk about is the definition of purpose of process, right?

17
00:01:51,270 --> 00:01:57,540
That there are three global properties, the counting process you cannot change by nature.

18
00:01:57,540 --> 00:02:01,019
That was a process is always the counting process.

19
00:02:01,020 --> 00:02:05,580
So this is on zero equal to zero. You don't need to change it.

20
00:02:07,800 --> 00:02:25,610
If you changed independent, if you're changed, the stationary increment that results in the not only is false are supports.

21
00:02:32,820 --> 00:02:38,150
So in this sense the person read will be time dependent.

22
00:02:38,850 --> 00:02:51,810
So the way to think about this or the model T as a function of T and so this one if you make long the T.

23
00:02:53,630 --> 00:02:58,200
Instead of a constant, this becomes a non homogeneous Poisson process.

24
00:02:58,220 --> 00:03:18,290
Last night we proved the marginal 80%, the variable, the increment you change on the key as an as plus the utility depends on the.

25
00:03:18,530 --> 00:03:32,930
So the the run the variable and that is also distributed and then it's the mean it depends how the area under the curve.

26
00:03:33,050 --> 00:03:40,910
So that's a generalization even for the poor song process because in that case you have a constant rate.

27
00:03:41,180 --> 00:03:45,770
Right. So this is an area under the curve.

28
00:03:46,190 --> 00:04:02,180
It's not the same thing as you. So the second generalization is actually we we we can change the independent increment process a little bit.

29
00:04:03,200 --> 00:04:12,910
So this is a conditional for song or next.

30
00:04:14,270 --> 00:04:19,250
So there are different names. They all refer to the same thing or song process.

31
00:04:26,690 --> 00:04:42,350
So the key thing of this variant of the Poisson process is you don't have effects that were constant along the instead of the lambda is a positive,

32
00:04:45,830 --> 00:04:49,610
you know, instead of a alarm that you have a positive run.

33
00:04:49,610 --> 00:04:51,680
The variable lambda l.

34
00:04:53,320 --> 00:05:33,150
So given a positive variable now such that if the realization is al equals lambda, then the resolving process itself reports on the song process.

35
00:05:35,740 --> 00:05:47,740
So in terms of you can always think this procedure as a generated model, thinking about how do you see such thing.

36
00:05:48,190 --> 00:05:55,270
So first of all, you do B, you get L from a G along distribution.

37
00:05:56,440 --> 00:06:15,440
Right? You sample that from the distribution and is a t given l equals to is is what song process was.

38
00:06:17,560 --> 00:06:22,690
So so this is step one. This is step two. This is what we call generative model.

39
00:06:24,180 --> 00:06:31,899
You every time your sample along the from you sample L from this G lambda

40
00:06:31,900 --> 00:06:37,600
distribution and then conditional on that you you get a standard full song process.

41
00:06:39,490 --> 00:06:49,690
So last time we kind of argue this essentially remove the independent increment condition

42
00:06:49,690 --> 00:06:55,510
because none overlapping time intervals not share information of unknown quantity,

43
00:06:56,080 --> 00:07:04,300
which is l right. So we share the information about the porcine rate that makes them dependent.

44
00:07:07,800 --> 00:07:18,500
However. You could also show the stationary increment since you show it really intact.

45
00:07:18,980 --> 00:07:29,960
So this is the formal argument for the US to.

46
00:07:35,150 --> 00:07:37,630
So let's check the station, our increment.

47
00:07:46,940 --> 00:07:58,880
So for this condition, what we need to do is just what we can just compute and t process minus and T or in that information.

48
00:07:59,390 --> 00:08:05,240
And so to show station or increment, we can try to evaluate this quantity, right?

49
00:08:05,720 --> 00:08:15,620
I think at the end of the day, if we derive this quantity and then find out that probability only depends on t not us,

50
00:08:16,220 --> 00:08:25,490
then that proves the station or increment property because that's essentially what the station, our increment probably trying to say.

51
00:08:27,260 --> 00:08:32,540
So the increment depends on the length of the interval, not the anchor point of the interval.

52
00:08:32,540 --> 00:08:38,030
In this case, the anchor point is s the length of the the ROIs T right.

53
00:08:38,780 --> 00:08:50,089
So how do we calculate this at this point? This should be very easy for everybody because we have this conditional for some definition.

54
00:08:50,090 --> 00:08:55,340
We know that if we conditional on the read parameter this is addresses, then the reports are.

55
00:08:55,820 --> 00:09:06,680
So what we can do is just evaluate something, essentially using the total expectation on this.

56
00:09:07,640 --> 00:09:13,220
You should know on how we use Lambda and then that's it.

57
00:09:13,760 --> 00:09:20,120
Right. So within this, the conditional is the probability is really easy.

58
00:09:20,750 --> 00:09:34,560
It's just a plus on. And then the difficulty here is to calculate this outside expectation.

59
00:09:34,950 --> 00:09:40,320
Right. So this expectation is always suspect to Al Gore right here.

60
00:09:40,950 --> 00:09:53,790
So let's first the right of this and the inner expectation or the inner conditional probability that is lambda T to the N.

61
00:09:54,090 --> 00:09:58,810
So conditional how we put it on the right and the real.

62
00:10:02,100 --> 00:10:06,210
Okay. So that said, that's the conditional probability.

63
00:10:06,480 --> 00:10:16,520
Now we need to average it over all possible lambda values so that particular value, this g of lambda be alarmed.

64
00:10:16,770 --> 00:10:23,340
So we kind of think the lambda is a continuous distribution and then it's positive.

65
00:10:23,560 --> 00:10:29,160
So. So just like that.

66
00:10:30,270 --> 00:10:37,510
And then you don't really need to evaluate this anymore, because this answer already gives you what you want.

67
00:10:37,770 --> 00:10:45,329
Because this expression is only a function of t you cannot find anywhere about.

68
00:10:45,330 --> 00:10:49,140
S Right. SS kind of disappeared.

69
00:10:49,440 --> 00:10:55,080
It disappeared from this conditional. And it's not getting to the average instead.

70
00:10:55,350 --> 00:11:01,470
So that proves even it's a conditional plus on process is still.

71
00:11:03,610 --> 00:11:14,290
Has this stationary increment property. So we can never change the independent increment, but the stationary increment property remained the same.

72
00:11:14,980 --> 00:11:16,060
So that's the argument.

73
00:11:17,920 --> 00:11:31,430
And well, I think this type of the conditional pull song is use the law to in practice if you're to genomics you know there's a.

74
00:11:34,510 --> 00:11:43,629
The harder they see the sort of thing or if you're just using the glass, in a lot of cases you cannot.

75
00:11:43,630 --> 00:11:47,190
Do you want to account for over dispersion?

76
00:11:47,920 --> 00:11:55,780
So this is all coming from this. So this is a benefit that why you think this is a big surplus on distribution?

77
00:11:58,300 --> 00:12:10,360
Because the person read if it's a random variable, can results in some of the opportunities for conditional processing.

78
00:12:12,070 --> 00:12:15,370
So this one is just about this value.

79
00:12:16,150 --> 00:12:29,830
As far as I know, then that's just a lump that he or another you take expectation it becomes.

80
00:12:36,130 --> 00:12:42,430
Yeah. So this expected value of L is just expected.

81
00:12:42,430 --> 00:12:53,290
Value of the first is about the personal rate on average what the value is.

82
00:12:54,370 --> 00:13:06,940
The interesting thing is the variance. So if you have sort of a mix of both some random variable and then you can use the total variation,

83
00:13:07,180 --> 00:13:11,980
the variance law, then you get just operating the whole thing.

84
00:13:12,370 --> 00:13:20,920
So firstly you get the expected. So the part is the various conditional l is going to be the same as the mean.

85
00:13:22,150 --> 00:13:26,650
So this part come from the porcine part.

86
00:13:27,040 --> 00:13:34,540
Right. So to write this, you need a conditional l then you write the variance of.

87
00:13:35,110 --> 00:13:45,730
Let me just write the whole thing. That's a simple point. But just to make the whole thing expected variance and.

88
00:13:53,550 --> 00:14:05,200
You should on Shannon Al plus variants of the anti sorry.

89
00:14:06,600 --> 00:14:15,630
You get the point, right? So this far at the very end, sovereignty conditional now is reality.

90
00:14:16,230 --> 00:14:21,570
So the expected the value of that is actually varies only conditional.

91
00:14:21,570 --> 00:14:27,000
How is along with you that is this is key players veto.

92
00:14:27,510 --> 00:14:32,040
So this is a part what we say to pull some random variable.

93
00:14:32,040 --> 00:14:41,700
The mean and the variance are the same sort. So to see yellow type state but for conditional song you need to account for this part.

94
00:14:41,790 --> 00:14:50,460
The variance of the key given out which one is key square and variance of it.

95
00:14:51,510 --> 00:14:55,980
So compare to the condition while condition standard of poor song process.

96
00:14:56,490 --> 00:15:02,000
You have additional variation here accounted for.

97
00:15:02,010 --> 00:15:10,440
So. So this is a kind of a common technique to account for over dispersion.

98
00:15:10,980 --> 00:15:16,950
So this is not that for this particular course, but it's useful and the less.

99
00:15:18,000 --> 00:15:28,030
So this is kind of easy. So typically for the ease of the computation, the L is taken a gamma distribution, right?

100
00:15:28,050 --> 00:15:35,100
So that satisfies the all positive random variables.

101
00:15:35,400 --> 00:15:39,209
I'm not negative random variable, I should say. Actually take a zero.

102
00:15:39,210 --> 00:15:49,500
It's the limit and then it makes it easier to calculate anyway.

103
00:15:50,960 --> 00:16:04,010
So this is the second very unselfish, awesome process known as the conditional process.

104
00:16:06,140 --> 00:16:10,850
So the final time we're going to discuss is not necessarily changing anything.

105
00:16:12,680 --> 00:16:16,970
Instead we call the Hong Kong police on process.

106
00:16:17,300 --> 00:16:20,900
It's building something on top of your song process.

107
00:16:21,940 --> 00:16:26,150
Right. So the person processes those type of the processes.

108
00:16:26,480 --> 00:16:31,640
It's essentially just take advantage of four song process as a counting process.

109
00:16:34,610 --> 00:16:39,080
And so the third part is the Hong Kong police.

110
00:16:53,630 --> 00:17:00,350
And so essentially, we cannot viewed four person process according to.

111
00:17:00,380 --> 00:17:07,100
So if you have already have a poor song, it's a pop song.

112
00:17:09,400 --> 00:17:13,160
It's all six.

113
00:17:14,900 --> 00:17:22,729
So we get the fine x t for each key.

114
00:17:22,730 --> 00:17:32,960
Here in the whole song process, we're going to define a corresponding X in the sense I want.

115
00:17:35,060 --> 00:17:43,550
So if there are up to time t there are and t are rivals or the t events occurred for each of the events.

116
00:17:45,440 --> 00:17:52,240
Instead of counting one, we're going to call a random variable ti0.

117
00:17:54,200 --> 00:17:58,610
Right. So it's using a process to define another process.

118
00:17:59,030 --> 00:18:06,650
So usually if you you kind of write the process in this form, the X is filled upon.

119
00:18:06,680 --> 00:18:11,390
This person process is known as the pop song process.

120
00:18:14,200 --> 00:18:19,810
It's called a common cause.

121
00:18:28,240 --> 00:18:32,550
So why? This is a generalization. Pretty simple.

122
00:18:32,560 --> 00:18:38,680
If you take why I you quote one. So every time you have a new one, you just come one.

123
00:18:38,680 --> 00:18:42,250
So this is how trivial you become post on process itself.

124
00:18:43,050 --> 00:18:54,430
Right. So always you have the, the, the Poisson process is a component from process with Y equals one.

125
00:18:58,050 --> 00:19:08,490
However you can change it. You can make the feeling of the person process a component process.

126
00:19:08,880 --> 00:19:15,270
In that case, why of why you only cop this specific type key left, right.

127
00:19:15,720 --> 00:19:26,879
So the until you give you the overall event and the why of I can be the case you only count for type K you but then

128
00:19:26,880 --> 00:19:37,200
that's the then you you have to always less or equal to an T because you only track one type of the you want.

129
00:19:38,270 --> 00:19:43,320
So, so that's the second case.

130
00:19:43,530 --> 00:19:49,320
So you can be right from this destination we have already studied.

131
00:19:49,710 --> 00:19:59,100
So today we're going to study probably the most difficult one of this type of the.

132
00:20:03,230 --> 00:20:06,290
The compound porcelain process called MQ one.

133
00:20:06,290 --> 00:20:12,690
Q So porcelain process is widely used, the operations research.

134
00:20:12,710 --> 00:20:23,360
So what is operational research is trying to allocate resources according multimodal is sort of an optimal strategy to allocate resources,

135
00:20:23,360 --> 00:20:33,349
avoiding accounting for the randomness. So you can think about in the so this is usually operations researches in this

136
00:20:33,350 --> 00:20:38,809
university is not the independent department in the industrial engineering.

137
00:20:38,810 --> 00:20:43,940
So you can think about that sort of allocating resource engineering type of the problem.

138
00:20:44,330 --> 00:20:52,280
But within that context, you cannot deal with a lot of modeling and then thinking about the following of the question, right?

139
00:20:52,280 --> 00:21:01,230
So if you have a business, I say. You're going to do a checkout line, automatic checkout line.

140
00:21:01,590 --> 00:21:04,800
Then you need to decide how many customers.

141
00:21:05,130 --> 00:21:12,360
So you're going to consider how many customers come in every day and how many checkout machines you need.

142
00:21:12,570 --> 00:21:17,790
Right. If you put too many machines there, you don't have enough customers.

143
00:21:17,850 --> 00:21:25,030
So you waste your investment on those pretty expensive checkout machines.

144
00:21:25,050 --> 00:21:34,500
If you have too few of them, then you can see the customers line up and then become very unhappy waiting in the line.

145
00:21:35,220 --> 00:21:40,140
So there is some sort of optimal solution to this type of the problem.

146
00:21:40,560 --> 00:21:45,780
But to be able to find the optimal number, you need to understand the, you know,

147
00:21:45,780 --> 00:21:55,700
the dynamic between the service time of the checkout machine and the queue, the customer queue.

148
00:21:55,740 --> 00:22:01,710
So those dynamics becomes important. So today we're not doing the optimization problem.

149
00:22:01,920 --> 00:22:08,730
By the way, the operations research queue for ways of dealing with this optimization.

150
00:22:09,060 --> 00:22:13,200
But we study a typical simple molecule in their contacts.

151
00:22:13,210 --> 00:22:35,220
It's called average one. So each of these has some meaning that is actually exponential waiting time distribution stands for that.

152
00:22:35,580 --> 00:22:56,670
And then. So this is actually from the point of view of of a server.

153
00:22:56,690 --> 00:22:59,990
So in this case, well, in our example, that is check home machine.

154
00:23:00,470 --> 00:23:12,680
What happens is the arrival time, the internal arrival time of a customer will be assume exponentially distributed right with a fixed rate.

155
00:23:13,310 --> 00:23:25,650
So what that means is if you track a queue on the number of customers in the queue will can be modified by a person process.

156
00:23:25,760 --> 00:23:31,610
Right, because their entire arrival time makes exponential and their independent exponential.

157
00:23:31,620 --> 00:23:40,430
So the customer arrives to the queue with that I the exponential distribution.

158
00:23:41,270 --> 00:24:02,930
So that's the added part. The G part G is done as part of the general channel service so that if a customer comes.

159
00:24:04,960 --> 00:24:08,770
If there is nobody before him or her.

160
00:24:08,920 --> 00:24:14,049
So this customer to immediately serve the service time,

161
00:24:14,050 --> 00:24:22,420
follow a distribution and think about what is reasonable to think is a distribution instead of a fixed amount of time in grocery store.

162
00:24:22,570 --> 00:24:30,330
Different people buy different models. I think some people will take extra long time to check also this general time distribution,

163
00:24:30,340 --> 00:24:40,090
but it's essentially to say you allow variability is on service time on each individual but the overall level of distribution.

164
00:24:40,770 --> 00:24:44,980
Okay. So that's the general service time distribution. It's not specified.

165
00:24:45,460 --> 00:24:52,540
The only thing required is their I.D. So from customer to our to customer, they follow.

166
00:24:52,540 --> 00:25:01,180
This distribution doesn't necessarily in their own have the same fixed amount of time and not one single server.

167
00:25:03,040 --> 00:25:11,349
So in this model, we can see that only one single checkout machine, then you can after you understand this,

168
00:25:11,350 --> 00:25:16,690
you can make it two servers, three servers and so on and so forth.

169
00:25:16,990 --> 00:25:25,870
Maybe the question that you've central question is, given the M and G distribution you get from practice, how many servers is the optimal?

170
00:25:27,310 --> 00:25:32,460
We need to define optimality over over there, but not here.

171
00:25:32,470 --> 00:25:38,740
But some optimality may be a minimum waiting time for each customer.

172
00:25:39,130 --> 00:25:42,460
Short is the line and so on and so forth.

173
00:25:43,030 --> 00:25:52,590
Or there is a balance between. The investment and that those criteria somewhere, if not considered the optimal.

174
00:25:52,950 --> 00:25:57,180
But in this case, just engine one. All right.

175
00:25:57,570 --> 00:25:59,550
Even you think about this problem.

176
00:26:00,570 --> 00:26:09,390
There are a few rules when you can put in place and then start to consider the exact the problem we're going to solve.

177
00:26:18,590 --> 00:26:35,680
So some of the things I just said. So the for example, the first one is the customers arrival of five.

178
00:26:39,680 --> 00:26:44,749
According. So you feel count the number of customers come into this queue.

179
00:26:44,750 --> 00:26:57,680
So there's only one queue, right. So the customer arrives according to a person according to for some process with the rate lambda.

180
00:26:59,930 --> 00:27:05,930
Okay, this is the consequence of their arrival interrupted time distribution.

181
00:27:05,940 --> 00:27:09,500
Those things are equivalent, like we said before.

182
00:27:13,940 --> 00:27:20,870
So here is some of the rules. So a customer is immediately served.

183
00:27:22,070 --> 00:27:34,790
So there are two situations immediately, sir, given the size of the queue is zero.

184
00:27:34,910 --> 00:27:45,920
So one or the other way to say it is the server is if the server is free.

185
00:27:47,570 --> 00:27:52,360
This is equivalent to say there's nobody in the done.

186
00:27:53,900 --> 00:27:58,130
Before him or her. Right. So if someone before him or her.

187
00:27:58,160 --> 00:28:01,760
That's must be because the server is busy.

188
00:28:01,860 --> 00:28:12,610
And then there are people in. So if he comes in to them, you know, if you're comes to the server and the server is free, they get served.

189
00:28:12,950 --> 00:28:21,730
Otherwise, waiting too long. And then they discover, does this customer take the position?

190
00:28:21,740 --> 00:28:27,740
So what means is this person gets served the before anybody comes.

191
00:28:30,040 --> 00:28:35,560
Late. Her son came on her deadline.

192
00:28:36,660 --> 00:28:54,570
Otherwise. So the service time, distribution service time is I the G.

193
00:28:56,910 --> 00:29:02,940
All right. So so those are the present for you. Just repeat the dialog one the meaning of that if you want.

194
00:29:02,940 --> 00:29:08,730
The next is defined the question. So we're going to define a busy time.

195
00:29:10,380 --> 00:29:14,280
And not to be an area.

196
00:29:21,980 --> 00:29:52,610
Begins one arrival, finds the system is empty and open the system for the server, find the server is open or the queue is out of the same thing.

197
00:29:53,810 --> 00:30:06,920
And once this the server is fine the queue.

198
00:30:12,090 --> 00:30:17,510
So we just need to write all these before we start serving.

199
00:30:17,750 --> 00:30:22,340
So busy period. So think about the machine.

200
00:30:22,580 --> 00:30:27,890
Sorry, the store just opens its store and then, you know, at this time all of the servers are,

201
00:30:29,060 --> 00:30:33,020
you know, this particular server, we just even focus on one single server.

202
00:30:33,320 --> 00:30:42,709
The server is free, is idle, and then when the first customer come in is start working on the customer, right?

203
00:30:42,710 --> 00:30:50,140
If the customer's done the service and then the customer you look, does the server basically look at that,

204
00:30:50,190 --> 00:31:00,950
the queue is empty according to the definition and this one service time defines, defines, finds that is a period.

205
00:31:01,430 --> 00:31:10,760
But usually that what happens is once one customer comes in get serve there are other customers come into the queue.

206
00:31:12,220 --> 00:31:15,520
Right. So those are become a random events.

207
00:31:15,700 --> 00:31:22,959
You don't know how many. You cannot say definitively how many customers are going to come into the queue.

208
00:31:22,960 --> 00:31:32,400
So any to count for that randomness. But as long as the peak, the customers comes in and then the queue grows, right.

209
00:31:32,680 --> 00:31:40,780
And then this particular server needs to consecutively serve all of these customers in the queue until all the customers get served.

210
00:31:41,140 --> 00:31:44,380
So you can see those service timings.

211
00:31:44,390 --> 00:31:53,200
I'd be. But the number of customers during a busy period this particular summer in the survey is a random.

212
00:31:54,510 --> 00:32:00,060
Right. So that you we don't really know. How do you describe at this point?

213
00:32:00,120 --> 00:32:10,620
Okay. We're going to know that eventually. So it's not trivial to find out how many customers are going to serve during a period.

214
00:32:11,040 --> 00:32:14,940
So the the. During that busy period.

215
00:32:15,180 --> 00:32:20,309
So the the busy period also can be defined. So this is what we say.

216
00:32:20,310 --> 00:32:24,540
The consecutive customers serve consecutive customers.

217
00:32:24,550 --> 00:32:29,970
So any questions about this set up? Okay.

218
00:32:30,030 --> 00:32:33,960
So this is a non-trivial problem.

219
00:32:33,970 --> 00:32:44,670
It's probably the most difficult type of problem you can encounter in person process because this is sort of an interaction between two process,

220
00:32:44,820 --> 00:32:49,470
two random events. One is the service time, that's a random event.

221
00:32:49,830 --> 00:32:58,440
And then there is a waiting time a were the arrival that is poor, but you should consider an interaction of this.

222
00:32:59,400 --> 00:33:34,560
All right. So the question is find. So let's say the deterioration or the length of a busy period.

223
00:33:43,440 --> 00:33:59,090
And the question is you might expect this module to be concerned and various use.

224
00:34:07,590 --> 00:34:15,000
Okay. So. I mean.

225
00:34:16,850 --> 00:34:20,030
So this is the question. And then how do we solve it?

226
00:34:20,570 --> 00:34:28,280
I think the difficult part is always if you're thinking about the problem, thinking about the general solution, it's going.

227
00:34:29,570 --> 00:34:35,560
Very easily, all of you off of your hand, because there are so many things can happen.

228
00:34:35,630 --> 00:34:45,140
As I said before, if you consider this is actually a stochastic process problem, right, if you will, into this arrival time distribution.

229
00:34:45,140 --> 00:34:49,730
Therefore, the there is a pause on process.

230
00:34:50,240 --> 00:34:56,120
Describe the incoming customers number of incoming customers.

231
00:34:57,170 --> 00:34:59,880
So you cannot enumerate all these things.

232
00:34:59,910 --> 00:35:07,550
You can only think about this thing and then try to figure out if there is a sort of a recursive relationship you can use.

233
00:35:10,560 --> 00:35:14,010
However, you should start thinking about the trivial cases.

234
00:35:15,360 --> 00:35:25,650
The other thing is important is what you define like the patient type of what kind of a notation you're going to use in this process.

235
00:35:26,550 --> 00:35:32,840
Like the salt process, so we can use it for this particular case.

236
00:35:32,880 --> 00:35:38,610
You could start a, Q and T, right? So that the Q is the one to the service.

237
00:35:38,820 --> 00:35:58,850
The business period starts. And so the solution like as you know, the service time for the first customer.

238
00:35:59,490 --> 00:36:07,440
So this service time for the first the customer.

239
00:36:14,100 --> 00:36:17,100
So we know two things according to that definition.

240
00:36:17,100 --> 00:36:25,460
One, is the service time going to serve, going to be come from this general distribution, right?

241
00:36:25,470 --> 00:36:35,520
This is a draw from the distribution. So the as we know, the expected value of, as you know, the variance of s right.

242
00:36:35,820 --> 00:36:41,430
Also, we know during this service time how many customers are going to come in.

243
00:36:42,670 --> 00:36:45,310
Because that's just a simple Poisson process.

244
00:36:48,340 --> 00:37:08,409
It's a number expected number to say, oh, let's just number of customers coming in, coming into the queue is random variable.

245
00:37:08,410 --> 00:37:14,830
And then that's right. So this is and this is the start of the year.

246
00:37:15,220 --> 00:37:25,090
So this is the person process. The duration of the period is as then there is the last customer coming in.

247
00:37:25,810 --> 00:37:35,320
This is a capital missing. So that makes it difficult.

248
00:37:35,360 --> 00:37:42,440
But if you're conditional on the value of other assets for some trivial case, it's a pretty easy.

249
00:37:48,050 --> 00:37:54,830
Yeah. I think at this point I can. Just remove the hair.

250
00:37:59,780 --> 00:38:06,290
So if I was equal to zero, nobody comes in then.

251
00:38:07,010 --> 00:38:12,270
According to the rule, the busy period is just the same as right.

252
00:38:13,400 --> 00:38:22,190
Because what the server you get done with this particular customer look at the queue will be empty because that's equal to zero.

253
00:38:22,940 --> 00:38:32,150
So. So as zero two, this becomes the condition.

254
00:38:33,330 --> 00:38:38,200
The next zero follows the g distribution.

255
00:38:38,210 --> 00:38:42,450
So this is the same as the S where we can, right?

256
00:38:44,030 --> 00:38:57,060
Well, this is a more general kind of. Results is giving the whole distribution, the whole conditional distribution be given as equal to zero.

257
00:38:57,080 --> 00:39:02,260
Just follow the G distribution. That's exactly the same as the service, right?

258
00:39:02,390 --> 00:39:08,900
So the expected value will be respective value of g by results, variance of g.

259
00:39:08,930 --> 00:39:12,950
Okay. What about a sequel to one?

260
00:39:15,590 --> 00:39:27,110
So if you have a customer coming in and then the server, when they done the first, the customer then look into the queue to have a one customer.

261
00:39:30,160 --> 00:39:42,080
What can we say about that? Well, if there is a one customer coming in that this is a kind of recursive process.

262
00:39:42,080 --> 00:39:56,210
Right. So I'm going to claim the busy time distribution equal to this is the service time for the first the customer and then the busy time.

263
00:39:56,420 --> 00:40:01,670
I see if the whole thing starts from the second customer.

264
00:40:01,670 --> 00:40:12,470
So to be prime, but it will be prime also for half the same distribution before we say speed.

265
00:40:15,980 --> 00:40:27,590
Right. So in this case, it's probably useful to think the be as consecutive service time, right?

266
00:40:27,890 --> 00:40:34,940
So you serve the first the customer you know that service time is as because your conditional on okay.

267
00:40:37,560 --> 00:40:42,090
So. So this is. So you conditional all that as equal to.

268
00:40:43,780 --> 00:40:51,770
This. Conditioned on that service time so that that's the time allocated to serve the first customer.

269
00:40:52,340 --> 00:40:56,030
And then the problem essentially recreates itself.

270
00:40:56,480 --> 00:41:02,540
Right. So you're going to serve the second customer and then everything else will be the same, right?

271
00:41:02,570 --> 00:41:11,030
So this is a basically the same problem. You're not saying the remaining customer are going to have a, you know, a known distribution.

272
00:41:11,030 --> 00:41:16,099
You don't know that. But you know, what you know is the problem recreate itself.

273
00:41:16,100 --> 00:41:23,240
So B plus S plus B prime. We don't know what that is, but we know the B prime has the same distribution of B,

274
00:41:23,660 --> 00:41:32,480
just just like the start to serve the first of a series of consecutive customer, right?

275
00:41:32,510 --> 00:41:39,350
Just thinking about the the problem to recreate itself or that is kind of a recursive thinking.

276
00:41:41,570 --> 00:41:46,760
But if you have two customer one. So this is an important point.

277
00:41:46,820 --> 00:42:02,780
I think if you need to get this and now we should get on to the next if you have as equal to and one to happen, right?

278
00:42:02,780 --> 00:42:09,260
So this is the tricky situation. This is a big this is why this problem becomes difficult now.

279
00:42:11,150 --> 00:42:14,090
It's not exactly you're kind of right.

280
00:42:14,210 --> 00:42:25,910
So for one customer you of write B plus B prime, but for more than one customer, that sort of argument won't work.

281
00:42:38,410 --> 00:42:46,590
So importantly, why it doesn't work. There is no structure, right?

282
00:42:46,640 --> 00:42:48,150
So you don't really know.

283
00:42:48,170 --> 00:42:57,890
So you need to create a data structure that you can book, keeping the service time corresponding to each customer's waiting time.

284
00:42:58,400 --> 00:43:06,890
Right. So we can classify some of the customers so as they arrive while I serve the first the customer.

285
00:43:07,430 --> 00:43:11,360
All right. So I always have a node.

286
00:43:11,360 --> 00:43:14,570
And so this is the first the customer coming into the queue.

287
00:43:15,540 --> 00:43:25,740
Right. We could do that. And then for if let's consider there's a random number of customer comps in, let's say, a new courtroom.

288
00:43:26,190 --> 00:43:31,140
Sorry. Three. I'm just trying to create this sort of a structure.

289
00:43:32,390 --> 00:43:38,700
And three customers come in during the service time of the first customer.

290
00:43:39,090 --> 00:43:42,440
All right. Now the server. Look at the queue.

291
00:43:42,450 --> 00:43:50,109
There's three customer. Then you start to serve the second one, the third one, and then the fifth.

292
00:43:50,110 --> 00:43:56,640
The one. The fourth one consecutively. And then during the service of the staggered customer.

293
00:43:57,360 --> 00:44:01,950
The same way you can. Good bookkeeping, you put it.

294
00:44:02,070 --> 00:44:05,310
Let's say two customers come in. Right.

295
00:44:05,670 --> 00:44:08,710
So this is a sequential way to view this.

296
00:44:09,090 --> 00:44:12,270
But you see what I'm saying here?

297
00:44:12,540 --> 00:44:17,820
So you've got a tray right here, just like the branching process.

298
00:44:18,060 --> 00:44:26,040
So each of these offspring or the nodes are the customers come in during the service time.

299
00:44:28,210 --> 00:44:31,040
Okay. So this is important.

300
00:44:31,050 --> 00:44:43,110
So while I mean this is really novel and the math or something like the theory of this type of the bookkeeping shows the structure of these,

301
00:44:43,110 --> 00:44:50,720
and then that makes the problem pretty easy. Maybe there is no customer comes in at one, they serve the the force.

302
00:44:50,730 --> 00:44:56,400
Then I just this particular customer doesn't have offspring and then we move on

303
00:44:56,400 --> 00:45:01,920
to the next customer because that represents the next one in line in queue.

304
00:45:02,520 --> 00:45:06,330
Nothing. He has three and so on, so forth.

305
00:45:06,630 --> 00:45:12,120
So basically the service time will be the total number of.

306
00:45:14,500 --> 00:45:18,880
Won't be depends on the total number of the. The nose in the tree.

307
00:45:19,870 --> 00:45:26,230
Right. So the important thing is you could restructure the Q is a one dimensional structure.

308
00:45:26,590 --> 00:45:31,750
But by keeping what is the.

309
00:45:32,590 --> 00:45:37,430
So this is a relationship between the parents and the offspring.

310
00:45:37,510 --> 00:45:40,570
You can basically have a structure of these.

311
00:45:41,140 --> 00:45:48,550
What's the benefit of this structure? We'll see in a minute why this structure will help.

312
00:45:48,580 --> 00:45:56,230
But definitely this is a you know, this is a this is a structure we're going to use and we should make sense of this structure.

313
00:45:56,590 --> 00:46:01,160
So obviously, this reminds the Golden Blossom process, right?

314
00:46:01,180 --> 00:46:06,790
So once power ends and then you are going to be the offspring and the parent and the offspring,

315
00:46:06,790 --> 00:46:12,160
and then, as we say, the offspring, what is offspring is up to interpretation.

316
00:46:12,170 --> 00:46:16,150
So in this case, offspring simply the number of the customers arrive.

317
00:46:16,810 --> 00:46:21,100
The customers arrive during the service time of the parent.

318
00:46:21,430 --> 00:46:30,909
Okay. And then this is not go to an awesome process because usually it it was a process to give you the offspring distribution.

319
00:46:30,910 --> 00:46:40,180
So, you know, the number of the customers on this one is a bit tricky to think about is the number of customers given depends

320
00:46:40,180 --> 00:46:47,640
on it's not the fixed distribution at least that is conditional on the service time it's going to be run them.

321
00:46:48,370 --> 00:46:51,400
So it's also itself is a compound distribution.

322
00:46:52,720 --> 00:46:59,050
Nevertheless, if you have the structure like this now, you know, you can just account.

323
00:47:01,720 --> 00:47:20,380
This tree's. All right.

324
00:47:20,530 --> 00:47:25,000
So we're going to define these the busy time.

325
00:47:25,120 --> 00:47:32,500
So this tree. So the tree that run them tree on the right tree.

326
00:47:42,410 --> 00:48:01,260
She finds easy and easy time.

327
00:48:11,450 --> 00:48:18,260
So if your body is responding to the whole tree, I know we're going to do the same trick as we did in the Gulf.

328
00:48:18,380 --> 00:48:29,150
Awesome process. So if this is a single node and that's the first the customer, it's always special because it defines the root of the tree.

329
00:48:29,540 --> 00:48:36,500
How many customer in this? How many of the offspring this customer are going to have?

330
00:48:37,860 --> 00:48:41,250
We don't know the exact number. That's a random, but it's enough.

331
00:48:41,260 --> 00:48:49,170
S Right. So if the tree represented the whole thing, now you think about the B is the whole tree.

332
00:48:49,890 --> 00:48:58,920
Now I can say the overall easy time distribution conditional on the first the service time of the first,

333
00:48:58,920 --> 00:49:04,670
the customer impulse to s that comes to the nodes and the way of conditional

334
00:49:04,680 --> 00:49:08,820
and those that you know the number of stop trees how many trees are there.

335
00:49:10,220 --> 00:49:23,210
In this case. Sorry, but in general, unless you remember now, each tree represents.

336
00:49:25,610 --> 00:49:33,079
Isn't a busy time distribution or consultative service, customer distribution.

337
00:49:33,080 --> 00:49:36,880
So that is the right.

338
00:49:37,010 --> 00:49:44,500
So with this tree structure, this is always useful.

339
00:49:44,600 --> 00:49:48,259
The tree can be split into the soft trees conditional on the tree.

340
00:49:48,260 --> 00:49:52,220
Then you have the three stop trees and then they have the same distribution.

341
00:49:52,970 --> 00:49:58,490
By the argument we have, you just need to count each of this tree, add them up together.

342
00:49:59,090 --> 00:50:02,570
Each of those as the same distribution would be prime.

343
00:50:04,100 --> 00:50:07,880
Right. If you check. And that second one is still valid.

344
00:50:08,250 --> 00:50:13,760
Right. It's just every time you have just one single node, it's like this.

345
00:50:15,800 --> 00:50:19,590
Every year it's still valid.

346
00:50:19,610 --> 00:50:24,860
So unless equal to one. So this is the general expression.

347
00:50:24,860 --> 00:50:28,820
This may be hard to digest the first glance.

348
00:50:29,330 --> 00:50:43,730
But what I'm saying here is this is a bookkeeping or the way you consider you kind of thinking about the relationship.

349
00:50:43,790 --> 00:50:52,939
The data structure really is the key thing here is not necessary stochastic process or probability theory.

350
00:50:52,940 --> 00:51:02,720
But this is the key, the number of as a conditional on the customers and then each of the tree represents.

351
00:51:05,940 --> 00:51:10,430
The idea of busy time distribution. So why did you write this?

352
00:51:10,950 --> 00:51:19,850
That's the problem is solved. Because, you know, this is a poor song.

353
00:51:21,560 --> 00:51:29,440
I don't know if it's a poor song. And each of these being prime, you don't know we can solve for it.

354
00:51:29,740 --> 00:51:47,360
Okay. The remaining thing is just simple after wrong.

355
00:51:49,520 --> 00:52:13,310
The key thing is really just right. I mean, right away as a boss, I want a nice B of I should use B all fired up there because.

356
00:52:17,600 --> 00:52:20,690
Okay. Right. There's not that.

357
00:52:28,630 --> 00:52:32,380
So the BVI has the same distribution.

358
00:52:33,190 --> 00:52:45,560
Has the same distribution has to be okay because each bead represents the tree and the tree are not the same, but the distribution at the same time.

359
00:52:46,240 --> 00:53:02,380
All right. So when you try to calculate expected the lab will be we can do the total expectation of expected about the U.

360
00:53:02,620 --> 00:53:06,760
S. Right. So in this case.

361
00:53:14,090 --> 00:53:17,330
So that we would be plotting this. So there's this.

362
00:53:24,680 --> 00:53:35,450
If we conditional the actual time of the first the service time s than according to this equation that we s plus.

363
00:53:47,230 --> 00:53:50,780
The guy given us.

364
00:53:54,170 --> 00:54:04,580
Which is close s plus e times landmass.

365
00:54:06,080 --> 00:54:09,650
Right. So. So. This is a conditional expectation.

366
00:54:10,040 --> 00:54:15,410
Equals s. And then if you take another expected value with respect to us.

367
00:54:29,010 --> 00:54:44,130
So you get the equation. The left hand side becomes, you know, the right hand side, you know, as plus the lines along your face.

368
00:54:46,790 --> 00:54:58,910
So that is just taking a additional expectation with respect to us for the the volume equation and the fact that,

369
00:54:59,840 --> 00:55:05,480
you know, as divided by one minus that.

370
00:55:12,680 --> 00:55:20,430
So this is the solution. Unless you count for college, the the various term itself,

371
00:55:20,910 --> 00:55:31,680
apparently there is some constrains one is expected the time being non negative some that's related to the longer the yes you should

372
00:55:32,010 --> 00:55:45,930
sort it out without restriction means at least that you can imagine if the serve the service time is not fast enough is that.

373
00:55:45,930 --> 00:55:52,950
Yes it's very, very long. And then you have customers coming in that you probably never get.

374
00:55:53,640 --> 00:56:01,830
So the busy time should go to infinity or. In in in a similar sentence.

375
00:56:02,310 --> 00:56:07,060
So there are constraints about this one minus one that, yes, I draw broadly.

376
00:56:07,110 --> 00:56:16,770
So you can see this is not not always gave you for arbitrary alarm that yes, you don't always get a positive number.

377
00:56:18,150 --> 00:56:21,540
So on that, what negative number means, you need to think about this.

378
00:56:22,440 --> 00:56:26,880
Right. But by solving the equation, that's what you get.

379
00:56:27,070 --> 00:56:31,110
You still need more discussion, I think.

380
00:56:32,010 --> 00:56:39,649
More understanding on. What that means for the interaction of this two random objects.

381
00:56:39,650 --> 00:56:44,180
One is the service time. The other is the arrival of the customer.

382
00:56:49,190 --> 00:56:56,090
Okay. So this is probably the most difficult thing you're going to see in sort of has the process.

383
00:56:56,120 --> 00:57:06,410
The queuing application is sort of a difficult, but it's difficult because you have to be a creative to think about this type of the data structure.

384
00:57:07,460 --> 00:57:15,110
Once you have this type of the data structure, then everything becomes relatively intuitive, relatively natural.

385
00:57:16,370 --> 00:57:21,510
But if you don't have structures. It's complicated.

386
00:57:31,850 --> 00:57:37,380
Okay. Any questions?

387
00:57:38,520 --> 00:57:44,190
I assume you have a lot of questions, but it's not necessarily easy to ask what?

388
00:57:49,600 --> 00:57:58,540
Well, maybe you'll feel better. It's not easy for me, either one of these type of the thing.

389
00:58:00,560 --> 00:58:08,630
I think the key is you need to in addition to thinking about this type of the data structure,

390
00:58:08,930 --> 00:58:13,580
it should be crystal clear on the definition of a busy period.

391
00:58:14,030 --> 00:58:18,770
Right. So the tree definitely kills you. So it's gonna end somewhere.

392
00:58:19,400 --> 00:58:27,500
Right. And then that's the whole tree. So. So one thing is that we represent the service time of the whole tree.

393
00:58:27,500 --> 00:58:32,989
So the tree and the peak time is sort of 1 to 1.

394
00:58:32,990 --> 00:58:37,550
There is a 1 to 1 correspondence between the tree and the service time.

395
00:58:40,540 --> 00:58:47,110
No, you don't. The intention is to think a problem, like one dimensional problem.

396
00:58:47,530 --> 00:58:53,410
Somebody comes in, somebody comes in thinking of all the trees, all natural at the same time.

397
00:58:53,870 --> 00:58:59,470
Is it is also the only way to solve the problem.

398
00:58:59,560 --> 00:59:04,240
Right. To assign the. The offspring to the corresponding parent.

399
00:59:08,740 --> 00:59:13,840
Right. Okay.

400
00:59:13,850 --> 00:59:18,920
So I was just, um, maybe 130 today.

401
00:59:19,070 --> 00:59:22,370
I was really counting on we have Wednesdays and so we don't.

402
00:59:25,380 --> 00:59:36,470
Let me see. What can I do? So that basically and the the discussion on the poor song process.

403
00:59:36,830 --> 00:59:43,520
So the key thing for the possum process is really understanding the definition of the possum process.

404
00:59:43,850 --> 00:59:53,200
So this is of the five assumptions, three global two on a random variable in nature.

405
00:59:54,950 --> 00:59:58,130
And then what we learned in our old kind of.

406
01:00:00,710 --> 01:00:12,140
So from those four sample the definition we first derive the marginal distribution of an T, so that's through the hormone growth.

407
01:00:12,140 --> 01:00:17,210
And for, you know, for all you know that name a little bit later on.

408
01:00:17,720 --> 01:00:22,730
So the four equation is always a key thing for continuous time Markov process.

409
01:00:25,830 --> 01:00:30,470
And then we talk about inter arrival time distribution.

410
01:00:30,480 --> 01:00:34,380
So the inter arrival time distribution and the posting process is.

411
01:00:36,160 --> 01:00:40,330
Sort of orthogonal. They are not on the same domain,

412
01:00:41,560 --> 01:00:47,920
but they have equivalent descriptions on the same phenomenon of the entire

413
01:00:47,920 --> 01:00:53,080
arrival time distribution and the condition of distribution of arrival time.

414
01:00:53,620 --> 01:00:58,150
Always remember what's the difference in the entire arrival time and the arrival time.

415
01:00:59,050 --> 01:01:03,220
It's just the reference point is different.

416
01:01:04,840 --> 01:01:13,960
After that, we just relax. So now you can think about just generalization of the sample size by removing or relax.

417
01:01:14,080 --> 01:01:18,660
By relaxing. Different. So there are two of them.

418
01:01:18,740 --> 01:01:23,729
Right. So the conditional pull something by relaxing the independent increment and

419
01:01:23,730 --> 01:01:28,290
then the non homogeneous support song by relaxing the station of increment.

420
01:01:28,800 --> 01:01:32,070
And then the compound song process is the difficult one.

421
01:01:32,070 --> 01:01:37,530
So you can always build upon this type of at the pool song process.

422
01:01:37,950 --> 01:01:45,029
So this is actually application of the pool song process. You don't see don't necessarily see the description.

423
01:01:45,030 --> 01:01:50,190
There is a pool song process, but they use the similar language using the also banality.

424
01:01:50,700 --> 01:01:57,450
So there's the similar height of the thing through exponential arriving right in the exponential

425
01:01:57,450 --> 01:02:03,480
arrival of the customer so that you are essentially building upon on the pool song process.

426
01:02:04,620 --> 01:02:11,760
I'll be a important part of for the. For the second the midterm, too.

427
01:02:13,830 --> 01:02:19,140
So if we don't have it on Wednesday, we have. Three lectures for.

428
01:02:19,830 --> 01:02:24,330
Okay. This is going to be very challenging, but we will handle this.

429
01:02:27,720 --> 01:02:30,960
The rest of those are actually not too difficult.

430
01:02:32,130 --> 01:02:39,840
So the the continuous time Markov process, we're going to focus on mostly counting process again.

431
01:02:39,840 --> 01:02:52,319
So the so actually you could see the next two lecture or the continuous post continuous time markup process, specifically the,

432
01:02:52,320 --> 01:02:59,760
the pure birth process and the birth and death process as some generalization of the process,

433
01:02:59,910 --> 01:03:04,379
especially the pure birth process is, is a counting process.

434
01:03:04,380 --> 01:03:07,410
It's always incremental. So are you thinking about population?

435
01:03:07,860 --> 01:03:11,639
There is nobody nobody dies. Only you have first.

436
01:03:11,640 --> 01:03:15,680
You aren't into it, however, that we could not.

437
01:03:17,340 --> 01:03:21,810
Remove some of these, pull some reports on the assumption again.

438
01:03:21,990 --> 01:03:27,630
So one, next time we discuss it, you will see. So that's the pure birth.

439
01:03:27,870 --> 01:03:36,059
And the birth and death process is it's more realistic most of a population.

440
01:03:36,060 --> 01:03:42,330
So you're going to say instead of in addition to the birth event, you're going to have the death that you.

441
01:03:42,810 --> 01:03:48,510
So remove some individual from the population. But the overall purpose is still counting for.

442
01:03:51,210 --> 01:04:02,280
Still accounting for the overall population size. So these type of the process, if you think about it, is you think about the Markoff train.

443
01:04:02,310 --> 01:04:08,400
They are Markoff process. Next time we get to the formal definition, you're going to see.

444
01:04:08,760 --> 01:04:21,270
But this is not the the Markoff process we learn in the first half, especially as sort of a process house on boarding property.

445
01:04:23,090 --> 01:04:27,890
You can't think why. So especially I say, what's our process?

446
01:04:28,040 --> 01:04:31,130
What's the difference? Is plus our process of warning.

447
01:04:31,610 --> 01:04:39,750
Markov process. So now you need to think about those properties we learned before.

448
01:04:40,110 --> 01:04:49,020
So those things are are they? So, for example, for some process, you could go only go one way if you get 2 to 3.

449
01:04:49,050 --> 01:04:54,150
Let's think about state space, right? You don't get from 3 to 2 back.

450
01:04:54,420 --> 01:04:57,480
So there's kind of a counting process fundamentally different.

451
01:04:58,110 --> 01:05:03,570
So pure bursts of process also have this property is not really like water.

452
01:05:04,620 --> 01:05:14,730
So there is no sense of stationary. So when you run this mark off process long enough, pause on process will always go to infinity.

453
01:05:15,030 --> 01:05:21,659
Right. So if you keep adding things to the process, there's always a part of it.

454
01:05:21,660 --> 01:05:26,290
When you get to the person death process, that's a different thing.

455
01:05:26,310 --> 01:05:31,110
So you can go up and then you can go down. Then I think the.

456
01:05:32,710 --> 01:05:35,740
Kind of an old question. And we're thinking of a new question, too.

457
01:05:35,740 --> 01:05:41,590
A continuous time processes. Can we get stationary distribution?

458
01:05:42,440 --> 01:05:47,230
Right. There's not a lot of emphasis on this type of the question in the second half.

459
01:05:47,240 --> 01:05:51,330
But still, we can think about this.

460
01:05:51,350 --> 01:05:59,540
I know we get some. So the hoarding theory actually applies to both Markov chain and the can continuous time.

461
01:05:59,750 --> 01:06:07,670
You just need to think how this Markov chain theory embodied into the continuous time.

462
01:06:08,300 --> 01:06:13,970
Okay. So that's the important part. Before the. For the remaining of the cause.

463
01:06:14,620 --> 01:06:22,180
Right. So what happens is you can think about this type of the process, a sudden changes like invalid state space.

464
01:06:22,600 --> 01:06:31,630
And in between there is no changes in the, uh, in the, the whole process is, it's always exponential waiting.

465
01:06:32,020 --> 01:06:36,310
And then something happened when something happened that seems like you update

466
01:06:37,030 --> 01:06:41,290
you have a marked invalid Markov chain and then move to a different state.

467
01:06:41,650 --> 01:06:48,190
And then once you make the move, you start the big exponential weighting again until next event occur.

468
01:06:48,280 --> 01:06:55,630
So this is kind of a typical way to thinking make connection between different types of Markov processes.

469
01:06:56,590 --> 01:07:01,990
If it doesn't make sense to you right now, don't worry. We're going to deal with this next week.

470
01:07:02,800 --> 01:07:10,900
So finally, we're going to talk about just one single type of continuous time, continuous state space process.

471
01:07:10,900 --> 01:07:14,830
No one knows the branching motion or the winner process.

472
01:07:18,180 --> 01:07:22,610
Those are actually very easy to use. We're going to talk about the derivation.

473
01:07:22,620 --> 01:07:34,200
That's. So, again, everything we got from the defense equation come from the discreet time, discreet state space.

474
01:07:34,550 --> 01:07:40,560
And that if we take the limit on both the time interval and then the movement interval,

475
01:07:40,560 --> 01:07:44,700
then that leads to the continuous time, continuous state space.

476
01:07:47,310 --> 01:07:59,670
Markov process, which is the emotion there, I think, to to effectively use the property of a brain emotion is more important than the derivation.

477
01:07:59,850 --> 01:08:03,240
So given the time limit, I may want to consider this.

478
01:08:03,960 --> 01:08:11,850
I'm talking about the derivations because nobody going to be interested in solving on the partial differential equation.

479
01:08:11,850 --> 01:08:16,770
But we want to talk more about the properties. All right.

480
01:08:16,980 --> 01:08:26,400
Let's end it here. Since there is no one stay in class anymore, but he has a great Thanksgiving break.

481
01:08:26,970 --> 01:08:29,640
And now we come back with your wisdom.

