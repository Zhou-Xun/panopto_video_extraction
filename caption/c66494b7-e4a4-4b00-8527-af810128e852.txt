1
00:00:10,050 --> 00:00:13,560
All right. Welcome to Episode 674. I'm excited to be here with you all today.

2
00:00:13,590 --> 00:00:19,229
Hi, I'm Kelly mikulski. Here's an overview of what we're going to do today.

3
00:00:19,230 --> 00:00:24,190
We'll talk about our campus website and our syllabus, and we'll do some introductions among ourselves.

4
00:00:24,240 --> 00:00:28,830
You'll notice that our is a community driven platform,

5
00:00:29,370 --> 00:00:33,989
so I want to try to create some of that community here in the class and help us

6
00:00:33,990 --> 00:00:37,650
understand that we're going to be working on all of our coding challenges together.

7
00:00:39,420 --> 00:00:48,450
We'll do some slides on an intro to R and then we'll take a break and then we'll do coding related to those slide slides and we'll do new slides.

8
00:00:48,780 --> 00:00:52,229
This class will kind of do chunks back and forth like that of slides, coding, slides,

9
00:00:52,230 --> 00:00:57,870
coding, and with a little bit extra administrative activities in the beginning.

10
00:00:59,040 --> 00:01:08,730
I have a Hummer for next week. All right, so let's check out that Kansas bridge you all may have navigated here previously.

11
00:01:08,970 --> 00:01:12,420
Is there anybody from the waitlist who does not have access to the campus?

12
00:01:12,660 --> 00:01:18,030
I could ask you right now. You can join. All right.

13
00:01:18,030 --> 00:01:24,130
We've got three sections of this class this semester. Y'all are in the Thursday section.

14
00:01:26,130 --> 00:01:34,620
The Wednesday one is over capacity. But I had no if you need to like for a certain week for any reason, go to the Tuesday one.

15
00:01:34,620 --> 00:01:37,890
No problem. I just don't have additional seats in the Wednesday one.

16
00:01:39,240 --> 00:01:42,840
Here is our overview of the semester.

17
00:01:43,320 --> 00:01:47,640
So we'll do an intro today. We'll have two sessions on data management.

18
00:01:48,570 --> 00:01:50,520
For those of you who've engaged in research before,

19
00:01:51,420 --> 00:01:58,920
it's surprising how much time data cleaning takes up and then how little time the data analysis takes up.

20
00:01:58,920 --> 00:02:07,080
So so we'll spend a good ample time emphasizing this, which is realistic to what you may experience in your real world data scenarios.

21
00:02:07,650 --> 00:02:12,720
We'll do graphing, descriptive statistics, hypothesis testing, and then regression model.

22
00:02:12,870 --> 00:02:18,240
And then because oftentimes people this is just spark.

23
00:02:18,250 --> 00:02:23,400
Some are interesting. People want to continue on their own and hopefully that will be the case for you as well.

24
00:02:23,970 --> 00:02:30,000
I have a self-paced or advanced module that you can do yourself and then on here

25
00:02:30,000 --> 00:02:34,799
is a collection of resources that you can do beyond the scope of this class,

26
00:02:34,800 --> 00:02:41,450
including other classes on campus, class free classes on the internet, free books on the internet.

27
00:02:41,460 --> 00:02:50,580
A nice thing about our is a lot of the materials are open access and if you identify additional resources, please feel free to let us know about it.

28
00:02:50,580 --> 00:02:57,480
We can add it up. So this is an evolving list for what people identify are useful, and we can share them with each other.

29
00:02:59,930 --> 00:03:05,270
That's an overview. You may notice there's less required activities before first class.

30
00:03:05,270 --> 00:03:09,110
If you haven't done those yet, please don't panic. You can do these while I'm talking.

31
00:03:11,960 --> 00:03:18,050
So we've got two activities. One is to create a log in with this website called Posit Cloud.

32
00:03:19,010 --> 00:03:25,910
This is the online interface we'll be using for a shared coding environment this semester,

33
00:03:26,540 --> 00:03:34,190
and then to join our class posit cloud workspace, you can follow this invitation like once you have a log in.

34
00:03:36,230 --> 00:03:40,460
I will. Every week I'll create a new art project that will be shared through that same line.

35
00:03:40,940 --> 00:03:44,560
Now I've got some optional steps. So these will be coding in the browser.

36
00:03:44,570 --> 00:03:47,660
If you have a tablet or laptop we can access through there.

37
00:03:48,200 --> 00:03:54,590
But if you prefer to have a local software version of our running, I walk you through these four steps here.

38
00:03:55,930 --> 00:04:00,999
So first would be to install our second it would be to install our studio.

39
00:04:01,000 --> 00:04:06,000
I'll explain what that is. Third would be to create a local folder for all of our class files.

40
00:04:06,010 --> 00:04:11,200
Welcome. Great to see you. And then this last step is just if you have a mac computer.

41
00:04:11,320 --> 00:04:17,290
Since that was built since 2015, there's these two steps here.

42
00:04:18,750 --> 00:04:25,270
Any comments or questions about this access? Did anybody I think we resolve this yesterday.

43
00:04:25,290 --> 00:04:31,710
There was we exceeded the cap here for this law again. But I think we worked with s t on that yesterday.

44
00:04:31,740 --> 00:04:36,300
I think the challenges issues are just more of a question.

45
00:04:36,330 --> 00:04:42,400
Is there any benefit to doing the play on the math instead of on the cloud or they if they don't work, they're there?

46
00:04:42,570 --> 00:04:46,350
In my experience, they were exactly the same and people have different preferences.

47
00:04:46,350 --> 00:04:54,570
So some people prefer to work on their local machine because they want to be able to work when they're not connected to the Internet.

48
00:04:55,050 --> 00:05:01,200
Other people want to work on a web browser because they don't want to chew up Ram on their own machine.

49
00:05:01,210 --> 00:05:06,780
So this is running. All the computing power is running through the our servers.

50
00:05:07,440 --> 00:05:08,759
So there's kind of like tradeoffs.

51
00:05:08,760 --> 00:05:15,780
If you're working some, you can even code this way, like through an iPad or a small tablet because you don't need any computing power actually on it.

52
00:05:16,080 --> 00:05:21,480
So different environments, you might have different preferences at different time.

53
00:05:22,080 --> 00:05:27,840
This is really useful for me for teaching because I'm able to create a uniform environment that everybody has.

54
00:05:28,620 --> 00:05:38,790
You may notice once we get into working on people's personal machines, there's almost infinite combinations of operating things.

55
00:05:38,790 --> 00:05:48,660
With AR you can encounter. There's new versions of our every six months, new versions of packages, the number of error messages multiplies.

56
00:05:48,780 --> 00:05:51,030
And I'm happy to work with you all through this.

57
00:05:51,870 --> 00:05:58,439
And in particular, I've got Student Drop-In hours every Friday, or we can set up other times to help you troubleshoot this.

58
00:05:58,440 --> 00:06:07,400
But I found. This allows us to spend more time coding and troubleshooting hardware activities in class,

59
00:06:07,730 --> 00:06:12,110
but happy to hear different feedback on how that's going for folks.

60
00:06:12,110 --> 00:06:15,680
But yeah. Comments is a great question.

61
00:06:21,080 --> 00:06:26,890
All right. And I guess we'll transition to the syllabus.

62
00:06:27,610 --> 00:06:32,740
There's a link to it here. I just pulled it up in word. Okay.

63
00:06:34,870 --> 00:06:39,099
So my name pronunciation is like a buckle and a ski. But you can call me Kelly.

64
00:06:39,100 --> 00:06:45,910
Dr. B. There's a number of iterations here that I'm happy with my contact information.

65
00:06:46,540 --> 00:06:57,129
Information about dropping hours. Course Description The Laptop Lending Program through the School of Public Health and the University of Michigan.

66
00:06:57,130 --> 00:07:05,500
If you don't have access to a computer right now because they did not give me a computer lab this semester, unfortunately we have no prerequisites.

67
00:07:06,410 --> 00:07:11,540
Here are the learning objectives for the course which you now because you enrolled in it.

68
00:07:11,570 --> 00:07:14,390
Okay, here's the activities we're going to do in class.

69
00:07:15,170 --> 00:07:23,930
So we will have weekly classes, which will be a combination of lecture material and coding, and we'll try to go back and forth with those.

70
00:07:24,320 --> 00:07:28,670
I don't have any required attendance. I'll post.

71
00:07:28,850 --> 00:07:33,920
I'll try to remember to record every time on Panopto and post everything to canvas.

72
00:07:33,930 --> 00:07:40,780
But I do encourage you to come. I think there's value in terms of being able to troubleshoot in the moment, work with your peers.

73
00:07:40,790 --> 00:07:44,869
This is a collaborative activity. We'll have weekly homeworks.

74
00:07:44,870 --> 00:07:52,740
There'll be six of them. I'll drop the lowest one and then invite you to participate in at least three discussion posts.

75
00:07:52,760 --> 00:07:56,360
These will be weekly, but you only have to participate at least three times.

76
00:07:57,530 --> 00:08:05,959
This is to get us used to this idea that when we have a challenge and ah, it's a little different than other commercial coding languages.

77
00:08:05,960 --> 00:08:13,400
For example, if I have a staff program problem, I go to the staff website and ask the staff administrators for help.

78
00:08:14,240 --> 00:08:17,860
It's not really about saying resource for ah, we need to go to each other for help.

79
00:08:17,870 --> 00:08:25,670
So this is going to be our internal way of practicing, asking each other, coding questions and providing each other with coding help.

80
00:08:26,270 --> 00:08:34,570
So kind of making that a two way street and we'll do this internally on a discussion board before I let you loose on the whole Internet where,

81
00:08:34,580 --> 00:08:37,700
you know, comment boards might have a little different tenor.

82
00:08:37,700 --> 00:08:40,910
So we can practice this internally here.

83
00:08:42,800 --> 00:08:47,420
It is a satisfactory, unsatisfactory class per university guideline.

84
00:08:47,420 --> 00:08:54,110
So that's a 70% cut point. I haven't lost anyone yet and I do not believe this will be the time.

85
00:08:54,110 --> 00:09:02,120
We are very excited to do this together. And then here's that make up of that, that grade.

86
00:09:04,770 --> 00:09:11,820
Drop in hours or zoom. There is a number of policies here that you can read about.

87
00:09:12,840 --> 00:09:17,309
I don't have I have no penalty, but there are dates on all of the assignments.

88
00:09:17,310 --> 00:09:22,110
And you can use those to structure yourself so that you can make sure you're keeping pace with the class.

89
00:09:27,910 --> 00:09:32,830
And then at the bottom, we get to the different topics which which we mentioned before.

90
00:09:33,880 --> 00:09:37,030
All right. Let's pause here. How are we doing on expectations?

91
00:09:39,740 --> 00:09:45,170
Thank you for the thumbs up until these symbols from Zoom have stayed on.

92
00:09:46,460 --> 00:09:49,400
Okay. And then the other logistical thing I wanted to mention,

93
00:09:49,400 --> 00:09:56,870
so each of these different modules of the class are going to have their own page that follows a similar structure.

94
00:09:57,860 --> 00:10:07,940
So we start with the learning objectives through all this, and they start with the learning objectives, and we've got the PowerPoint slides.

95
00:10:09,470 --> 00:10:16,459
The class posit workspace. You can see we have a little bit of chaos yesterday because it wasn't putting out Enron.

96
00:10:16,460 --> 00:10:20,200
And but you all should be in right now. And then there'll be links to the recordings.

97
00:10:22,190 --> 00:10:28,520
We've got links to the homework assignments. You can see this one here.

98
00:10:29,660 --> 00:10:38,420
So here I asked you to submit your code and your answers together in one either document PDF or it QML file.

99
00:10:40,040 --> 00:10:50,599
And then here is the discussion thread. So there are some tips for how to ask good coding questions.

100
00:10:50,600 --> 00:10:56,900
This is a skill like any other to practice. They give you some feedback on how to do it, but in general it's things like.

101
00:10:59,280 --> 00:11:05,820
If you say something very general like it doesn't work, that's hard.

102
00:11:05,850 --> 00:11:08,670
There's nothing for anyone to grab on to to try to troubleshoot.

103
00:11:08,970 --> 00:11:15,720
So the more specific you can be in terms of saying, here's the code I provided and here's the output I receive,

104
00:11:16,350 --> 00:11:21,360
that gives people something to marinate on and to think about what could be the issue.

105
00:11:21,930 --> 00:11:27,030
But generally, statement, like nothing's working, those are harder to work by.

106
00:11:27,040 --> 00:11:33,480
So so there's some guidelines here to try to protect us from giving some of those details.

107
00:11:35,360 --> 00:11:36,250
And then.

108
00:11:37,010 --> 00:11:46,730
And if you send me an email with a question like this in it with a that's not like a personal nature question, you send me a general code in question.

109
00:11:46,940 --> 00:11:54,430
I will just post it to the discussion board anonymously and so that we can I can provide my response there.

110
00:11:54,440 --> 00:11:58,460
So because any time you have a question, somebody else is going to have it, too.

111
00:11:58,670 --> 00:12:04,280
And we want to make sure everybody's getting access to that same information down the bottom of each class page.

112
00:12:04,310 --> 00:12:10,160
I've got a number of optional readings and resources, including our has a lot of these cheat sheets.

113
00:12:11,370 --> 00:12:16,800
And when I first started coding, my cubicle was covered in many things.

114
00:12:17,040 --> 00:12:22,370
So just like, okay, here's a bunch of functions that I might need or something like this.

115
00:12:22,380 --> 00:12:28,530
So it's a one pager with a lot of useful information on there, if you like, or there are.

116
00:12:30,220 --> 00:12:35,710
Some, if you prefer, more of a textbook approach to reading about some of these things.

117
00:12:36,310 --> 00:12:42,100
I highlighted a number of chapters here. And as I said, all these things are freely available on the Internet.

118
00:12:43,190 --> 00:12:46,840
So certainly you might find different these authors resonate with you.

119
00:12:50,890 --> 00:13:03,660
Right. I think that concludes my overview of the canvas site.

120
00:13:03,820 --> 00:13:06,330
Any. Comments there.

121
00:13:08,230 --> 00:13:14,850
One thing about teaching three sections I need to double check to make sure I didn't just say it yesterday, but I actually said it today.

122
00:13:14,860 --> 00:13:24,310
This start to merge in my brain. Okay, so I just realized that I'm in the online section and I felt like we had class like Wednesday and Thursday.

123
00:13:24,850 --> 00:13:32,140
So I came yesterday. Yeah. I was like, hey, I like to submit to it is exactly familiar.

124
00:13:32,250 --> 00:13:38,200
You you are welcome to bounce. You know, they you.

125
00:13:38,970 --> 00:13:42,400
Sorry about the confusion. Yeah.

126
00:13:43,020 --> 00:13:46,750
Yeah, that was my fault. I, like, saw the announcement. I was like, oh, we have to.

127
00:13:46,810 --> 00:13:52,900
That's weird. I know. I was hoping I sent that one to the Thursday section so I may have.

128
00:13:53,710 --> 00:13:58,270
Yeah, I think. Yeah, because section one is one.

129
00:13:58,570 --> 00:14:01,660
Mm hmm. Okay. Yeah, I'm I'm like, okay.

130
00:14:02,890 --> 00:14:07,750
Yes. Thank you. I'm glad we raised that before you spent the whole 2 hours with us again.

131
00:14:08,950 --> 00:14:17,799
Sorry, but I had nothing to give to check out any other comments.

132
00:14:17,800 --> 00:14:23,270
Questions about the mall next to an activity that was familiar to you from yesterday.

133
00:14:23,270 --> 00:14:27,910
I will do some introductions. Okay. So I'd like to know a few things about all of you.

134
00:14:29,530 --> 00:14:34,240
I'd like to know your name if. If you're comfortable sharing your pronouns.

135
00:14:35,140 --> 00:14:40,360
No pressure there. I'd like to know what program you're in, and I'd like to know why you're taking this class.

136
00:14:40,360 --> 00:14:46,030
Because this is an elective. You don't have to be here, and we can tailor it a little bit to different people's needs.

137
00:14:46,330 --> 00:14:49,780
So I'll share a little bit about myself. As I said, my name's Kelly Mikulski.

138
00:14:50,290 --> 00:15:00,339
I use she her pronouns. I'm assistant professor in my epidemiology department and what I'd be excited about are was I was a real laboratory scientist.

139
00:15:00,340 --> 00:15:08,780
I was generating a lot of data in the lab and I made these DNA methylation data files that I didn't I didn't know how to open.

140
00:15:08,780 --> 00:15:10,359
And they had the A file extension,

141
00:15:10,360 --> 00:15:21,460
meaning the letter is after the file name or a dot by the A T and I couldn't find any software that would open that files.

142
00:15:21,670 --> 00:15:24,910
SAS wouldn't do it, Excel wouldn't do it, SPSS wouldn't do it.

143
00:15:25,390 --> 00:15:28,150
I came across a thread on the internet that said you could do it in R,

144
00:15:28,150 --> 00:15:36,430
so my journey to R came out of desperation fueled during a dissertation, and that was about in 2009.

145
00:15:37,300 --> 00:15:44,500
And I it just has opened so many doors for me along the way and I've really, really enjoyed it ever since.

146
00:15:44,500 --> 00:15:48,220
So I'm excited to be able to share what are with you.

147
00:15:48,880 --> 00:15:52,600
A little bit of my time was spent for a while.

148
00:15:52,620 --> 00:16:00,729
I would co code so I would do data management and SAS and my analysis and R but then eventually I switched over to R.

149
00:16:00,730 --> 00:16:05,530
So you may find different transitions or workflows work better for you.

150
00:16:05,800 --> 00:16:10,480
I think R has upped its data management game since then, so it might be a little more friendly on that front.

151
00:16:11,140 --> 00:16:14,590
But yeah, so if you don't mind sharing your name pronouns,

152
00:16:14,590 --> 00:16:22,180
if you like program and why you're studying here and as a student who always used to sit in the back,

153
00:16:22,180 --> 00:16:27,100
if you don't mind indulging me, I'd love to start in the back. Really, I'm an only.

154
00:16:27,500 --> 00:16:35,680
You see her pronouns. I'm in the methods in genealogy program and I in which you can refer to my understanding.

155
00:16:36,460 --> 00:16:44,890
And then I use R in courses before and, and just getting to know a little bit better, it's a pretty important element.

156
00:16:44,920 --> 00:16:47,500
Okay. So there is some familiarity here. I'm glad I missed them.

157
00:16:48,670 --> 00:16:59,229
And I'm Hannah as a second year Masters in Global Health AP and she has knows I have done a lot going and sass and

158
00:16:59,230 --> 00:17:05,200
kind of have done some an R but I don't have like that face knowledge that I want the things that things are.

159
00:17:05,230 --> 00:17:10,700
I think what we're going to have to have to go back to the days of nineties.

160
00:17:10,720 --> 00:17:16,990
Yeah. And it's always interesting to when you start to become multilingual and you can transfer over some of the things you learn.

161
00:17:16,990 --> 00:17:20,530
And another language. Yeah, please. So my name is Nabil.

162
00:17:20,620 --> 00:17:29,770
I am a second year master's. Then in the epidemiology program I use she her pronouns and I'm an hour later.

163
00:17:29,980 --> 00:17:36,160
Oh okay. So I've heard that's good to admit it out loud at the front.

164
00:17:37,060 --> 00:17:44,440
I support SAS all the way. Okay, but Dr. Park is my advisor and he.

165
00:17:45,460 --> 00:17:48,790
He said I should take this class to be an R hater.

166
00:17:49,420 --> 00:17:53,799
Okay. You know, Dr. Park has given me a lot of advice over the years.

167
00:17:53,800 --> 00:17:57,040
He's never seen me off, so I'm all right. This is good.

168
00:17:57,040 --> 00:18:00,159
I'm. I'm. Now I have a mission. I'm really trying to win you over.

169
00:18:00,160 --> 00:18:04,210
I'd be happy to support, but if you don't like it, no problem. My apologies.

170
00:18:04,570 --> 00:18:09,780
Yeah. Thanks for being open to that. That's. I am Andrew.

171
00:18:10,110 --> 00:18:13,340
Keith in a second here and then maybe just a program.

172
00:18:13,800 --> 00:18:17,760
And what does that stand for if people aren't sort of health services administration things?

173
00:18:18,270 --> 00:18:24,070
And I figured that it would be good for most people to have some kind of familiarity with that analysis.

174
00:18:24,090 --> 00:18:27,260
So that's what I hear. Oh, great. Okay.

175
00:18:28,080 --> 00:18:32,940
I'm Alex. Is he him? And then I'm a senior in the undergraduate program.

176
00:18:33,030 --> 00:18:38,760
Right. And I had accepted a job post-grad. And I was going to have, like, some sort of data analysis work.

177
00:18:38,770 --> 00:18:44,970
And I had some experience with, like, my applied stats minor stuff, but I kind of I refresher an hour before I jump into my career.

178
00:18:45,570 --> 00:18:48,570
Great. Yeah. Happy to get you prepared for the workforce.

179
00:18:48,660 --> 00:18:51,840
Congratulations. I'm losing my pronouns.

180
00:18:51,840 --> 00:18:59,100
Are she her? I'm also a senior in the undergrad program, and I got her like a little bit of, like,

181
00:18:59,250 --> 00:19:05,280
intern are like other stats for his, but nothing that, like, really goes too in-depth.

182
00:19:05,280 --> 00:19:08,819
So I'm eager to learn a little bit more about it. Oh, great.

183
00:19:08,820 --> 00:19:12,870
Thanks. Yeah. Okay. So this is helpful for me to kind of see what's the prior experience level.

184
00:19:13,060 --> 00:19:20,310
Yeah. Hi, everyone. My name's Brian and I am in the Masters of Science in Clinical Research Program.

185
00:19:22,560 --> 00:19:30,120
Oh, I'm sorry. I use him pronouns as well. And the reason I'm here is I'm also enrolled at the medical school here.

186
00:19:30,690 --> 00:19:34,169
And there is the same of the words I was going to use for this.

187
00:19:34,170 --> 00:19:40,920
There was a huge emphasis on research and like an expectation and these skills are kind of developed along the way.

188
00:19:41,160 --> 00:19:44,700
So just while you're learning all those other skills related to clinical medicine.

189
00:19:46,370 --> 00:19:52,830
And so yeah, I'm just trying to get a head start on it and I look forward to learning more about ah,

190
00:19:53,070 --> 00:19:59,860
how critical this is, why we've got people from all kinds of programs that Ira and Stephen had done.

191
00:19:59,940 --> 00:20:11,680
And I know this is 3:00 now and I want to know more about the AI, because I knew that this was too much a distraction.

192
00:20:11,760 --> 00:20:17,399
Oh, it's never too much. Yeah. I want to learn more about the nice.

193
00:20:17,400 --> 00:20:21,050
Okay. Agree on some things with the substance.

194
00:20:21,480 --> 00:20:26,250
Yeah, that's great. Yeah. Just give me another option if you want to know.

195
00:20:26,670 --> 00:20:38,280
Right. Hey, I'm Jordan. I am. I'm part of the hospital molecular epidemiology program, so public health and I use are once in my house that person.

196
00:20:38,280 --> 00:20:42,100
I never picked it up again. That's okay.

197
00:20:42,170 --> 00:20:47,670
Okay. So yeah I just think I might as I'm learning multiple because they only talk about

198
00:20:47,670 --> 00:20:53,070
them both in all my classes I don't have I just ignored our family talks about that.

199
00:20:53,220 --> 00:20:56,660
So I figured I should like, learn. Yeah, yeah, sure.

200
00:20:56,900 --> 00:21:02,250
I understand the moment. You can only take in so much, and maybe this will be the time to take it a little.

201
00:21:02,250 --> 00:21:08,150
Ah, okay. So I'm excited to get to know you all and I hope you're able to get to know each other and try to each other.

202
00:21:08,170 --> 00:21:12,180
Sounds like there's a range of comfort levels with ah and experience with ah.

203
00:21:12,420 --> 00:21:18,180
So please, you know, bring some that spirit of collaboration and helping each other troubleshoot anyway.

204
00:21:19,300 --> 00:21:30,550
Right. I think we all do some overview about um, well we'll do some introduction to our end product.

205
00:21:31,950 --> 00:21:37,320
All right. So our goal is right here is to know what is, ah, why we should use it.

206
00:21:38,340 --> 00:21:41,040
We're going to become familiar with the posit cloud interface,

207
00:21:41,040 --> 00:21:45,840
which is that shared interface we'll use for this class, and then we'll learn about how to use R as a calculator.

208
00:21:48,870 --> 00:21:55,920
Right? So what is ah ah is this comprehensive statistical and graphical programing, language and environment?

209
00:21:56,790 --> 00:22:01,380
And it's available through something called cram the comprehensive ah archive network.

210
00:22:01,980 --> 00:22:05,490
So this is the same link there if you want to download this to your personal computer.

211
00:22:09,990 --> 00:22:19,410
This transition happened in November, which was midway through me teaching in this class and I think also didn't create any confusion at all.

212
00:22:19,590 --> 00:22:28,020
So I apologize in advance of my verbiage is still a little bit mixed between these two because I'm I'm working to make the switch.

213
00:22:28,020 --> 00:22:33,630
But in November, they switched their naming from our studio to pause it because they wanted to.

214
00:22:35,470 --> 00:22:44,590
Rebrand and make it more open to other programing languages, because always in our studio you can code in more languages than just ah,

215
00:22:44,920 --> 00:22:48,160
you can code in, type out all kinds of languages in our studio.

216
00:22:48,370 --> 00:22:51,570
And they felt that people weren't really noticing that because they had news.

217
00:22:52,300 --> 00:22:54,340
So now they've got this more broad name opposite.

218
00:22:54,790 --> 00:23:00,220
So if you like, once you learn this platform, you can use it to code in other languages in the future.

219
00:23:01,300 --> 00:23:06,070
So this is a console to make, ah, and these other languages more user friendly.

220
00:23:06,640 --> 00:23:09,670
So to work on this, you need both. So like this is the.

221
00:23:11,230 --> 00:23:16,400
Actual software like the. The engine that's working under the hood.

222
00:23:16,400 --> 00:23:22,370
And then this is the pretty graphical interface that makes it more, uh.

223
00:23:23,480 --> 00:23:27,780
Accessible for us to use. Now there's a third thing.

224
00:23:28,860 --> 00:23:32,909
This is posit cloud. This is what we're going to use in class so that we can have a shared environment together.

225
00:23:32,910 --> 00:23:34,530
And we're going to do this through the web browser.

226
00:23:34,860 --> 00:23:41,100
This is essentially the exact same thing as this just offered on a web browser instead of running through your personal computer.

227
00:23:44,240 --> 00:23:50,240
Yeah. It's it's a it's a recent change, but we're we're we're making work.

228
00:23:50,960 --> 00:23:55,400
So I asked some of you why you were excited to learn. Ah, and that was really helpful for me to learn about some of them.

229
00:23:55,670 --> 00:24:02,180
Here's a few of the reasons why I was excited to learn ah and why I stuck with it over time.

230
00:24:02,510 --> 00:24:08,120
And maybe some of these will resonate with you. We'll see. One thing that I really value about it is that it's free.

231
00:24:08,240 --> 00:24:20,480
So for folks working on research projects, particularly in low income settings, buying that license for $100 every year can be limiting.

232
00:24:21,320 --> 00:24:25,070
AH is freely available to download for everybody at any time.

233
00:24:25,370 --> 00:24:30,170
So that means some of this research infrastructure available more widely.

234
00:24:30,500 --> 00:24:34,040
It's also for me, it's computationally very fast and efficient.

235
00:24:34,670 --> 00:24:39,920
I work with some genetics data sets that might have 25 million entries an hour.

236
00:24:39,920 --> 00:24:46,490
Doesn't even blink at that. So it's got some of these nice structural components that are effective for me.

237
00:24:47,390 --> 00:24:53,299
I also like that it runs on many platforms, so you all might have Windows Machine units.

238
00:24:53,300 --> 00:25:02,120
These are these are typically affiliated with high performance computing clusters, of which I do a lot of my work on Mac.

239
00:25:02,120 --> 00:25:04,249
And as you'll see in the class, what works on a web browser.

240
00:25:04,250 --> 00:25:08,870
So it's it's very adaptable to whatever computing resources you have available at the moment.

241
00:25:10,910 --> 00:25:16,219
I love the graphics of ah, you can take entire classes on graphics and ah,

242
00:25:16,220 --> 00:25:24,950
I'm pretty sure I got my postdoctoral fellowship because I presented a graphic and then I was like, Oh, I would like images like that in my lab.

243
00:25:25,130 --> 00:25:33,560
So using graphics to present our research can extend the audience we're able to reach can can really aid

244
00:25:33,560 --> 00:25:41,240
in communication and ah is really infinitely customizable to help you share your public health messages.

245
00:25:42,920 --> 00:25:51,110
Another thing I really like about R is it has advanced statistical methods that are not yet available in other programs because as we'll see,

246
00:25:51,110 --> 00:26:01,550
R can be updated every day. So if somebody releases a new manuscript, they often will tie it with an R package so that people can use it right away,

247
00:26:02,060 --> 00:26:06,380
whereas SAS might only come out with a new version once a year. There's a little bit more of a lag there.

248
00:26:09,530 --> 00:26:14,899
And this is true of all coding languages. But the research is really reproducible.

249
00:26:14,900 --> 00:26:18,740
We can share our code with other folks. We can make sure that we can.

250
00:26:21,530 --> 00:26:27,140
R Our research has more rigor. We can replicate the work that's that's been done.

251
00:26:27,920 --> 00:26:32,120
And then there's something called open access and open source that I really value here.

252
00:26:34,190 --> 00:26:37,180
So can anybody help me out? Anybody familiar with either of these terms?

253
00:26:37,200 --> 00:26:44,690
You know what it means to be open access or open source or slightly different from comments or concepts.

254
00:26:49,700 --> 00:26:59,270
I hear this before? Yeah. So it's like there's not just one, like, company or person, and it's those that can be kind of influenced by everyone,

255
00:26:59,280 --> 00:27:07,190
obviously going through like checks and stuff, but it is available to be attended to by anyone.

256
00:27:07,520 --> 00:27:11,089
Exactly. This is open source concept, this transparency.

257
00:27:11,090 --> 00:27:21,210
So and I'll click through to that. So that is like the source code where the software is available for anybody to use study to critique,

258
00:27:21,530 --> 00:27:25,309
make updates, make requests to it, and distribute anybody for a purpose.

259
00:27:25,310 --> 00:27:30,469
So that gathers the ethics and the values behind it are one of transparency.

260
00:27:30,470 --> 00:27:33,770
It's not some, like, proprietary secret that they're keeping him.

261
00:27:35,030 --> 00:27:42,020
Thanks for chiming in about that. And then open access is this idea that the software is free and immediately available.

262
00:27:43,700 --> 00:27:49,399
Can anybody think are my or is this like pinging anyone spidey senses?

263
00:27:49,400 --> 00:27:56,170
Are there any concerns about an issue that might come up if anyone can make edits to things?

264
00:27:56,180 --> 00:27:59,300
Is there something we should watch out for as we're going forward?

265
00:28:01,460 --> 00:28:05,680
We now know the code available is correct. Ah, yeah, yeah.

266
00:28:06,250 --> 00:28:08,950
It was written by other humans. There might be some errors in there.

267
00:28:09,520 --> 00:28:20,470
So one of the things we'll talk about are ways to logic check our work, ways to minimize the problems that might arise due to this.

268
00:28:20,710 --> 00:28:26,140
So there are some values to these commercial companies because that code has been commercially vetted.

269
00:28:27,280 --> 00:28:31,690
And they're potentially they're like name is on the line for reliability.

270
00:28:31,930 --> 00:28:36,969
So some processes like, um, I think what the FDA process right now,

271
00:28:36,970 --> 00:28:45,790
they still require their analysis for drug approvals to be done through SAS because of that commercial.

272
00:28:46,170 --> 00:28:51,130
Um, so being multilingual does make you flexible to different environment.

273
00:28:51,520 --> 00:28:54,850
So the time you spent in some of these other languages is definitely useful,

274
00:28:55,060 --> 00:29:02,710
but we'll practice ways to get around this potential challenging area in our going forward.

275
00:29:04,900 --> 00:29:09,550
Like you all are talking about and some of your reasons for wanting to take this class.

276
00:29:10,210 --> 00:29:14,470
It's been increasing in terms of indeed.com is a job posting on site.

277
00:29:14,980 --> 00:29:21,910
So we see AR and SAS are kind of in a similar area in terms of job postings requiring them.

278
00:29:23,320 --> 00:29:33,459
Here's a plot about traffic by industry to ah to how do you see kind of what industries are you seeing on the x axis is 2016 and the Y axis is 2017.

279
00:29:33,460 --> 00:29:38,650
So one's above that x y line are increasing in usage.

280
00:29:38,650 --> 00:29:43,870
So academia is this big one. Healthcare, government consulting, insurance, energy.

281
00:29:43,870 --> 00:29:48,549
So there are all kinds of different fields are finding their way to R And then

282
00:29:48,550 --> 00:29:53,650
probably the plot that is my favorite comes from a website called Stack Overflow,

283
00:29:53,650 --> 00:29:57,549
which is a troubleshooting website that we are going to use throughout the class.

284
00:29:57,550 --> 00:30:06,310
There's all kinds of helpful information on there, but they ask how disliked is each programing language among their users?

285
00:30:08,020 --> 00:30:17,110
You see, nobody likes Perl. There's different languages here, but all the way down at the bottom is ah, so ah is the least disliked among programmers.

286
00:30:17,110 --> 00:30:19,059
So I hope as you're in there,

287
00:30:19,060 --> 00:30:28,150
once you get to use ah a little bit you may not just like ah you might be in this like 99% of people who, who don't dislike.

288
00:30:28,150 --> 00:30:33,750
Ah that's a lot of negatives right there, but I think that's the same iris is potentially slightly more popular.

289
00:30:33,790 --> 00:30:41,770
I'm sorry. I'm on the line. One thing to keep in mind, though, are as constantly evolving.

290
00:30:42,070 --> 00:30:53,890
It's if you want some code today, it might not be continuous to next year or a couple of years down the line.

291
00:30:54,190 --> 00:31:00,159
So something that we're going to practice throughout this class and if anything sticks with you for my teaching,

292
00:31:00,160 --> 00:31:03,430
I hope you hear my voice kind of reverberating in your head.

293
00:31:03,430 --> 00:31:06,430
These three questions. Before you run any code.

294
00:31:07,420 --> 00:31:12,370
Ask yourself, what do you expect? Now you run your code and see what you get.

295
00:31:13,120 --> 00:31:16,389
And then ask yourself, Do they match? So what do you expect? What do you get?

296
00:31:16,390 --> 00:31:21,100
Do they match? So that we're always using our.

297
00:31:22,190 --> 00:31:28,640
Expertise to think through. Do these results even make sense or has something gone awry there?

298
00:31:29,390 --> 00:31:33,140
SAS has a really nice error messaging system,

299
00:31:33,470 --> 00:31:38,750
but there's a lot of heterogeneity in our in terms of how much information you get in those error messages.

300
00:31:38,780 --> 00:31:41,960
So we've got to we've got to start paying attention throughout this process.

301
00:31:45,890 --> 00:31:54,740
I'd like you to be realistic and come in. Expect have a steep learning curve because there's a different sets of authors.

302
00:31:54,740 --> 00:31:59,120
So R can be authored by anybody. You can start writing our packages.

303
00:31:59,720 --> 00:32:04,040
So there's a lot of functions there. Can anybody help me out?

304
00:32:04,190 --> 00:32:08,710
If you took some of the SAS classes here at U of M, can you.

305
00:32:08,720 --> 00:32:12,560
I'm like, what order of magnitude of how many products do now in SAS?

306
00:32:15,440 --> 00:32:22,370
Yeah. I'm 30. You're on 30? Yeah. Somewhere around the magnitude of pens, you know, there's, like, freak was always my favorite.

307
00:32:22,370 --> 00:32:27,920
What have you got to feel this. But there are thousands of.

308
00:32:29,280 --> 00:32:34,410
Functions in are. And that's largely because there's another layer of development.

309
00:32:34,680 --> 00:32:42,930
So in SAS, the company makes the products you use the products here and are a user makes a package or a library for our class.

310
00:32:42,930 --> 00:32:49,469
We're going to use those terms interchangeably. That package, your library contains functions and then you use the functions.

311
00:32:49,470 --> 00:32:54,000
So there's another layer here where there are many, many offers.

312
00:32:54,780 --> 00:32:58,320
So there might be different preferences of those different authors.

313
00:33:00,330 --> 00:33:04,290
What this also means is that there is a lot of combinations of ways to achieve your goal.

314
00:33:04,290 --> 00:33:09,240
So if you're working with your colleague on your coding and you both have completely different approaches, that is fine.

315
00:33:09,390 --> 00:33:13,260
That is great. That's wonderful. Every semester I learn new ways of doing things.

316
00:33:14,130 --> 00:33:17,670
So variety is excellent in here.

317
00:33:17,670 --> 00:33:21,120
We're not trying to have a uniform style here.

318
00:33:23,820 --> 00:33:30,719
Another thing it is easy to make mistakes and not notice it because all these authors might

319
00:33:30,720 --> 00:33:37,140
have differing preferences for how much time they want to commit to annotating error messages.

320
00:33:37,740 --> 00:33:43,620
So that's why we'll go through these logic checks throughout and lots of practice deciphering some of the error messages that they do provide.

321
00:33:45,540 --> 00:33:50,399
So we're on to focus on some of the fundamental building blocks we will not get to all thousands of those are packages.

322
00:33:50,400 --> 00:33:54,420
That's not like a feasible kind of thing.

323
00:33:54,420 --> 00:33:59,639
But we'll try to practice. If you want to go and learn a new function,

324
00:33:59,640 --> 00:34:06,810
how do we go about experimenting with a learning a new function so that you can continue to build that going forward?

325
00:34:08,220 --> 00:34:12,190
All right. Oh, pause there, because that makes sense conceptually what we're up to.

326
00:34:12,270 --> 00:34:15,960
Why are there ways that validate some of your choices, hopefully to take those back?

327
00:34:19,630 --> 00:34:22,780
All right. And we're going to talk about the posit cloud class interface.

328
00:34:23,140 --> 00:34:26,920
So hopefully you received an invitation or have followed the invitation length.

329
00:34:27,700 --> 00:34:32,350
And then this should be what it looks like up there. So they're showing me this overall class workspace.

330
00:34:32,950 --> 00:34:36,610
Nick Jackson's the I.T. director.

331
00:34:37,060 --> 00:34:40,480
So he's the owner of this site. There's me under contract.

332
00:34:40,480 --> 00:34:46,150
There's going to be projects for each class. Right now, there's only one. I'm going to add a bunch more or one more every week.

333
00:34:46,960 --> 00:34:52,210
There's the members so you can see everybody in the class. And then there should be a personal account profile here.

334
00:34:52,210 --> 00:35:06,720
I'm logged in my student account. Under her content, you should be able to see my instructor account introduction class.

335
00:35:08,520 --> 00:35:12,000
So each class session on have a project shared by the instructor.

336
00:35:13,590 --> 00:35:19,530
Only one person can be in here at a time. So if you are if you go in and then you go in, you're going to ping pong him out.

337
00:35:20,100 --> 00:35:26,400
So what we're going to do is instead of everybody trying to enter the same project,

338
00:35:27,150 --> 00:35:30,930
you're going to click the copy button and make a personal copy of the project.

339
00:35:31,650 --> 00:35:39,510
So then I'll pop up your own personal copy of the project that now you can edit, make changes, save it, revisit it later.

340
00:35:40,080 --> 00:35:43,530
So if you start your homework, you can come back two days later.

341
00:35:43,770 --> 00:35:47,099
It'll be maintained in that way. Okay. So click copy.

342
00:35:47,100 --> 00:35:52,930
My. My instructor. Want to make your own copy there? Right.

343
00:35:52,960 --> 00:35:59,170
Once you're in your own personal copy of your closet session, here's what it's going to look like.

344
00:35:59,890 --> 00:36:07,060
And they should look the same, whether you're on your personal computer around the club or it's going to have this four panel display.

345
00:36:07,960 --> 00:36:12,700
We'll go through each of these panels so that in the lower left hand corner, this is your art console.

346
00:36:12,700 --> 00:36:18,019
This is where we're actually interacting with the software. In the upper left.

347
00:36:18,020 --> 00:36:21,800
This is our code editor. This is where we are typing our code.

348
00:36:23,960 --> 00:36:29,930
In our upper right. This is the environment. This is where all of our data sets and environment is currently empty.

349
00:36:29,930 --> 00:36:34,970
We don't have any data sets in there yet. And then the lower right is the catchall.

350
00:36:35,240 --> 00:36:43,280
So there's a bunch of tabs. There's the files that I'm sharing with you will be plots when we make graphics,

351
00:36:43,280 --> 00:36:47,210
the help viewer, which we'll use to troubleshoot all kinds of stuff here.

352
00:36:47,660 --> 00:36:53,450
So we've got these four basic structures and I'll go through each one of those in a little bit more detail.

353
00:36:54,860 --> 00:37:02,020
When you want us to copy the version that you created, you want us to save it as something specific or.

354
00:37:02,300 --> 00:37:09,620
Okay, yeah, it will. I will not go into your personal copy unless you ask me to help.

355
00:37:09,620 --> 00:37:16,399
So I'll have you submit your homeworks through canvas so your personal project is yours to do whatever you like,

356
00:37:16,400 --> 00:37:21,110
but you have to develop any kind of naming conventions you prefer along the way.

357
00:37:22,250 --> 00:37:33,799
Yeah. Should. So the basic principles of coding is there's going to be a couple of people involved.

358
00:37:33,800 --> 00:37:38,810
So you you're the programmer. The first step is you're going to generate input.

359
00:37:39,500 --> 00:37:46,549
There's a bunch of people use a bunch of different words for the same thing. So it might be called commands, coding, whatever.

360
00:37:46,550 --> 00:37:51,530
This is a text in the language or you're going to generate the code, write the commands.

361
00:37:51,920 --> 00:37:55,400
This is like putting things in and that's in the upper left hand corner.

362
00:37:55,430 --> 00:38:01,070
This is when you're writing code. It doesn't automatically transfer to R though.

363
00:38:01,280 --> 00:38:07,160
There is this next step where you, the programmer, have to decide what code you want to submit or run.

364
00:38:08,270 --> 00:38:13,010
So not all the code you write will necessarily get run unless you tell it to run it.

365
00:38:14,090 --> 00:38:17,030
And then once you run it, the software gets involved.

366
00:38:18,080 --> 00:38:24,320
So it's going to process that information and provide more text in the language of our we call this either output or results.

367
00:38:24,980 --> 00:38:29,660
So I'm just right. We kind of have a fuzzy we use a lot of these terms interchangeably.

368
00:38:29,660 --> 00:38:35,450
So I want to make sure they're all together. And then you have another role of a programmer where you have to interpret these very well.

369
00:38:35,780 --> 00:38:40,580
You may even see there's some A.I. programing, ah, and A.I. coming out.

370
00:38:41,150 --> 00:38:48,170
But so those things have a real while interpret that there's still a role for scientists in doing.

371
00:38:48,590 --> 00:38:53,059
Okay, so you're going to write code submitted and then interpret the output.

372
00:38:53,060 --> 00:39:00,650
Those are your roles in that lower left hand corner is the art console.

373
00:39:00,770 --> 00:39:04,489
This is where we are interacting with the R software. This is temporary.

374
00:39:04,490 --> 00:39:06,050
Nothing's getting saved here.

375
00:39:06,530 --> 00:39:13,670
Okay, so now always we make sure we're saving the code up above, but when we want to submit code, it'll get submitted down to here.

376
00:39:14,510 --> 00:39:18,080
It's R it's going to use color to let us know what's going on.

377
00:39:18,200 --> 00:39:25,850
So any of the output is in black and any of the input that we provide is going to be in royal blue.

378
00:39:26,750 --> 00:39:32,270
Right. So color is going to be important here. And then we have the symbol at the bottom.

379
00:39:34,280 --> 00:39:38,650
This. Kind of like a carrot facing, right?

380
00:39:39,400 --> 00:39:46,270
It's called a command prompt. I spent my whole first day coding and I thought I had to type that and nothing would work anyway.

381
00:39:46,480 --> 00:39:52,450
You don't have to type this. This is just, ah, telling you that it's ready to accept input.

382
00:39:53,470 --> 00:39:57,810
So if at any time you don't see a command prompt, it's still thinking about the last thing you told it to do.

383
00:39:57,820 --> 00:40:02,350
So just wait. Maybe you need to restart like something will happen.

384
00:40:02,860 --> 00:40:09,010
But so when you see the command prompt, this is when you are ready to receive code or have code be submitted.

385
00:40:11,860 --> 00:40:20,050
And then in the upper left hand corner, here's the code editor. So this is a screenshot of the first code file we're going to work on.

386
00:40:20,830 --> 00:40:25,270
And this is how you tell art to do actions. It can be saved if be run later.

387
00:40:25,930 --> 00:40:30,070
So while the console was temporary, this is what you would share with your colleagues.

388
00:40:30,510 --> 00:40:35,380
I'm sorry. I just think about this for a minute. Even if you've never coded an hour before.

389
00:40:35,680 --> 00:40:38,920
Our brains are very good at picking up patterns.

390
00:40:39,280 --> 00:40:44,770
Can you notice any patterns in here and repeating motifs?

391
00:40:45,170 --> 00:40:50,740
Any symbols that you see? And we can talk about what might be some meaning behind it.

392
00:40:51,370 --> 00:40:54,250
Because I think our brains are very good at picking up patterns.

393
00:40:54,550 --> 00:41:01,210
And then you'll notice in the future when those patterns get when there is deviation so that that can help you troubleshoot on the way.

394
00:41:01,750 --> 00:41:05,770
So let's see. Does anybody notice any patterns right now?

395
00:41:06,480 --> 00:41:10,020
Now you check the comments. Are you ready?

396
00:41:10,270 --> 00:41:15,740
And they start with their hashtag. Beautiful. So we're seeing this repeated motif with the hashtags.

397
00:41:16,060 --> 00:41:20,860
And we notice wherever they appear, the that in any text after them is green.

398
00:41:21,220 --> 00:41:27,730
These are comments. These are notes yourself. And you can write those notes on a fresh line or even about halfway through the line.

399
00:41:28,630 --> 00:41:32,740
So anything after them becomes a note and our is going to ignore that.

400
00:41:32,740 --> 00:41:39,640
Those are just for your personal tastes. Um, I love to put notes in there because if I come back a month later, I don't remember anything.

401
00:41:40,120 --> 00:41:43,779
So I encourage you to take a lot of notes. That's a great thing to notice.

402
00:41:43,780 --> 00:41:48,520
Does anybody notice any other. You don't have to know what they mean.

403
00:41:48,760 --> 00:41:52,360
So you might notice any patterns or repeating symbols.

404
00:41:59,380 --> 00:42:02,470
Yeah. Numbers aren't blue. Yeah, numbers are blue.

405
00:42:02,650 --> 00:42:11,139
So we see real blue for our numbers. So this is helpful to if at any time our numbers start to appear green or something like that,

406
00:42:11,140 --> 00:42:18,400
then then we know there's something wrong and we're going to look to where that change begins because maybe there's something to change there.

407
00:42:18,820 --> 00:42:28,180
Yeah, some numbers are showing up in blue. Anything else? It's not.

408
00:42:31,160 --> 00:42:38,990
So there's this great white pattern going on and it seems like it's indicated by these three little dashes or whatever.

409
00:42:39,880 --> 00:42:43,280
I don't know what that means, but it's something going on.

410
00:42:43,670 --> 00:42:47,120
Yeah. So. And. Yeah, and people don't always pick up on this.

411
00:42:47,120 --> 00:42:48,350
Yeah. So there's not just these.

412
00:42:50,730 --> 00:42:57,030
Notation in the foreground, but in the background there's an I'm impressed that the projector in this building can pick up on it.

413
00:42:57,180 --> 00:43:02,100
So there's places where the background is white and in places where the background is is gray.

414
00:43:02,850 --> 00:43:06,960
And these are fundamentally different sections of the code, and we'll talk about that in a minute.

415
00:43:07,170 --> 00:43:10,620
But when the background is white, this is just free text to yourself.

416
00:43:11,040 --> 00:43:17,550
And the only time we're actually talking to R is this part where the background is gray and the

417
00:43:17,770 --> 00:43:24,030
there is a barricade at the start and the end or like the a sandwich like the bread on a sandwich.

418
00:43:24,240 --> 00:43:28,379
And it starts with these three back ticks. Those are not apostrophes.

419
00:43:28,380 --> 00:43:34,440
That's also something on our back take is on your keyboard in the upper left hand corner above the tab button.

420
00:43:35,310 --> 00:43:41,000
So three back text to start and close and then there's curly brackets in the letter R that's telling it.

421
00:43:41,010 --> 00:43:45,240
We're coding an R this as we said, the software can be used to code in other languages.

422
00:43:45,480 --> 00:43:49,350
So you would put the name of the other language there if you wanted to code in Python or whatever.

423
00:43:50,070 --> 00:43:56,550
Okay. So this is the only part where we're actually coding an R and then this is anything in the white background us free text for ourselves.

424
00:43:57,910 --> 00:44:05,080
That's a great thing to know. What else? There's no, like, semicolons or any kind of end of line indicators.

425
00:44:05,770 --> 00:44:15,669
Yes, exactly. So at the end of the line, if anybody was familiar with coding in SAS previously, you had to underline with a semicolon here.

426
00:44:15,670 --> 00:44:25,150
We don't need to do that. Just if it goes on to a new line with the enter the return key, r assumes that's a new statement.

427
00:44:27,630 --> 00:44:34,810
If. If you're like continuing to write and it wraps to the next level, that's okay.

428
00:44:34,830 --> 00:44:40,650
If you haven't clicked, enter. So as soon as you click enter, it knows it's an outline back to you.

429
00:44:40,970 --> 00:44:47,230
But yeah. It's amazing what the brand can provide on.

430
00:44:49,260 --> 00:44:52,460
So keep using your senses. Keep on paying attention to patterns.

431
00:44:53,600 --> 00:44:58,480
So be great. Another one.

432
00:44:58,530 --> 00:45:01,350
I just want to point out, just like the numbers were in blue.

433
00:45:02,160 --> 00:45:07,290
If we provide character information, it's going to be in green and it's with paired quotes.

434
00:45:09,000 --> 00:45:12,030
So this is like how we provide numeric information.

435
00:45:12,330 --> 00:45:17,700
This is how we provide character information. And these things always have to be paired.

436
00:45:17,880 --> 00:45:21,960
So if we forget to put that second quote sign,

437
00:45:22,230 --> 00:45:26,430
then everything beyond it is going to turn green because it's going to think that quotes are still open.

438
00:45:26,910 --> 00:45:30,690
So that's not what I'm talking about. Like pay attention to the deviations from these patterns.

439
00:45:31,530 --> 00:45:38,580
So quotes have to be paired. Another thing that has to be paired on these rounded parentheses, these square brackets.

440
00:45:38,790 --> 00:45:47,010
These things have to come in pairs. You don't want to leave them open. And we'll talk about what those are great, very observant folks.

441
00:45:47,910 --> 00:45:55,060
So in general are going to use different colors. It's going to use different background colors.

442
00:45:55,080 --> 00:45:57,990
It's going to use some repeating symbols. And we'll talk about what all these mean.

443
00:46:01,590 --> 00:46:05,760
We're doing a specialized set of coding here called markdown coding.

444
00:46:06,570 --> 00:46:15,870
The files are going to have the extension of that. This might be a different style coding than you did in our class or in biostatistics class, right?

445
00:46:15,870 --> 00:46:22,859
You guys coded with a style called the Capital R, so that's just an R script and that's going to have only the code in it.

446
00:46:22,860 --> 00:46:29,300
And that is a perfectly valid way to code. If you go beyond the scope of this class, you're going to like go back to coding style.

447
00:46:29,370 --> 00:46:33,270
No problem. I'll just I'm going to show you what are some advantages to coding this way,

448
00:46:33,720 --> 00:46:38,310
because this is one of the newer aspects of our and I think it's really powerful.

449
00:46:38,820 --> 00:46:48,270
So this is a style of coding, not just has the code on spell organism, the class is the way to bring code and output together, stitch them together.

450
00:46:50,490 --> 00:46:58,080
So this is the anatomy of one of these markdown files. The reason why I think it's so helpful is oftentimes I'd be meeting with students

451
00:46:58,080 --> 00:47:02,100
and they would show me like a figure and I would ask them something about it,

452
00:47:02,100 --> 00:47:06,090
and then they show me code and I'd be like, That code didn't make that figure.

453
00:47:06,180 --> 00:47:14,040
So there are different versions. So there can be issues. Oftentimes in science, we do things many, many times until we get it exactly the way we want.

454
00:47:15,150 --> 00:47:20,610
And by stitching the code and output together in the same report, you always know what is very transparent.

455
00:47:20,610 --> 00:47:25,980
You know what code and what output. You always have the correct version stuff together.

456
00:47:26,610 --> 00:47:30,540
And so these markdown files allow us to stitch code and output together.

457
00:47:30,840 --> 00:47:33,930
And here's the anatomy of a markdown file. It's going to start with a header.

458
00:47:34,830 --> 00:47:37,830
There's only one of these. It's at the top of the file.

459
00:47:38,460 --> 00:47:46,150
And it starts and ends with. Then they called Dasha.

460
00:47:46,480 --> 00:47:49,930
Yeah. Who starts and ends with Dasha?

461
00:47:50,200 --> 00:47:56,350
Here's where you can get information like a title and author, and you tell it what style you want your output report to be.

462
00:47:56,710 --> 00:48:00,280
So do you want to make a document? Do you want to make PDF from the new website?

463
00:48:02,800 --> 00:48:06,940
This is like kind of overhead information about what do you want your report to look like?

464
00:48:07,930 --> 00:48:14,020
Then there's this free text information. This was what was pointed out before all the stuff outside the header that has a white background.

465
00:48:14,140 --> 00:48:17,290
You need as much of this as you want. These are essentially notes to yourself.

466
00:48:21,060 --> 00:48:25,890
The third are these code shops. These are these ones with a gray background bounded by the back text.

467
00:48:25,950 --> 00:48:29,220
This is the part that's actually going to talk to her. So this is your code.

468
00:48:30,990 --> 00:48:34,710
Then there's something else. A fourth thing. This is right below the code chunk.

469
00:48:34,740 --> 00:48:41,490
This is the output that's made by this code. So here we're running this code, one plus one, and the output is two.

470
00:48:42,120 --> 00:48:47,270
So now if you share this with your colleagues, it's always going to be stitched together.

471
00:48:47,310 --> 00:48:57,030
What? Where did that output come from? I'm from one code, so we're not going to lose that version because this might be a new concept for folks.

472
00:49:04,740 --> 00:49:13,140
I mentioned some of these operators, these like mathematical symbols that have special meaning.

473
00:49:13,500 --> 00:49:18,720
A lot of these might be intuitive things, like a plus sign for addition.

474
00:49:20,430 --> 00:49:28,680
There's also some logical ones that we'll use along the way, like symbols for greater than or equal to kinds of things that the ampersand means.

475
00:49:28,680 --> 00:49:32,010
And you don't have to memorize these right now. We can work through them in the future.

476
00:49:32,520 --> 00:49:35,489
But so essentially you have a calculator now at your fingertips.

477
00:49:35,490 --> 00:49:40,300
You don't need to carry around a tie 83 or whatever one of those as before our can do all of these things.

478
00:49:42,300 --> 00:49:47,130
And then when you're like very, when you want to actually run your code, you've drafted your code.

479
00:49:48,600 --> 00:49:52,610
We want to submit it or run it. So we have a few options for this.

480
00:49:55,200 --> 00:49:58,770
Options for submitting code if you have a mac.

481
00:49:59,930 --> 00:50:06,050
You can do the keystroke of command. Enter if you have a P.C.

482
00:50:06,260 --> 00:50:09,310
You can be a control center. These are the same thing.

483
00:50:09,320 --> 00:50:13,000
Just whatever platform you have or you can click over here.

484
00:50:13,010 --> 00:50:22,550
There's a button that says Run. Now you can run those lines or you can copy and paste in the console.

485
00:50:23,330 --> 00:50:27,980
So you could copy it up here in the upper left hand corner and paste it in the lower left to the console.

486
00:50:28,160 --> 00:50:33,680
Any of those approaches are going to work. And I run a line of code that you provided.

487
00:50:35,240 --> 00:50:40,340
So that's a step from drafting the code to now we're submitting after deciding what could we work on?

488
00:50:44,330 --> 00:50:47,540
At the very end when you're like happy with your code when you've tested it,

489
00:50:48,200 --> 00:50:51,440
you want to build that finished report so you can share it with your colleagues.

490
00:50:52,220 --> 00:50:54,830
Then we have this incredible button called Render.

491
00:50:56,750 --> 00:51:05,660
So what this button is going to do, it's going to run the entire thing all at once, and it's going to create whatever finish report you asked for.

492
00:51:05,690 --> 00:51:10,310
So here I'm asking for a website. It's going to build me a website.

493
00:51:11,060 --> 00:51:15,200
We're not has it's kind of like hidden some of that stuff behind the scenes.

494
00:51:15,200 --> 00:51:18,290
So like those back ticks there are gone.

495
00:51:18,830 --> 00:51:21,470
It just provides us the code and the output.

496
00:51:21,830 --> 00:51:28,250
So now we've got this polished document, it's got the code, it's got the output together, and we can share this with our collaborators.

497
00:51:28,490 --> 00:51:37,010
So this is the purpose I'm having our in this class with markdown coding style because of this communication where you've got,

498
00:51:37,010 --> 00:51:43,340
here's my color, here's my help, you're my code, here's my output and here's all my notes that explains what I'm doing here.

499
00:51:44,300 --> 00:51:50,150
So we're not having to rely on like copying and pasting things together, and we're all bound to make errors at some point.

500
00:51:51,470 --> 00:51:58,780
So you. All right.

501
00:52:00,100 --> 00:52:03,880
Marching on. So we've seen the console in the lower left.

502
00:52:04,300 --> 00:52:07,600
We've seen the coding ed in the upper left.

503
00:52:07,990 --> 00:52:11,890
And the upper right is the environment also called the workspace.

504
00:52:11,900 --> 00:52:16,030
This is where all of our data sets are. So when we first log in, there's nothing in there.

505
00:52:16,030 --> 00:52:22,989
But we can make new data sets and it'll show what are the names of the data sets and all kinds of stuff.

506
00:52:22,990 --> 00:52:27,820
We can double click on them to look at them. It'll look like an Excel spreadsheet.

507
00:52:28,330 --> 00:52:38,440
But this is telling us what do we have activated right now? And then in the lower right, this is our catch out panel with a whole bunch of tabs.

508
00:52:39,460 --> 00:52:48,550
So, for example, our files that I'll be sharing with you are we're going to have files for our code files for our output files for our data sets.

509
00:52:50,080 --> 00:52:53,200
You can double click on them to open them in any window.

510
00:52:53,680 --> 00:52:59,500
And if you want to download them to get them out of the cloud and onto your personal computer,

511
00:53:00,250 --> 00:53:05,710
you can check the box next to them and then click more and they'll be exported.

512
00:53:06,100 --> 00:53:09,700
So you can get it off of the cloud on your personal computer if you want.

513
00:53:12,190 --> 00:53:15,360
I and another town to help you out. This is where we will.

514
00:53:16,620 --> 00:53:25,160
Interact frequently hour an hour something that you code perfectly the first time that year we're just

515
00:53:25,170 --> 00:53:34,200
gonna to figure out how to troubleshoot along the way and this is a great place and here's our recap.

516
00:53:34,800 --> 00:53:43,030
So your job is to submit commands. Our job is to provide output, and you'll interpret that within our posit view.

517
00:53:43,050 --> 00:53:52,910
We've got four panels, we've got the console, the code editor, the environment, and then on this multi panel one for files and I help your.

518
00:53:53,280 --> 00:53:58,260
And then for each class I'll give you a whole project that contains code output data, all kinds of stuff.

519
00:53:59,520 --> 00:54:03,900
And then I mentioned this idea that operator symbols have a special meaning cause they're.

520
00:54:07,040 --> 00:54:11,840
There's a lot of slide. As I said, I'll try to shorten the slide component in the future.

521
00:54:14,760 --> 00:54:18,800
Okay. All right. Well, let's let this thinking a little bit.

522
00:54:18,830 --> 00:54:25,580
Let's take a five minute break and come back at 2:00 and we will start coaching at that time.

523
00:54:33,370 --> 00:55:03,610
And. Yeah, yeah, yeah, yeah, yeah.

524
00:55:05,870 --> 00:55:10,060
Before I.

525
00:55:28,340 --> 00:55:35,510
Have been very.

526
00:56:02,330 --> 00:56:18,520
It's we're. But I don't.

527
00:56:28,670 --> 00:56:37,070
ED. Yeah. You.

528
00:56:50,810 --> 00:57:09,720
Other. Part of the.

529
00:57:13,210 --> 00:57:20,070
The. For.

530
00:57:59,580 --> 00:58:54,560
I'm. Turn your back.

531
00:59:00,220 --> 00:59:03,990
Peter very well.

532
00:59:12,200 --> 00:59:34,480
But. It didn't come.

533
00:59:39,280 --> 00:59:45,380
Let's hear that.

534
00:59:49,980 --> 00:59:53,070
Welcome back. Let's start coding. All right.

535
00:59:53,070 --> 00:59:59,400
So to join the first time, you can use this link. Otherwise, you can join through this link.

536
01:00:02,370 --> 01:00:07,319
All right. So I'm logging over the ten student accounts of the should have the same view as you.

537
01:00:07,320 --> 01:00:10,320
All right, now. Now, let's see.

538
01:00:11,880 --> 01:00:16,740
On the left hand side, there'll be this class workspace that you just in your personal workspace.

539
01:00:16,740 --> 01:00:19,889
Any other classes you might have over there. Um, to save space.

540
01:00:19,890 --> 01:00:30,120
I'm going to click this x. If you ever want to get that back in, click these three horizontal bars so you can go back and forth between those.

541
01:00:32,700 --> 01:00:41,940
And then we have the content, which right now is just my instructor class project for week one will be more along the way.

542
01:00:42,600 --> 01:00:49,890
You'll see your class members, who else is in here? And then if you need to adjust anything with your personal account, I'll be over there.

543
01:00:50,640 --> 01:00:54,900
So the first thing we're going to do is, can we help you out?

544
01:00:54,990 --> 01:01:03,360
How do how do we make our own copy of one of these projects which we click the little boxes?

545
01:01:03,660 --> 01:01:08,900
Some of the blocks are nice. Yeah, let's hit this copy button and then I should deploy.

546
01:01:08,910 --> 01:01:14,280
So I asked you, do you want to make your own copy to say yes? Absolutely. I was going to play that project.

547
01:01:15,270 --> 01:01:20,070
And if we ever want to go back to that view, we can go back to the workspace here.

548
01:01:21,450 --> 01:01:27,600
I'm going to let it deploy, like finish setting up, though, but that's how we could navigate important button.

549
01:01:31,790 --> 01:01:35,280
Okay. But I haven't.

550
01:01:38,570 --> 01:01:43,700
Three panels. You see, this is what we were expecting. This was a check out, right?

551
01:01:43,790 --> 01:01:48,290
We've got 1 to 3 panels. I just spent all that time telling you that there are four.

552
01:01:48,860 --> 01:01:59,100
What panel are we missing? What do you see that looks familiar. What's this one over here?

553
01:01:59,130 --> 01:02:07,790
What do we got? So we've got the console, we know the consoles, we've got the command prompt down here ready to go.

554
01:02:07,790 --> 01:02:12,270
So it's ready to accept code. What's up here? We got it. Environment.

555
01:02:12,470 --> 01:02:17,049
We've got the environmentalists out here. Kind of a catch all with the files and everything.

556
01:02:17,050 --> 01:02:21,700
So what's missing? Okay, our code editor.

557
01:02:21,700 --> 01:02:26,200
So let's open a code so we can get a code from our files.

558
01:02:27,910 --> 01:02:33,800
So I'm just going to toggle to sort of be able to see the whole thing and the file that we're to open,

559
01:02:33,820 --> 01:02:38,680
the code file we're going to open is called Evan 67401 class introduction.

560
01:02:38,860 --> 01:02:41,800
Got a few of these. So this is the markdown file we're going to work through.

561
01:02:42,160 --> 01:02:46,719
You can see there's another markdown that's a template for your homework class. We're going to open the class one.

562
01:02:46,720 --> 01:02:52,120
So the one with the extension of document and what happens when we click on that.

563
01:02:53,530 --> 01:02:57,280
That should give us the fourth panel in the upper left hand corner homework.

564
01:02:57,430 --> 01:03:05,170
All right. So if you click on this introduction document, that's to open the code file in the upper left and drag this back over,

565
01:03:05,380 --> 01:03:08,580
because we're going to mostly focus on this code file. So I want to be able to see that.

566
01:03:09,850 --> 01:03:15,130
All right. Up here, we've got the header, right? So here's this overall information.

567
01:03:15,730 --> 01:03:22,240
We're saying we want to build a website or you could change that to a doc X or a PDF, whatever type of report you want to produce.

568
01:03:23,110 --> 01:03:27,370
Let's add another author. So add your name to it takes some ownership over this project.

569
01:03:28,460 --> 01:03:31,720
I put my test student in there. Okay.

570
01:03:31,790 --> 01:03:36,800
So that if you ever share this code with people, people know whose hands it's gone through to ask for help.

571
01:03:38,700 --> 01:03:46,220
One thing you might notice as soon as we start editing this. The file name turned red and I got an asterisk next to it.

572
01:03:46,490 --> 01:03:51,470
That means there's unsaved changes to it. So we have a couple options to save it.

573
01:03:52,130 --> 01:04:02,270
We could click the floppy disk type file, see if there's a keystroke command control F or command S,

574
01:04:02,270 --> 01:04:09,060
whether you're a mac or PC, or if we run code, it'll automatically start saving it.

575
01:04:09,620 --> 01:04:17,000
So I can click this and you'll notice once it's saved that the name turns black and that asterisk is gone.

576
01:04:17,270 --> 01:04:23,120
And in the lower right hand corner, it'll tell you the last day and time it was most recently sent.

577
01:04:23,210 --> 01:04:27,800
Okay, so you're not going to lose your work command line. All right.

578
01:04:27,800 --> 01:04:29,390
So here's our header up top.

579
01:04:30,260 --> 01:04:36,290
Here's some of this free text where I'm just giving you, reiterating some of that information from the beginning of class.

580
01:04:39,020 --> 01:04:43,520
Reminding us that we can click this render button at the end when we're ready to build our full report.

581
01:04:44,900 --> 01:04:51,650
And then here I'm very verbose, I guess now we're getting into our first code chunk.

582
01:04:51,680 --> 01:04:56,389
Okay, so here's our first time. We're actually talking to our and we know this is an archive.

583
01:04:56,390 --> 01:04:58,129
A chunk of the background has changed color.

584
01:04:58,130 --> 01:05:09,680
Now it's gray, it's bounded by these three back ticks and it's telling us for coding and ah so the actual code I'd like to try is this 129 right here,

585
01:05:09,680 --> 01:05:18,560
this print and code if we want to take this code that's already written and submit it, can I anybody to remind me how do we submit code?

586
01:05:18,740 --> 01:05:22,160
What's what? We've got several options for that.

587
01:05:22,160 --> 01:05:25,970
How do we submit code? Yeah. Command enter on the back.

588
01:05:26,240 --> 01:05:32,780
Yeah. So first I'm going to put the cursor anywhere on that line so you don't have to highlight it.

589
01:05:32,780 --> 01:05:33,830
You just put it anywhere.

590
01:05:34,040 --> 01:05:42,140
Could be in the middle, could be on the end, and you can hit the keystroke command, enter on a map, or you control enter on a PC.

591
01:05:43,040 --> 01:05:46,220
Right. And what do you notice that something new popped up below it?

592
01:05:47,060 --> 01:05:50,840
So now we've got the output right below the code. All right.

593
01:05:50,900 --> 01:05:54,710
That wasn't there before. So now that we've run it, we've got output right below the code.

594
01:05:55,970 --> 01:05:59,480
Can anybody think of a different way besides that keystroke way? Submit code.

595
01:06:00,680 --> 01:06:03,860
Yeah. And copy and paste it into a console. Yeah.

596
01:06:04,610 --> 01:06:10,730
So let me just wipe this for a second so that we can see I'm going to clear the output.

597
01:06:11,330 --> 01:06:16,819
So I just I click the gear and I click clear output because I wanted to get rid

598
01:06:16,820 --> 01:06:20,990
of the output here so I can show you the slight difference if I copy this.

599
01:06:21,800 --> 01:06:26,750
So if I right click. Copy it and I paste it down here in the console.

600
01:06:30,940 --> 01:06:34,090
It will still run in the console, so I'll get the output there.

601
01:06:34,420 --> 01:06:39,130
But you notice they don't get the output up here because I'm not submitting it directly from here.

602
01:06:39,280 --> 01:06:42,580
So any code I copied and pasted it down to there.

603
01:06:42,790 --> 01:06:46,430
So just a slight difference about whether you want the output to appear there.

604
01:06:46,480 --> 01:06:52,780
Not very subtle. And we think of that fourth way happening here on the right.

605
01:06:53,080 --> 01:06:54,670
Oh, yes. I haven't even told you about this.

606
01:06:54,670 --> 01:07:06,249
This is a third, fifth way to there is this button, play button that says if you click on this, it will run the entire chunk.

607
01:07:06,250 --> 01:07:13,590
So if we hover over run in current chunk, so that doesn't just run code line by line, that will run any code you have present here.

608
01:07:13,600 --> 01:07:16,929
Currently we only have one line of it, so it's the same thing we run.

609
01:07:16,930 --> 01:07:25,130
Hit the play button. And then that runs that line because you see it runs up down in the console and it produces the output right here.

610
01:07:26,150 --> 01:07:32,300
And I got another right. Thank you for noticing that. Yes.

611
01:07:33,040 --> 01:07:40,450
Just hit and run. Exactly. So there's a button up here for red and that gives you two options.

612
01:07:41,110 --> 01:07:44,530
So you can say, right, I'm selected nine from the whole time. What do you want?

613
01:07:45,070 --> 01:07:48,610
So you just run that line and that'll do the segment.

614
01:07:48,850 --> 01:07:56,990
Okay, so you got options for how to run. What if?

615
01:07:57,230 --> 01:08:00,650
Where do these code chunks come from? Are they magical? How do we get a new one here?

616
01:08:00,770 --> 01:08:06,020
I'm providing you one right here. But how anybody can anybody think of how do we make a new code?

617
01:08:06,320 --> 01:08:10,910
If you want to start coding on your own how to make a code. Where do these come from?

618
01:08:16,210 --> 01:08:19,800
Yes. Let's do the triple little dashes.

619
01:08:19,810 --> 01:08:24,460
I can remember the pregnant women and the programing language that you want to do.

620
01:08:24,880 --> 01:08:30,790
Yeah, we could type it like with keystroke with. So I'm hitting enter a few times to make her space and I just match.

621
01:08:30,790 --> 01:08:34,570
I mean these three they're called back text. They're in the upper left hand corner of your keyboard.

622
01:08:34,720 --> 01:08:39,010
One, two, two, three. And then I'll do a curly bracket.

623
01:08:39,010 --> 01:08:41,380
And then the name of our programing language in this case is Ah,

624
01:08:41,710 --> 01:08:46,840
one thing I like about our is if I type one curly bracket, it'll automatically give me the second one.

625
01:08:46,960 --> 01:08:50,620
So it helps me remember it, but I need to put the ah in.

626
01:08:51,010 --> 01:08:57,700
And then you notice that because I haven't done the back end of that sandwich, it's continuing into the next thing.

627
01:08:57,700 --> 01:09:02,860
So I need to close out that code chunk and give me three more objectives.

628
01:09:03,460 --> 01:09:08,440
So now we've got that space in between. Right. So you can do it by typing.

629
01:09:09,070 --> 01:09:14,650
There's another way I haven't even told you about yet. Is this green C plus button?

630
01:09:15,760 --> 01:09:24,380
This is going on. This. It makes a new coach on. Or you could copy an existing one.

631
01:09:27,670 --> 01:09:32,320
Seven. All right, so I think I'm off.

632
01:09:32,620 --> 01:09:36,850
Well, there's also a keystroke command to do it. It's called.

633
01:09:38,460 --> 01:09:45,750
Control or command. I well. I so control all or command all tie.

634
01:09:46,590 --> 01:09:52,250
That also makes a crunch on people. I would say the ones I most often use are the screen button or the control.

635
01:09:52,290 --> 01:09:56,070
I'll try to see what you like.

636
01:09:57,160 --> 01:10:00,680
Many, many ways to create. All right.

637
01:10:02,820 --> 01:10:10,260
So let's try to start using our as a calculator and see see what we got.

638
01:10:12,720 --> 01:10:21,510
All right, so here I'm just demonstrating some of these calculator functions that hopefully some of these symbols are intuitive to you.

639
01:10:21,510 --> 01:10:25,140
What their meaning. So here I'm using the plus sign for addition.

640
01:10:25,150 --> 01:10:28,560
So what do I expect? I expect two plus two to be equal to four.

641
01:10:28,590 --> 01:10:34,260
So if I run this line of code, which I can run this line of code by clicking command center,

642
01:10:35,550 --> 01:10:41,700
we see that the addition of two and two has a value of four in the output.

643
01:10:42,780 --> 01:10:48,720
What do you think the asterisk were? Calculator operation is your best guess is going to happen there.

644
01:10:53,030 --> 01:10:57,250
So another location, we can test that out. So okay. Now has the value of eight.

645
01:10:57,910 --> 01:11:06,810
May have a guess what? This. It is uneven for what this upward facing arrow refers to.

646
01:11:07,980 --> 01:11:11,750
Exponent yeah. So I saying to to the third power or eight.

647
01:11:12,450 --> 01:11:21,250
Oops. And then you can follow orders of operations.

648
01:11:22,060 --> 01:11:25,930
And it'll use parentheses whenever this will come up a lot through the class.

649
01:11:26,260 --> 01:11:29,470
But whenever there's parentheses are is going to do work from the inside out.

650
01:11:30,460 --> 01:11:35,110
So it's going to perform the action you put in the parentheses first and then it will work its way out.

651
01:11:36,790 --> 01:11:40,300
And you notice all the new operations are on separate lines.

652
01:11:40,720 --> 01:11:45,340
And so it's treating those as separate activities without having the semicolons at the end.

653
01:11:48,160 --> 01:11:53,440
So here I've been running all of them one at a time. As was pointed out, we can run them all together if we want.

654
01:11:53,440 --> 01:12:00,309
We can hit the play button. That will run all of the output together and they'll come out in sequence.

655
01:12:00,310 --> 01:12:06,250
So the first value A4 refers to the first code, value eight is the first, the second and so on.

656
01:12:10,730 --> 01:12:13,790
All right, let's check in and see how we're doing. All right.

657
01:12:13,790 --> 01:12:18,859
I want to do a check. Your understanding, we'll do these periodically throughout the day so I know me and you are

658
01:12:18,860 --> 01:12:25,340
coaching and try to evaluate these three arithmetic activities and then run it.

659
01:12:26,090 --> 01:12:29,870
So see what those values provide. Talk to your neighbors.

660
01:12:30,020 --> 01:12:33,590
This is a community activity. If you're having trouble, reach out.

661
01:12:35,150 --> 01:13:53,219
We want to help each other out. Who can help us out.

662
01:13:53,220 --> 01:13:56,549
What's a first that we're going to do when we have something new?

663
01:13:56,550 --> 01:14:01,780
We want to come. See.

664
01:14:01,790 --> 01:14:04,790
Plus, plus. See at the top of the green.

665
01:14:05,100 --> 01:14:08,350
Excellent. Outskirts of a little bit of free, white Swiss to work with.

666
01:14:08,360 --> 01:14:16,410
And then we can hit that green, see? Plus, make the coaching. They might try a different approach to making a coaching curriculum.

667
01:14:19,170 --> 01:14:27,360
And then how do you go about trying to evaluate this first statement, convert it from words onto the code?

668
01:14:28,830 --> 01:14:31,940
Really talk me through how to do it. Yeah.

669
01:14:32,660 --> 01:14:36,080
I think this one depends a little bit on how you read it. Yeah.

670
01:14:36,590 --> 01:14:44,180
So, you know, you can do a few different things, but you can do too close to with the Times.

671
01:14:44,180 --> 01:14:48,390
With the Astros. Yeah. Now it's up to you.

672
01:14:48,420 --> 01:14:51,530
Oh, yeah? What's the symbol for division? I don't think we've done that yet.

673
01:14:52,410 --> 01:14:57,230
Uh, division like a backslash. Yeah. Nice.

674
01:14:58,400 --> 01:15:03,080
Four and then minus three plus. You know, if you read it, you can read it.

675
01:15:03,080 --> 01:15:08,420
Like that's the first, you know, part of the expression two plus two times three divided by the second part.

676
01:15:08,420 --> 01:15:11,899
Or you could just ah. Divided four in there. Right. Yeah. You could do it.

677
01:15:11,900 --> 01:15:15,380
Or like have better control of your order of operations. Absolutely.

678
01:15:15,530 --> 01:15:23,630
Yeah. Those will provide different values. What I want to do to start to become familiar with the calculator symbols, we can run that.

679
01:15:23,640 --> 01:15:31,590
See what that looks like. I got 0.5 and you might have gotten something different if you did the parentheses differently.

680
01:15:31,610 --> 01:15:35,120
The next one we might go two times.

681
01:15:35,120 --> 01:15:38,989
Three divided by four times two.

682
01:15:38,990 --> 01:15:46,160
Right. Practicing there. Oh, something you notice I omitted a space that's purely esthetic.

683
01:15:46,160 --> 01:15:49,290
Ah. Doesn't care. So spaces don't have any meaning. Um.

684
01:15:49,370 --> 01:15:52,549
I tend to think about things from my brain.

685
01:15:52,550 --> 01:15:56,630
It's easier to see things, but if you want to press things together, that works great too.

686
01:15:57,770 --> 01:16:02,989
Um, how do we do this last one? How do we do power two to the fourth power?

687
01:16:02,990 --> 01:16:07,200
How do we do that? Oh, yeah.

688
01:16:07,250 --> 01:16:11,410
Where's that. Oh, of the 6 to 2. The fourth minus.

689
01:16:11,720 --> 01:16:14,960
Yeah. There's practice finding stuff on the keyboard.

690
01:16:16,650 --> 01:16:24,980
Any challenges, any questions? All right, let's jump back into the slides and we'll start talking about objects.

691
01:16:25,220 --> 01:16:31,040
So this will be able to move beyond calculator and then get into datasets.

692
01:16:33,930 --> 01:16:42,490
We have this plaza open because we're going to jump back into this cold. All right.

693
01:16:42,500 --> 01:16:48,890
So in this next section, I want you to be able to classify object types in our we're going to learn about a couple different types of objects.

694
01:16:51,110 --> 01:16:57,890
So essentially, objects are anything that you assign a name to and are pretty much you can give anything a name,

695
01:16:58,610 --> 01:17:02,690
you can give a variable a name, you can give an entire dataset, a name.

696
01:17:03,290 --> 01:17:06,440
You might not realize this, but you can give your graphs, the name, your figures.

697
01:17:06,880 --> 01:17:11,240
You can give the results of your regression model a name. Anything.

698
01:17:11,240 --> 01:17:16,220
You give a name. Once you assign it a name, it becomes an object. Objects are temporary.

699
01:17:16,370 --> 01:17:22,040
They don't stick around. So it's just they're just active during that current session of our.

700
01:17:25,920 --> 01:17:33,240
How do we assign something? A name? We use this keystroke, command this to this to a key stroke command.

701
01:17:33,960 --> 01:17:38,100
I think about it like an arrow pointing to the left. Correct.

702
01:17:38,790 --> 01:17:42,060
So it's a dash and a carrot pointing left.

703
01:17:43,050 --> 01:17:49,080
And that's because R is going to read this code. From right to left across the same operator.

704
01:17:49,710 --> 01:17:56,160
So it's going to perform some activity over here and then assign it to the name that's on the left over here.

705
01:17:56,760 --> 01:18:01,620
So thinking about this like an arrow is really helpful for my brain to think about this.

706
01:18:02,880 --> 01:18:07,040
So, for example. This first one. This is the command prompt, right?

707
01:18:07,040 --> 01:18:10,310
This one that this is just are telling us is ready. We're not typing anything.

708
01:18:10,700 --> 01:18:14,390
This code is saying take the value of five.

709
01:18:16,000 --> 01:18:20,910
An assignment. As a new object, I'm calling pajamas of a cat named.

710
01:18:21,250 --> 01:18:30,370
You can call it any name you want. You can call objects may make things up along the way with as much whimsy or seriousness as you prefer.

711
01:18:30,580 --> 01:18:35,020
But so is saying take this value of five in a sign that there's an object.

712
01:18:36,160 --> 01:18:39,230
Or you could say, Take this plot and assign it as an object.

713
01:18:39,250 --> 01:18:44,410
Take this regression and assign it. If it's a happening across this operator here.

714
01:18:46,230 --> 01:18:51,990
So this is reading it. And just as we said, take the value five and assign it as a new object competence.

715
01:18:53,280 --> 01:18:56,250
And then we can ask our what is pajamas? Maybe I forgot.

716
01:18:57,660 --> 01:19:06,780
So I can just type the code pajamas and then the output is going to be looking like this and it's going to give us the value of five

717
01:19:08,070 --> 01:19:12,600
and it's going to give us a second piece of information in these square brackets that I've kind of been ignoring along the way.

718
01:19:13,110 --> 01:19:20,060
But this is positional information. So this is going to say D.A. has a value of five in position one.

719
01:19:20,930 --> 01:19:29,750
We'll see that positions are very important in our. So it's not just what values things have, but also what order or sequence or position they have.

720
01:19:33,860 --> 01:19:38,420
Interpret this output as the object called. The demos has a value of five in position one.

721
01:19:43,210 --> 01:19:47,680
So the square brackets those nine granny square brackets throughout this to show positions.

722
01:19:49,750 --> 01:19:52,809
There's a couple of rules when naming objects I was saying you can name and anything you want.

723
01:19:52,810 --> 01:19:59,980
There's like a couple boundaries on this. So these special operators that we mentioned, they already have 30 claimed they have a role.

724
01:20:00,070 --> 01:20:09,910
You can't put those in your object names. Are doing are you can't put spaces and object names because you are or going to ignore spaces.

725
01:20:13,990 --> 01:20:19,960
You can put dots and underscore the name some people do at the start of objects so that they wouldn't want to remember our temporary.

726
01:20:20,350 --> 01:20:25,540
No problem. Objects can have numbers on them, but they can't start with a number.

727
01:20:27,460 --> 01:20:31,540
And this one will drive you bananas.

728
01:20:31,540 --> 01:20:40,200
If you come from SAS artist case sensitive you need capital x and lowercase x are completely different objects.

729
01:20:40,210 --> 01:20:45,760
This is a frequent flier for troubleshooting to make sure that the case you're going

730
01:20:45,760 --> 01:20:49,630
to mess this stuff up all along the way and we'll just practice working through it.

731
01:20:50,830 --> 01:21:00,220
Another tip is don't name an object over a commonly used function like mean because then you temporarily lose the ability to use the main function.

732
01:21:00,280 --> 01:21:03,579
So try not to r r won't give you an error.

733
01:21:03,580 --> 01:21:04,810
It'll assume you know what you're doing.

734
01:21:04,840 --> 01:21:15,010
Try not to overwrite things that you're already using, but as I said, you're going to mess it up and we'll just keep what you were practicing.

735
01:21:17,770 --> 01:21:21,069
So we were assigning objects like that small object.

736
01:21:21,070 --> 01:21:27,160
I called the jams that only had one value. And then we can make objects more complex to have multiple values in.

737
01:21:27,610 --> 01:21:33,580
And then our objects are going to be labeled or defined based on the shape of the data.

738
01:21:34,450 --> 01:21:42,250
So data that has information in one dimension is called a vector.

739
01:21:43,300 --> 01:21:50,530
So if you have either a string of numbers or if you want to think about it like a single column in your Excel spreadsheet,

740
01:21:50,830 --> 01:21:54,190
a single variable in your dataset, this is called a vector.

741
01:21:54,190 --> 01:21:57,670
This has values in only one dimension.

742
01:22:01,210 --> 01:22:05,470
Technically, that pajamas object would have been a factor because it only had a value in one dimension.

743
01:22:05,470 --> 01:22:10,870
Here, if we have values in two dimensions, so now we have rows and columns.

744
01:22:11,800 --> 01:22:16,720
These ones are either called matrices or dataframe. So we talk about the subtle differences between these.

745
01:22:16,720 --> 01:22:21,460
Generally we'll be using dataframe, but so now we have data in two dimensions.

746
01:22:23,850 --> 01:22:29,280
There's another type of data objects that I are largely beyond the scope of.

747
01:22:29,280 --> 01:22:33,560
This class would come up periodically in the troubleshooting literature.

748
01:22:33,570 --> 01:22:39,420
I just want you to be aware that they exist. These are objects called lists and ask for objects.

749
01:22:40,410 --> 01:22:44,760
I think of these like umbrella objects because they can contain other objects.

750
01:22:45,480 --> 01:22:52,860
So a list can have multiple data frames and it can have multiple vectors and it can have any combination of the above.

751
01:22:53,250 --> 01:23:00,480
So it lists or asks for. Objects are basically ways to carry around other objects with the same name.

752
01:23:01,500 --> 01:23:06,020
So vectors have the information one dimension data frames that have them in two dimensions.

753
01:23:06,030 --> 01:23:16,920
Those are going to be the main object types where use. If we zoom in those vector objects a little bit further.

754
01:23:17,250 --> 01:23:21,720
So here I've got an example of vector, a series of values.

755
01:23:22,770 --> 01:23:27,690
Let's call these sizes fruit lengths or something. So this is a size and position one.

756
01:23:27,690 --> 01:23:31,140
We have a value of 6.2 inches.

757
01:23:31,350 --> 01:23:35,850
Position two, we have a value of 9.3 inches, 2.1 inches.

758
01:23:36,150 --> 01:23:40,140
Essentially what this vector is, is an ordered set of those values.

759
01:23:40,350 --> 01:23:44,820
So it matters. What order they come in. We can't just scramble these values.

760
01:23:44,970 --> 01:23:55,320
They come in a specific order. What that means is there's metadata or kind of data on top of the data about the positions that are in there.

761
01:23:55,650 --> 01:23:59,070
So we don't we only have one set of values.

762
01:23:59,340 --> 01:24:02,880
Each of those values has a position. This is kind of like hidden information.

763
01:24:03,300 --> 01:24:06,360
So the value of 6.2 is in position one.

764
01:24:06,640 --> 01:24:12,690
The value of 9.3 is in position to in asking to use these square brackets to talk to you about positions.

765
01:24:14,260 --> 01:24:19,700
Okay. So even though there's both sets of information, this still only counts as one dimension of data.

766
01:24:24,660 --> 01:24:28,320
There's another term called an element. This is like the pair of information.

767
01:24:28,530 --> 01:24:32,130
So each element has a value in a position.

768
01:24:32,390 --> 01:24:38,730
Right. So this is the element that is there kind of thinking about the value in that position together.

769
01:24:41,160 --> 01:24:44,580
You can have as many elements as you want.

770
01:24:45,570 --> 01:24:49,830
As I said, sometimes I have datasets where a vector might have 25 million observations in it.

771
01:24:51,480 --> 01:24:55,530
But our has this rule. They all have to be the same type of value.

772
01:24:56,190 --> 01:25:04,740
So these ones are not numeric. You can have a vector that has all character information and you can have all whatever type of all things,

773
01:25:05,370 --> 01:25:11,910
but it wants everything within a vector to be the same type. So this is going to be one of the major activities we do during data cleaning

774
01:25:12,090 --> 01:25:16,290
is helping to make sure our vector type the same type of information in there.

775
01:25:20,780 --> 01:25:28,820
So here's some of those types of vectors we can classify by the the the structure of values that are present.

776
01:25:29,630 --> 01:25:32,840
So just like in that last slide we can have in the Americans,

777
01:25:33,440 --> 01:25:37,820
there's a couple sub flavors of numeric like integer if there's no decimal places allowed.

778
01:25:38,090 --> 01:25:43,670
Or if for some reason that's called a double, it is numeric ones which have decimal places allowed.

779
01:25:45,650 --> 01:25:49,840
Another type of vector is a character vector.

780
01:25:49,850 --> 01:25:53,330
This is the mouse. This one has the least rules.

781
01:25:53,900 --> 01:25:58,250
Essentially, you put anything in there as long as it's bounded by quotes on the other side.

782
01:25:58,580 --> 01:26:09,490
So this is just reading it as text information. I try to use as little of this as possible because you can get through this.

783
01:26:09,940 --> 01:26:14,499
As you might imagine, like in the coding, there might be different things like somebody might code,

784
01:26:14,500 --> 01:26:19,360
you come with a lower P, C, an R is going to read those as different things because it's case sensitive.

785
01:26:19,630 --> 01:26:23,980
Somebody might write Michigan instead of you again. So there could be all kinds of this.

786
01:26:23,980 --> 01:26:27,850
One is like most too wide open sometimes.

787
01:26:27,850 --> 01:26:32,530
And so for our days, that cleaning, we might be trying to move away from character expressions,

788
01:26:32,530 --> 01:26:35,620
but this is a common way that data might come in to us.

789
01:26:39,910 --> 01:26:44,200
Sometimes when I want to convert those to is called a factor variable.

790
01:26:44,230 --> 01:26:52,120
This has more boundaries on it. So this is where you decide there's only certain types of levels that are permitted.

791
01:26:52,630 --> 01:26:57,250
So here I'm only allowed. We've still got words. They don't have quotes around them.

792
01:26:57,940 --> 01:27:03,249
But there were only saying for this variable you can only have the values of high, low, medium, or on here.

793
01:27:03,250 --> 01:27:06,580
You might have set some boundaries like these are the only entries that could be here.

794
01:27:06,610 --> 01:27:09,910
So we've got some boundaries around what can be provided.

795
01:27:10,090 --> 01:27:12,550
And if you want, you can give these like a ranking.

796
01:27:16,510 --> 01:27:22,880
Another type of doctor that you might not have thought about before, but these all come in really handy.

797
01:27:23,090 --> 01:27:24,530
These are called logical vectors.

798
01:27:24,530 --> 01:27:34,280
I use these to ask our questions all the time and they'll give you true false answers so you can do them with capital letters or capital words,

799
01:27:34,280 --> 01:27:35,000
of course.

800
01:27:36,050 --> 01:27:42,050
And then the last one, I'm going to kind of punt this until a couple of weeks, because our example data set does doesn't have these on here.

801
01:27:42,050 --> 01:27:45,740
And they're a little bit tricky, but they are vectors as well.

802
01:27:46,340 --> 01:27:52,910
So these are a lot of the format common formats that will receive data for our analysis then and we'll work with each of these types of vector.

803
01:27:53,450 --> 01:28:01,489
But you really don't I doesn't want you scrambling between these. You don't want one value as a date, one a character, one a number within a vector.

804
01:28:01,490 --> 01:28:02,990
You want to keep everything the same type.

805
01:28:06,950 --> 01:28:12,950
When we talk about the position or the index within there, we can use the square brackets to look around our index and object.

806
01:28:14,570 --> 01:28:21,770
So for example, we could select on price. I should have got an object of calling in cats here saying Tell me what's in position for.

807
01:28:22,490 --> 01:28:28,580
So here's the name of the object and here's the square brackets. And what's in there is telling me the position of information.

808
01:28:32,390 --> 01:28:40,520
You can also select on the value criteria. So here I'm saying show me the positions where the value of cats is less than five.

809
01:28:41,450 --> 01:28:46,430
So you can select observations based on positions or based on values.

810
01:28:47,090 --> 01:28:50,630
We'll practice this when there's any parentheses,

811
01:28:51,260 --> 01:28:56,480
whether they're rounded or square brackets are going to always do the activities from the inside out in practice that to.

812
01:29:00,680 --> 01:29:03,260
Those are vectors. That's when information is in one dimension.

813
01:29:03,590 --> 01:29:11,270
When we have information in two dimension, these are called data frames and those are typically made up of columns of vectors.

814
01:29:11,900 --> 01:29:16,700
So you have your variables in the columns and your observations in the rows.

815
01:29:17,060 --> 01:29:22,040
And if you receive your data in the opposite format, so your variables are in the rows,

816
01:29:22,040 --> 01:29:26,630
one of the first things we'll do is transform the data set to this way that it's expecting it.

817
01:29:27,290 --> 01:29:31,550
So you notice within a column we have the same data type.

818
01:29:31,880 --> 01:29:35,920
So this is all character. This is all logical. This is all numeric.

819
01:29:36,460 --> 01:29:41,990
We've got within a column. We've got the same data type. You also notice that the.

820
01:29:44,660 --> 01:29:52,110
Table kind of starts with the data in Excel, for example, the first row are your column names goes on.

821
01:29:52,130 --> 01:29:55,430
Get a row here. Like row one, column one.

822
01:29:55,520 --> 01:30:04,430
This is data right from the beginning. Any information about positions is going to be meta information above the table.

823
01:30:04,790 --> 01:30:09,530
And for position, we need a row in the column. So we've got rows.

824
01:30:09,710 --> 01:30:16,400
Row one, right? Two or three or four or five. We can provide those in square brackets and we also have column positions.

825
01:30:16,400 --> 01:30:21,290
One, two, three, four, something we're going to memorize or practice.

826
01:30:21,860 --> 01:30:30,020
Is that our means? If we are looking for positions, we need to provide both the row and the column.

827
01:30:30,050 --> 01:30:34,530
Kind of like if you ever played Battleship growing up. So we're looking for a position.

828
01:30:34,580 --> 01:30:37,580
We can say, okay, we're looking for row four, column two.

829
01:30:37,640 --> 01:30:39,140
You have to provide both coordinates.

830
01:30:41,280 --> 01:30:50,490
So to index with it there the convention is that are always once the row first and the column second separated by a comma.

831
01:30:51,030 --> 01:30:55,500
So whatever that object name is the rows, comma, the columns.

832
01:30:56,190 --> 01:30:59,370
So that's how we select observations.

833
01:30:59,910 --> 01:31:08,489
That way that that too. So for example, this would show in row to column three.

834
01:31:08,490 --> 01:31:18,860
What is that value? Oftentimes I might forget what column number something is.

835
01:31:18,860 --> 01:31:27,320
It can be a stronger approach for me to refer to columns by their name or to provide column names if my dataset doesn't actually have it.

836
01:31:27,620 --> 01:31:31,489
So the column names are also meta information.

837
01:31:31,490 --> 01:31:35,600
They're not part of the dataset, the dimensions of the dataset.

838
01:31:36,740 --> 01:31:42,980
So we can provide column names here. So this is the column about size of the column about white levels where.

839
01:31:45,270 --> 01:31:49,599
And the way in which we call out. Variable names are called names.

840
01:31:49,600 --> 01:31:54,300
As with the dollar sign, this is another one of these special symbols and ah, that has special meaning.

841
01:31:55,450 --> 01:32:02,590
So we would provide whatever the data for a name is, dollar sign, whatever the variable name is.

842
01:32:02,890 --> 01:32:10,720
So if this overall dataset is called enhanced dollar sign size, then we're referring just to this column of information.

843
01:32:11,080 --> 01:32:18,820
So you use the dollar sign to help ourselves call these out by name if it's too hard to remember what column number things are.

844
01:32:23,510 --> 01:32:28,340
All right. So here's our recap. Objects are anything that we give a name in art.

845
01:32:29,360 --> 01:32:32,540
We can assign objects with this to keystroke command.

846
01:32:32,900 --> 01:32:34,390
We think about it like a left era.

847
01:32:34,400 --> 01:32:39,500
So the name of the objects can be on the left hand side, and whatever we want to do to create it is going to be on the right.

848
01:32:40,760 --> 01:32:45,260
If our object only has information in one dimension that's called a vector.

849
01:32:46,220 --> 01:32:52,190
If our object has information in two dimension like a table, that's a data frame.

850
01:32:53,350 --> 01:32:56,840
And no matter what type of object it is, it has values.

851
01:32:57,350 --> 01:33:01,670
And those values are not scrambled. They have positional information, so they have coordinates.

852
01:33:02,720 --> 01:33:07,790
And to find those position coordinates or to describe them to our we use the square brackets.

853
01:33:08,990 --> 01:33:15,690
And lastly, we use this dollar sign to specify columns of data to.

854
01:33:17,350 --> 01:33:21,820
I was right here. How are we doing so far?

855
01:33:23,560 --> 01:33:29,170
Through the structures of our. These are one of the most useful aspects.

856
01:33:32,120 --> 01:33:35,320
Would you like to code and make your own offsets? Would that be nice?

857
01:33:36,050 --> 01:33:41,060
All right, let's connect back to coding your thing.

858
01:33:41,060 --> 01:33:48,380
May I've gone to sleep while you were away? No problem. We can click to reenter it and it should pick us up right where we left off.

859
01:34:00,440 --> 01:34:07,670
If you exit out of it, you can grab it back again. So this is the knockdown file for the introduction class.

860
01:34:08,570 --> 01:34:16,370
That should open it up right there. And you can navigate down to for me, it's a line one 999.

861
01:34:16,370 --> 01:34:24,020
It might be different for you to do based on how much notes you've been taking to the code chunk all about making objects.

862
01:34:24,650 --> 01:34:28,370
There's a trick to this button to the left.

863
01:34:29,540 --> 01:34:32,660
Of the play button will run all the prior code jumps.

864
01:34:33,680 --> 01:34:39,230
So someone will do that to catch up so you can click this, run all those previous chunks about it.

865
01:34:39,650 --> 01:34:43,910
We're all caught up and we're going to make an object.

866
01:34:44,150 --> 01:34:48,860
So what object do you before you even do it? Let's an expectation.

867
01:34:48,920 --> 01:34:55,580
Here is our first object. What do you expect to happen when we run this line of code, which for me is line 110 right now?

868
01:34:56,660 --> 01:35:01,400
Tell me, what are you expecting to happen when we make an object where objects go, what happens?

869
01:35:02,660 --> 01:35:09,470
We think that objects will remain divided in the environment.

870
01:35:09,590 --> 01:35:13,340
They'll say, like, ooh, like none at all. So then put that back to it.

871
01:35:13,610 --> 01:35:20,299
Nice. Yeah. So we expect this to take the value of five and assign it as a new object or showing them apples.

872
01:35:20,300 --> 01:35:25,400
And we expect that object to show up in the environment. The environment is going to be full of all the objects we have currently.

873
01:35:25,400 --> 01:35:29,150
Our environments empty, but we're going to run this and hopefully have an object.

874
01:35:29,150 --> 01:35:35,090
So a way to run code is command or control enter and exactly what you said have occurred here.

875
01:35:35,090 --> 01:35:40,300
So we have now have an object with the name apples and the value of five.

876
01:35:41,210 --> 01:35:53,150
Another way we can see what that has produced is we can submit the code of nom apples and we see that that has a value of five in position one.

877
01:35:53,630 --> 01:35:59,270
So usually after I make a I'll check it out. Double check that it made what I thought it made.

878
01:36:02,130 --> 01:36:06,570
What do you think's going to happen here now? So we've got five apples now.

879
01:36:06,570 --> 01:36:10,389
What are we got here? What? What what do you think's going around 9:00?

880
01:36:10,390 --> 01:36:16,970
Right. What's your expectation? Exact same thing.

881
01:36:17,650 --> 01:36:21,200
No apples to apples to apples, you know. Yeah, I wouldn't make the cost of apples.

882
01:36:21,200 --> 01:36:25,130
Objects is also going to be numeric information. I'm going to run this tax one, too.

883
01:36:26,000 --> 01:36:32,030
All right, so now we've got three. All of a sudden we've got three objects. And once you have objects, you start playing with them.

884
01:36:32,180 --> 01:36:37,520
So before we were like adding and subtracting and multiplying numbers.

885
01:36:38,450 --> 01:36:41,540
Well, guess what? We can add and subtract and multiply objects.

886
01:36:42,990 --> 01:36:47,220
So that if you like, change the value of the object, then you can run this and have it go.

887
01:36:47,790 --> 01:36:49,170
So what do we expect to happen here?

888
01:36:49,200 --> 01:36:57,030
I think it's going to multiply the number of apples, which is 55 times the cost now, which is five times the cost of the apple, which is $0.55.

889
01:36:57,480 --> 01:37:04,500
This maximum before inflation. And then we expect that to assign a fourth object.

890
01:37:05,310 --> 01:37:12,720
We're kind of crossing tax. So you can use some of those calculator operations to create new objects.

891
01:37:13,410 --> 01:37:19,889
So we see that this new object called custom text is to 75 and we can double check that,

892
01:37:19,890 --> 01:37:24,500
see what it is here, and then we can ask what's the cosmic texture, right?

893
01:37:24,540 --> 01:37:32,820
So, so using those skills that we built with calculator operations, using those parentheses to calculate things,

894
01:37:33,570 --> 01:37:40,350
these can be transferred not just to direct numeric information, but you can apply that to vectors as well.

895
01:37:40,710 --> 01:37:44,160
These are all have one value in them, but they are technically vectors.

896
01:37:49,600 --> 01:38:02,470
Let's take this up a notch and move beyond data with a single value and move out to data and vector with multiple, multiple positions of all values.

897
01:38:05,210 --> 01:38:10,370
So I'm going to scroll down first on an error or run assumption on this.

898
01:38:10,370 --> 01:38:17,959
We're going to learn more about function sex class, but this is saying take the function length and perform it on the object non-Apple.

899
01:38:17,960 --> 01:38:24,230
So how long it we'll check I'm asking how long is the current non apples I.

900
01:38:26,040 --> 01:38:30,420
We say currently this object is only one value in length.

901
01:38:32,570 --> 01:38:36,400
Well, what we're going to do is create some new versions of it.

902
01:38:37,010 --> 01:38:41,840
So here I'm going to say. Take the values one through four.

903
01:38:43,190 --> 01:38:46,310
The colon in this case is like a way of counting.

904
01:38:46,340 --> 01:38:49,640
So let's say one, two, three, four, one, three, four.

905
01:38:50,120 --> 01:38:53,660
Take those values in assignment to the object, not apples.

906
01:38:54,770 --> 01:38:59,420
Is that pinging anything? Do you think any kind of errors are going to occur? Do we already have something called an apple tree?

907
01:39:00,560 --> 01:39:05,000
So I'm essentially trying to rewrite over my old object.

908
01:39:06,500 --> 01:39:12,200
Doing our is going to give us an error message. Our is going to assume we know what we're doing.

909
01:39:12,230 --> 01:39:17,360
So I'm going to run this and take a look at what happens from the normal folder now has one value of

910
01:39:17,360 --> 01:39:25,459
five and all of a sudden now it's an integer and it has positions one through four and the values one,

911
01:39:25,460 --> 01:39:28,700
two, three, four. We got no error message whatsoever.

912
01:39:29,030 --> 01:39:34,640
So I'm just pointing this out that it's easy to overwrite your data set.

913
01:39:35,260 --> 01:39:40,370
It won't even flag a warning message. Okay, we will check.

914
01:39:40,370 --> 01:39:44,659
What does this look like right now? Okay, so this is an object. Has the values.

915
01:39:44,660 --> 01:39:48,360
One, two, three, four. Here's the exact we can't.

916
01:39:48,390 --> 01:39:53,969
Here's multiple ways of creating the same thing. Here I'm using the C function, which is the combine function.

917
01:39:53,970 --> 01:39:57,390
We'll learn more about next class two to combine the numbers.

918
01:39:57,390 --> 01:40:05,160
One, two, three, four. In assignment as the number of apples object, we notice that creates the exact same thing.

919
01:40:06,270 --> 01:40:10,530
So we're starting to see examples. These two lines of code are equivalent.

920
01:40:11,160 --> 01:40:14,510
So whichever one sticks better in your brain, go ahead with that.

921
01:40:14,700 --> 01:40:19,860
You've made a difference between being like an integer vector versus a non vector.

922
01:40:20,280 --> 01:40:24,750
Yeah. And integers are a subset of numeric vector type.

923
01:40:26,490 --> 01:40:30,210
So they're like within the same parent family.

924
01:40:31,070 --> 01:40:36,510
I don't. I think it has to do with like the default settings of this.

925
01:40:36,720 --> 01:40:41,280
The function builds the number ones versus the other one does integer.

926
01:40:41,580 --> 01:40:48,750
So, yes, there is a absolutely a good observation to notice that there is slight change to our variable type,

927
01:40:48,750 --> 01:40:52,020
but essentially in this case, very small.

928
01:40:52,230 --> 01:40:54,600
So this one, because this one's numeric and not integer,

929
01:40:54,600 --> 01:41:02,520
you could plug in some decimal point situations and here it doesn't have those same boundaries where the other one reject decimal point.

930
01:41:05,310 --> 01:41:07,220
One thing I want to point out is that order matters.

931
01:41:07,230 --> 01:41:15,090
So with this one, if I give it the values out of sequence, then we see our values are out of sequence.

932
01:41:15,900 --> 01:41:21,780
All right. So just underscoring the fact that vectors that objects are positional as well as value based.

933
01:41:25,460 --> 01:41:31,910
Another way to create that same number of apples is to use a function called sequence.

934
01:41:33,350 --> 01:41:41,000
So we can count our sequence from the number of one count to the number of four, and we want to count by one.

935
01:41:42,380 --> 01:41:47,690
So that can produce also the exact same number of apples object.

936
01:41:48,770 --> 01:41:53,300
Now add the and we're going to see how long is the vector. Now we see that the length of the vector now is four.

937
01:41:54,050 --> 01:41:58,880
So we've been continuously overwriting our own dataset. So that's really something we're going to learn to avoid.

938
01:41:59,820 --> 01:42:06,500
We want to maintain dataset integrity even as we start to like make changes like subsets of the dataset.

939
01:42:06,920 --> 01:42:12,400
Usually I always keep the parent dataset the same, and then any changes I make would be enough.

940
01:42:13,390 --> 01:42:16,820
A copy of the dataset. You're not going to go back.

941
01:42:21,530 --> 01:42:27,350
Not have a clock for me. Perform a couple calculations here.

942
01:42:27,920 --> 01:42:32,510
So here are some examples using calculator operations.

943
01:42:32,780 --> 01:42:37,010
You know this one, it's a factor. Now it will.

944
01:42:37,520 --> 01:42:44,170
So adding four to the number of marbles as four to every element in the vector, so that the vector was one, two, three, four.

945
01:42:44,180 --> 01:42:49,370
So five is four plus one. So you can start performing calculations on the whole vector.

946
01:42:50,990 --> 01:42:54,290
Addition, subtraction, multiplication, division, etc.

947
01:42:54,770 --> 01:42:59,940
Here's a number of examples. Consistent with before.

948
01:43:00,300 --> 01:43:05,600
Here's a symbol that we hadn't seen before this use of two equal signs.

949
01:43:05,610 --> 01:43:09,740
This is an operator to ask our question of is it equal to.

950
01:43:10,350 --> 01:43:13,680
So saying is number of apples equal to number of apples?

951
01:43:15,030 --> 01:43:18,840
And here we see we got our first logical vector. So we get a series of truth.

952
01:43:19,830 --> 01:43:30,180
I do something like this. Oftentimes if I have a data set like who are my participant IDs that visit one equal to my participant I do that visit to.

953
01:43:30,570 --> 01:43:38,850
So I'll see where that's true and where it's false. So these type of logic checks can be useful in our epidemiology analysis.

954
01:43:43,370 --> 01:43:47,169
Now. No type of object. We've been using numeric objects.

955
01:43:47,170 --> 01:43:54,430
We can also make character vectors. So here I'm using that same C function, the combine function.

956
01:43:55,180 --> 01:43:58,540
But now instead of combining numbers separated by commas,

957
01:43:58,540 --> 01:44:04,870
I'm combining character information and character information is provided with quotes on either side.

958
01:44:05,440 --> 01:44:13,210
So I'm expecting to take these four character expressions, combine them together into a new object I'm calling fruit heights.

959
01:44:17,390 --> 01:44:19,540
All right. So we see that this pops up in the environment.

960
01:44:19,550 --> 01:44:32,740
Now it's our first time we're seeing a character vector and we see these entries here, short name, version of them, etc.

961
01:44:33,350 --> 01:44:35,450
So then a pause and do a check your understanding.

962
01:44:35,690 --> 01:44:45,589
I want you to make a new code chunk and make a character vector object that contains at least two either bugs or maybe something you've seen.

963
01:44:45,590 --> 01:44:51,440
So I'm going to provide some character information in a vector name, not vector.

964
01:44:52,250 --> 01:46:08,280
And let's see what it looks like. Jump in a little early.

965
01:46:08,280 --> 01:46:11,519
Just looking at the clock per class. Can anybody help me out? How we get started?

966
01:46:11,520 --> 01:46:17,069
How do we get out of here? We get a little space to work with. We got a code chunk with the C plus.

967
01:46:17,070 --> 01:46:23,020
And then how do you create this new object? Right.

968
01:46:23,030 --> 01:46:26,470
Whatever you want to call it. Yeah, sure. Books.

969
01:46:27,620 --> 01:46:32,030
And then what? How do we. How do we assign an object to it?

970
01:46:32,240 --> 01:46:40,880
Yeah. Point that arrow to it. And then what was some strategy, folks, that you used to provide those elements that you were.

971
01:46:45,300 --> 01:46:50,100
Pull the one up above from the farm. Swan Right, because we're providing character information.

972
01:46:50,490 --> 01:46:54,000
So we probably want to model our work based on something we've seen so much.

973
01:46:54,210 --> 01:47:00,420
I mean, I was, I don't write code purely from scratch. I like find something that's similar and I work from that so we can use the C

974
01:47:00,420 --> 01:47:05,520
function and provide those names with quotes around them separated by commas.

975
01:47:07,860 --> 01:47:11,210
So I just read the book Heavy by Kasi Lemmons.

976
01:47:11,220 --> 01:47:18,510
I'm going to provide it in quotes. And then I'm got a audio book right now called Perception.

977
01:47:19,280 --> 01:47:22,730
I don't know how to spell that because I'm listening suddenly.

978
01:47:23,720 --> 01:47:27,500
And you notice that if there's a space, that's okay.

979
01:47:28,370 --> 01:47:33,610
But they're surrounded by pods and they're separated by commas, and we can run that.

980
01:47:33,620 --> 01:47:41,060
And I've got a new book that showed up as a character, and it's got two elements in it and anybody run into any errors when they were doing it.

981
01:47:45,530 --> 01:47:47,780
Sometimes if you forget to put the comma,

982
01:47:49,190 --> 01:47:57,660
it's going to tell you an unexpected string here so you can figure out where that you want to put that in there.

983
01:47:57,680 --> 01:48:05,420
So thinking through those kinds of things, when you're all done with it, we can click the render button.

984
01:48:05,730 --> 01:48:13,320
So my favorite thing to do in the whole world. You see, this is going to start running in the console and this other tab called background jobs.

985
01:48:14,130 --> 01:48:17,190
You might run into an error, if any, along the way.

986
01:48:17,190 --> 01:48:20,640
It will tell you what code chunk is getting there, but then it pops up as a.

987
01:48:23,420 --> 01:48:29,690
Output. So we asked for the output to be a website and here's all that background text.

988
01:48:30,940 --> 01:48:34,300
Here's the code we were running. Here's the output.

989
01:48:35,570 --> 01:48:38,660
Here's that code we were running. Here's the output right below it.

990
01:48:38,900 --> 01:48:48,140
Here's the check. Your understanding activity we added. Here's the black box object that we just made here.

991
01:48:48,170 --> 01:48:57,290
All this kind of stuff. And this output also appears in your files over here.

992
01:48:57,290 --> 01:49:05,780
So we made this amount just now, and if you want to click next to it, you can click more and export it.

993
01:49:06,860 --> 01:49:15,890
So I'll download it to your my downloads folder. I'm modeling this because for your homework you're going to perform these types of activities.

994
01:49:16,400 --> 01:49:20,120
And if you want, you can copy and paste your code and output together.

995
01:49:20,120 --> 01:49:25,460
But if you also want, you could click the render button and stitch it together in this type of output format.

996
01:49:26,360 --> 01:49:28,640
So here's a link to your homework assignment.

997
01:49:28,850 --> 01:49:38,060
And I also have in here a template markdown if you want to get started with this so you don't have to build your own header.

998
01:49:38,840 --> 01:49:45,800
You can insert your own code here or you can start from scratch if you want to kind of whatever level you're ready for right now.

999
01:49:45,860 --> 01:49:53,570
If you run into challenges along the way, we have a discussion board, so please join in on the discussion board.

1000
01:49:53,960 --> 01:50:00,090
Post your questions in as much detail as you can and if you're not struggling along on the discussion board anyways,

1001
01:50:00,110 --> 01:50:05,180
help your colleagues out because other people are really having some troubles, I'm sure.

1002
01:50:05,900 --> 01:50:14,040
I'm sorry. Question Oh, yeah, that's an asset you ran on because it is slowly creeping up as mine.

1003
01:50:14,060 --> 01:50:18,170
Is that like a concern or you know what I mean? Are we going to run out of space?

1004
01:50:18,530 --> 01:50:22,609
Yeah, I kind of love watching this. It helps me to be mindful of how much computer I'm running.

1005
01:50:22,610 --> 01:50:29,419
So all of this is running on. There are server. I have a cap on this one I'd like to get.

1006
01:50:29,420 --> 01:50:35,000
I think some of the other ones, I raise the cap to be like four gigs, but if we notice we're bumping up against,

1007
01:50:35,150 --> 01:50:42,500
I can go back in the administrator settings and increase it, but we should be okay for this lesson.

1008
01:50:42,980 --> 01:50:46,870
Thanks for your attention. I'll stick around if anybody has any additional questions or be on time.

1009
01:50:47,510 --> 01:50:51,590
So let me know if I can help you. And I am dropping hours tomorrow. Thank you, folks.

1010
01:50:52,130 --> 01:50:57,560
Can you show again how quickly we published it? Yeah. So the publisher, I click the runner button.

1011
01:50:58,190 --> 01:51:04,970
Okay. And the render button basically works as a separate planet,

1012
01:51:04,990 --> 01:51:15,100
ignores anything in your environment and runs all of that code that's in that code editor that you render like.

