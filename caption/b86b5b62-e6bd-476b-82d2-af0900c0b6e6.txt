1
00:00:03,840 --> 00:00:10,680
Three quarters of this works. Uh, well, I'll through here real quick, if we could just for me,

2
00:00:11,670 --> 00:00:17,370
this going be really helpful for me to see that rapid fire and then it's for everybody else.

3
00:00:17,370 --> 00:00:21,300
But I'll also be listening now. You go first.

4
00:00:22,170 --> 00:00:27,090
Sorry. No, no. Amy.

5
00:00:27,390 --> 00:00:35,670
Clara. Quiet. Katie. The lady commands genuine concern as all too fast.

6
00:00:36,240 --> 00:00:40,120
Now, I'm not going to start elitism. No, no, no.

7
00:00:41,580 --> 00:00:46,470
There's a sorry.

8
00:00:46,950 --> 00:00:50,270
We're getting donations slow this time for me is my fault. Oh, okay.

9
00:00:50,280 --> 00:00:53,340
All right. Abnormal brain. Thank you.

10
00:00:54,180 --> 00:00:59,010
Heather Hartman. The last name is great because there's a demarcation in Europe.

11
00:00:59,220 --> 00:01:02,280
Okay. Planet radius, quant barrel.

12
00:01:02,460 --> 00:01:07,100
Okay. Katie Grant. Anthony Delaney. Ryan Commander.

13
00:01:07,710 --> 00:01:12,570
Jenny Shearer. Exxon. So. Katie Grace.

14
00:01:13,380 --> 00:01:19,020
All right. Thank you. I appreciate it. All right. So, Dad, you folks have our studio open, ready to go?

15
00:01:19,170 --> 00:01:24,239
And let's kick off from where we were last week. We were just trying to pull in some data showing hands.

16
00:01:24,240 --> 00:01:28,260
You can be honest. How many folks watch the videos from this week?

17
00:01:29,160 --> 00:01:32,160
Yay, yay. I love it. I know.

18
00:01:32,190 --> 00:01:39,780
Yeah. These are designed to be more conceptual in nature, but I might start to pull in just to keep the course moving forward.

19
00:01:39,960 --> 00:01:42,600
And I started to pull in some of the work examples too,

20
00:01:42,900 --> 00:01:49,380
so that folks can kind of combine some of the conceptual piece and also the, the coding part of things.

21
00:01:50,370 --> 00:01:54,450
The I don't know how many folks did the reading did you try that Cohen textbook

22
00:01:56,410 --> 00:02:01,380
now I a dance right I told you with dance and it's a wealth of information.

23
00:02:01,680 --> 00:02:07,500
And again, I'm trying to capture as much of that as I possibly can through some of this information.

24
00:02:08,040 --> 00:02:11,970
So if you didn't quite get to the readings, that's okay. Just know that they're there, you know, going forward.

25
00:02:12,360 --> 00:02:21,210
All right. So we were here last week just trying to get very familiar with our studio and how we're going to be using it throughout the semester.

26
00:02:22,590 --> 00:02:26,729
See, here we yeah, we are.

27
00:02:26,730 --> 00:02:31,200
We supposed to be on the same script file each class or should we be opening a new script?

28
00:02:31,470 --> 00:02:43,260
This is actually from last week. Sorry, this is the ABC 700 lab one that are and I think I posted it here too last night.

29
00:02:43,740 --> 00:02:48,630
So ideally I would have made it through last Thursday, but I'm sorry,

30
00:02:49,290 --> 00:02:54,180
but so I'm just going to finish up these pieces of it and then we can just go right into the week to stuff.

31
00:02:54,420 --> 00:03:02,670
But thank you for the question for doing okay for first and foremost,

32
00:03:03,210 --> 00:03:09,150
questions about getting data into the software because I know it can be a little funky.

33
00:03:09,360 --> 00:03:20,579
It's usually something to do with file path names. There are some idiosyncrasies that we can build into the coding minds if we want to,

34
00:03:20,580 --> 00:03:26,080
and that's mainly how we want our to treat the different files that that are now we're bringing in one,

35
00:03:26,100 --> 00:03:33,629
we have to specify what kind of file it is, but then we can also at times specify certain things about the file that we know.

36
00:03:33,630 --> 00:03:42,030
For example, if we believe that header is present, that means the first row of a file has variable names and not data itself.

37
00:03:42,450 --> 00:03:50,250
So little things like that that we probably need to know to be able to communicate to our because our may take a good guess at things,

38
00:03:50,640 --> 00:03:55,830
but it's not always going to be right. So it's wonderful to just view things after you've got AP, you've important.

39
00:03:57,000 --> 00:04:06,360
Jeremy Dave Yes, this is a very basic question, I think, but when you're pulling from my work in the you're working directory,

40
00:04:06,690 --> 00:04:11,450
is that a directory on your desktop like your downloaded computer files or is it within ah,

41
00:04:11,490 --> 00:04:19,710
like the world it is, it's from your computer or from a network drive wherever you plan to have the physical or virtual copy of your data.

42
00:04:19,830 --> 00:04:22,530
Okay. And R is just pulling ours this program. Yeah.

43
00:04:22,830 --> 00:04:30,180
So even though I am using a downloads folder, it's just because this is the most expedient thing from when I'm taking things from canvas.

44
00:04:30,660 --> 00:04:35,489
If you are planning to have a folder that you're going to have all of your data or project names or something like that,

45
00:04:35,490 --> 00:04:42,060
you're going to adjust it accordingly. So normally your downloads folders gets refreshed or they they clean things out every couple of years.

46
00:04:42,360 --> 00:04:44,700
Probably not the best place to keep your data long term,

47
00:04:44,700 --> 00:04:51,000
but you can think about other spaces on your C drive on a network drive if you want to call them like BCG Drive or something like that,

48
00:04:51,510 --> 00:04:54,330
be mindful of, you know, if you are taking multiple years,

49
00:04:54,630 --> 00:04:58,140
are you going to be in a school of public health for the next five years as you drive your best place?

50
00:04:58,140 --> 00:05:03,110
Or is there an external drive you want to use? Who knows? It.

51
00:05:04,540 --> 00:05:10,740
Simple question, but when we're setting our growth rates, I notice the folder with the space in it.

52
00:05:10,750 --> 00:05:14,910
Is it better to just let me make things a yes?

53
00:05:15,140 --> 00:05:18,130
Yes, that it is. And you just have to remember.

54
00:05:18,520 --> 00:05:25,870
So I think the easiest thing for if it's the first time that you're going to a file or to a new folder,

55
00:05:26,080 --> 00:05:30,760
I would use the I would use the point click method of getting here.

56
00:05:31,300 --> 00:05:41,290
All right. So you can go to session, set your working directory, and then you can either source file location is wherever it finds it.

57
00:05:41,530 --> 00:05:46,839
I mean the filed, I don't know what Melbourne locations actually choose.

58
00:05:46,840 --> 00:05:54,340
Directory is where I usually go and so this allows me to go to wherever it is that I plan to have on my local harddrive or

59
00:05:54,340 --> 00:06:00,370
if you want to use a network drive you can kind of click to wherever it's going to go and then it will set it for you.

60
00:06:00,400 --> 00:06:09,100
You'll see the you'll see here in the console after you've set your drive copy and paste that.

61
00:06:10,060 --> 00:06:16,450
So it's it's identical to what I have in line 54 here. And then each time I start my session, I can go just directly to here.

62
00:06:19,340 --> 00:06:23,959
If you can't find something filed shoes is probably going to be the most helpful.

63
00:06:23,960 --> 00:06:26,920
So if you if you're not worried about setting a working directory,

64
00:06:26,930 --> 00:06:31,880
if you're on a computer that's not sure or something like that, file shoes will help you to find that file.

65
00:06:32,180 --> 00:06:38,840
What I don't like about it is it's not it doesn't inherently make you think about certain arguments within the function.

66
00:06:39,170 --> 00:06:42,620
So for example, there's read that CSC is a function.

67
00:06:42,620 --> 00:06:47,090
It's going to tell R to do something. It has arguments that are contained within those.

68
00:06:47,810 --> 00:06:53,360
Within the parentheses, the first argument is what's the file in the file name usually needs to have a

69
00:06:53,360 --> 00:06:57,560
path where to find the file unless you've already set your working directory.

70
00:06:58,160 --> 00:07:01,430
None of this is obvious unless you've kind of thought it through once or twice.

71
00:07:01,850 --> 00:07:06,319
Same thing with this header equals true statement. Our studio's not going to tell you to do this.

72
00:07:06,320 --> 00:07:17,170
What we can do is we can mouse over the function name and it's going to tell us in a folksy this way, in the back or even up front, I can notice it.

73
00:07:17,780 --> 00:07:21,860
It's going to give you some of those arguments and what to look out for. How is the file spaced?

74
00:07:22,970 --> 00:07:27,560
Do we want to use it? How is it going to treat certain kind of characters, that type of thing?

75
00:07:28,040 --> 00:07:32,509
If you don't if you can't figure out from just these kind of abbreviated things,

76
00:07:32,510 --> 00:07:35,870
we can always go down to help and just look up the name of the function.

77
00:07:40,240 --> 00:07:44,510
And it's going to give you a lot more information than you ever really wanted, but it's all there.

78
00:07:44,900 --> 00:07:50,770
Okay. So it gives you not only the the arguments, it gives you a lot more detail about what it's looking for.

79
00:07:51,760 --> 00:07:56,410
And then even down at the bottom, typically there are examples of how to do it.

80
00:07:57,070 --> 00:08:02,680
Okay. So by and large, I'm looking for one method that works.

81
00:08:03,250 --> 00:08:07,990
Once I find my method that works, I'm done. I'm not going to mess around with trying to important four different ways.

82
00:08:09,190 --> 00:08:12,080
It's just knowing that there are also a few different ways.

83
00:08:12,100 --> 00:08:21,510
So let's try to first I set my working directory, but I pull this data in down here in my environment window.

84
00:08:21,520 --> 00:08:25,280
You can see I have a data set that I called IQ.

85
00:08:25,300 --> 00:08:33,090
Why is it called IQ? Obviously, like, you know.

86
00:08:37,160 --> 00:08:43,230
Did I? Because I needed IQ where I need an IQ. I see.

87
00:08:43,310 --> 00:08:46,490
Right here. I set this thing. I call my data.

88
00:08:46,910 --> 00:08:50,090
My data friend IQ data frame data set synonymous.

89
00:08:50,090 --> 00:08:54,230
And this class. I call this data frame IQ completely arbitrary.

90
00:08:54,500 --> 00:08:57,710
Oksana You're right. It's because one of the variables in the data is IQ.

91
00:08:58,040 --> 00:09:03,050
And then I call it IQ, right? So you name it, whatever, whatever, whatever it is that you want.

92
00:09:03,980 --> 00:09:07,880
But now we see that we have a data file or a data set named IQ.

93
00:09:08,540 --> 00:09:12,080
How many observations does it have? 60.

94
00:09:12,950 --> 00:09:16,070
How many variables? Very, very wonderful.

95
00:09:16,430 --> 00:09:23,540
All right. So it's great to see this down here, but we're also going to want to take a look at our data set.

96
00:09:24,320 --> 00:09:29,630
I think a good practice would be to look at it as a text file or as an Excel file or something, maybe first.

97
00:09:30,050 --> 00:09:36,620
And then you can also look at it after you look after you pull it into our our studio.

98
00:09:37,160 --> 00:09:44,000
All right. So I think we just started to do this a little bit on C classes.

99
00:09:48,440 --> 00:09:51,900
Better for me. We I do this a little bit on Thursday.

100
00:09:52,760 --> 00:09:59,600
But if you are trying to pull in data that is from a standard package like SPSS or SATA or SAS,

101
00:09:59,990 --> 00:10:03,890
you need to use a different function than one that's just asking you to read a table

102
00:10:04,550 --> 00:10:09,500
or a table B text data or tabbed eliminate or comma separated variable files.

103
00:10:10,100 --> 00:10:16,960
All right. So if you are working with SPSS, you need a very you need to pull a variable in the appendix that savvy.

104
00:10:17,240 --> 00:10:23,180
This is an SPSS file has a whole bunch of metadata the SPSS codes women in our needs to learn our

105
00:10:23,180 --> 00:10:27,440
needs to recognize that to pull in all that information or to take advantage of all that information.

106
00:10:28,910 --> 00:10:33,530
It cannot do this on its own. So it needs some help to do that.

107
00:10:33,530 --> 00:10:38,450
If you recall, we can add packages to R by installing them.

108
00:10:39,530 --> 00:10:42,980
First we have to know what they are, but we can install them using installer packages.

109
00:10:43,640 --> 00:10:47,690
Name of the package dependencies equals true.

110
00:10:47,690 --> 00:11:02,050
And if I remember we did what this was for from last Thursday. So like everything else that needs to be in place that I kind of know.

111
00:11:02,530 --> 00:11:06,310
Yeah. Yeah. Good. Jenny. Jenny.

112
00:11:06,610 --> 00:11:11,230
So you're absolutely right. So this is a package called for, and it has a whole bunch of different functionality.

113
00:11:11,590 --> 00:11:19,240
Oftentimes when people build packages, they use other packages available and are to supplement their own functionality.

114
00:11:19,990 --> 00:11:25,960
When you say dependencies equals true, which is not the default, by the way,

115
00:11:26,860 --> 00:11:32,860
you will download not just the foreign package but all the other packages associated with form.

116
00:11:33,730 --> 00:11:35,290
So all the things it's going to call it.

117
00:11:36,190 --> 00:11:42,280
The reason why you want to do this is you can download this by itself and on occasion you're going to try to do something

118
00:11:42,280 --> 00:11:48,609
with this package and it's going to return an error because it's missing some some function that it doesn't have,

119
00:11:48,610 --> 00:11:52,540
that it needs another package to do. Does that make sense to folks?

120
00:11:53,260 --> 00:12:01,000
I'm only saying this now because we'll do this with almost every single package that we install to include this dependencies equals true.

121
00:12:01,820 --> 00:12:06,850
All right. Once we do that, we now have a new book on our library.

122
00:12:07,240 --> 00:12:11,890
It's it's a new piece of information or a set of functions and information that we can access,

123
00:12:12,400 --> 00:12:17,530
not when we first open are we need to be able to tell our that we want to use this package.

124
00:12:17,530 --> 00:12:20,620
That's what this library with the name of the package means.

125
00:12:20,920 --> 00:12:24,160
I'm pulling that book off the shelf so I can see the different stuff that's within.

126
00:12:24,760 --> 00:12:31,209
I can utilize the different stuff that's already showing you this now because we'll we'll do something

127
00:12:31,210 --> 00:12:35,410
similar in a little bit in terms of installing the package and also pointing from our library.

128
00:12:35,710 --> 00:12:42,970
So that's another way to get information into our studio using a different package.

129
00:12:43,600 --> 00:12:49,030
Note that every package and error in functions from different packages.

130
00:12:49,180 --> 00:12:56,340
This is a function read that SPSS is going to have different arguments in the signal server.

131
00:13:03,840 --> 00:13:09,810
And they're real. These are the arguments for RedOne SPSS.

132
00:13:10,800 --> 00:13:14,830
They're a little bit different than read that CSB.

133
00:13:15,630 --> 00:13:22,170
So it's an unfortunate reality that we're going to have to understand the different functions, what different functions are calling for.

134
00:13:22,440 --> 00:13:26,819
Because when we try to do certain things, as we start to shift and using different packages,

135
00:13:26,820 --> 00:13:30,750
different functions, we can't just rely on the exact same argument structure.

136
00:13:31,080 --> 00:13:34,150
By and large, they're pretty similar, and that's a good thing.

137
00:13:34,170 --> 00:13:37,820
They're usually asking for the data first and then some of the supplementary commands.

138
00:13:38,210 --> 00:13:43,950
There's there's some standardization across packages in terms of the types of arguments that we use.

139
00:13:44,250 --> 00:13:50,220
How to handle missing data. How to what to deal with, like big, big, big numbers or really, really small numbers.

140
00:13:50,670 --> 00:13:56,640
And more often than not, we can probably default to the to the default settings.

141
00:13:57,120 --> 00:14:02,159
But sometimes there are going to be some specific things that we want to do or specific

142
00:14:02,160 --> 00:14:06,660
arguments that we want to use so that we get the data in the way that we want to.

143
00:14:07,260 --> 00:14:13,740
In this case, there's one that probably you would never have thought about used that values that labels equals true.

144
00:14:14,430 --> 00:14:23,520
This means it's going to retain some of the information that SPSS codes into it, namely the the information about some of the response options.

145
00:14:24,570 --> 00:14:30,810
And I'll show you an example of that later today when this is a really helpful thing to have versus what happens if you don't use it.

146
00:14:31,230 --> 00:14:41,850
Okay. The other command that you need to be aware of if you're going to read in an SPSS file, is to that data, that frame command.

147
00:14:42,600 --> 00:14:57,610
If we want to take a guess what this means. Well we think this too that data that frame what the data frame in our.

148
00:14:59,970 --> 00:15:08,090
Synonymous with. DataFrame is the same thing as a dataset, if you will.

149
00:15:09,740 --> 00:15:17,330
We want this to be read in as a dataset, something that we can manipulate to work with, not just a string of numbers and letters.

150
00:15:17,510 --> 00:15:21,920
Right. So it's going to it's going to include some structure, right?

151
00:15:21,980 --> 00:15:28,580
It's going to be built into something that we can have some fun with versus, you know, more or less just kind of a text file.

152
00:15:29,360 --> 00:15:34,880
So we want to have this equals true. You don't need to do that because of the type of file that we're working with.

153
00:15:35,630 --> 00:15:42,770
We can show you that just by using some of these basic URI commands not lionize you if you're with me still.

154
00:15:43,790 --> 00:15:46,790
There's our data file. Life is good.

155
00:15:47,000 --> 00:15:52,130
This should look like an Excel file. Should look like any number of things that you've used in the past.

156
00:15:52,460 --> 00:15:57,410
Three variables. We have 60 observations so I can scroll all the way down.

157
00:15:57,890 --> 00:16:04,520
Do this, do this, do this often and frequently. Making sure that the data that you expect is the data that you have.

158
00:16:04,910 --> 00:16:10,970
Notice that if we open just the original itself and this.

159
00:16:16,670 --> 00:16:23,890
For comparison's sake. That comes up.

160
00:16:29,260 --> 00:16:33,440
Print is just going to give us the virus.

161
00:16:33,840 --> 00:16:37,270
This was just the Excel file itself. It's a little hard to see.

162
00:16:38,050 --> 00:16:42,550
Notice that that very first line, that row one, are the names of the variables.

163
00:16:43,060 --> 00:16:54,820
So when we use this command up here, we use this command up here to read in the data.

164
00:16:54,820 --> 00:17:01,030
This header equals true. That was saying that this first row are variable names.

165
00:17:02,140 --> 00:17:08,950
If we hadn't done that, we would have gotten a data set that had a few values that were a huge achievement in school.

166
00:17:11,830 --> 00:17:13,660
Prints just going to give us everything in the file.

167
00:17:15,850 --> 00:17:26,350
So we saw last week that our helpfully indexes all of our different rows right to row 13 corresponds to in this in our actual data file,

168
00:17:26,680 --> 00:17:36,009
the 14th row, the original file. But in this case is our 13th observation head is something that I just kind of instead of having a print,

169
00:17:36,010 --> 00:17:44,740
if you had hundreds of cases, thousands of cases, if you just want the first ten is are you doing all this stuff pretty regularly?

170
00:17:45,460 --> 00:17:49,390
Yes. Seriously, even for your data, do these five lines.

171
00:17:49,540 --> 00:17:53,950
It takes 5 seconds. It's going to give you some of this information really quickly.

172
00:17:54,160 --> 00:17:58,750
And it's really just making sure that when you read something in, it didn't get lost in translation.

173
00:17:59,270 --> 00:18:05,409
Right. The name thing is going to be helpful. Just if you want the names of variables, especially when we start coding.

174
00:18:05,410 --> 00:18:10,690
If I say I want the correlation between achievement in school, but I can't remember the names of my variables.

175
00:18:10,960 --> 00:18:13,000
Wow. Isn't it helpful to have this names command?

176
00:18:13,240 --> 00:18:19,540
That just gives me all the variable names pragmatically to know if we have a dataset that has 500 variables, that type of thing.

177
00:18:19,540 --> 00:18:23,020
We have to start to work a little more, I guess intentionally.

178
00:18:24,490 --> 00:18:28,120
This SDR is a it's called is a structure command.

179
00:18:29,050 --> 00:18:32,890
This is really helpful. It gives us a lot of interesting information.

180
00:18:33,280 --> 00:18:42,670
So this kind of repeats what we see down here, not as helpful, but the kind of variables that we're reading in is going to be really important.

181
00:18:43,030 --> 00:18:46,990
I in t stands for integer. We can also have character variables.

182
00:18:47,410 --> 00:18:50,650
We can have logical variables, whether true or false.

183
00:18:51,820 --> 00:18:55,390
There are a couple of other boolean variables that we're probably not going to use in this class,

184
00:18:55,840 --> 00:19:01,060
but this helps us understand how R is reading into this information.

185
00:19:01,660 --> 00:19:05,350
And when I talked about that SPSS command that value labels equals true.

186
00:19:06,010 --> 00:19:11,230
That's one place where people can go wrong because we're reading in what we think are numeric data.

187
00:19:11,920 --> 00:19:21,370
But if R sees that the data was coded as, for example, strongly agree or neutral, it might read in those values and say, these are text strings.

188
00:19:21,850 --> 00:19:24,610
We think of them as values on a scale, right?

189
00:19:25,000 --> 00:19:32,410
It's an ordinal scale, but it's still kind of 1 to 5, aka aka treat that as a text or a character variable.

190
00:19:32,770 --> 00:19:38,110
So we're going to be looking to see what kind of data that we're working with and whether or not we need to change those things.

191
00:19:38,560 --> 00:19:42,700
So structure is going to help us just in a quick just quickly see,

192
00:19:43,150 --> 00:19:51,850
did the data read in the way that I was expecting even will provide some of these values for you questions about this is

193
00:19:51,850 --> 00:19:58,690
a good good little things to know good little things to do if you are using the same data file that you did yesterday,

194
00:19:58,690 --> 00:20:02,559
do you have to do this again? No. But the next time you were important data, should you do it again?

195
00:20:02,560 --> 00:20:07,930
Yes. Summary is just kind of an overview of what we have.

196
00:20:08,350 --> 00:20:12,309
So here are different values. This one is arbitrary or not.

197
00:20:12,310 --> 00:20:20,840
Actually these are comparable. So mean, mean, mean quartiles meaning of folks have seen this from 5 to 3 right over.

198
00:20:21,010 --> 00:20:27,430
Right. If you get this command, this is helpful.

199
00:20:27,430 --> 00:20:36,459
If, for example, you are in charge of your data, if you are if you need to make a correction, if you saw clearly that there was a value of the range,

200
00:20:36,460 --> 00:20:46,900
let's say 262 or perhaps it was .1001 something or so, sometimes inadvertent decimal or something like that.

201
00:20:47,380 --> 00:20:51,580
You can go in, you can find that outlier and you can make a quick correction.

202
00:20:53,050 --> 00:20:58,120
Example, is this only in this window or does it also reflect?

203
00:20:59,470 --> 00:21:07,180
I just know just what you are. So now you have once you've been forwarded this this data, this is separate from that itself.

204
00:21:07,540 --> 00:21:10,540
So that any changes you make here will not be reflected in itself.

205
00:21:10,540 --> 00:21:17,530
On the Excel files, just your source data are is created a new dataset called Like you.

206
00:21:22,260 --> 00:21:31,970
Wow. This is a logical question. So when you ask, we often do this with our we say, are we doing are you doing what I think you're doing to false?

207
00:21:32,270 --> 00:21:35,480
Am I right or wrong to false? This is a question, basically.

208
00:21:35,870 --> 00:21:41,449
It's is the data frame IQ. In fact, a data frame seems pretty obvious,

209
00:21:41,450 --> 00:21:48,440
but on occasion we'll be working with a file that we think is characterized as a data frame, the matrix, whatever.

210
00:21:48,770 --> 00:22:00,999
And in fact, it's not. When we run that, when we run line 1 to 1, we see that in fact, we are working with a data frame for the fix the line 100%.

211
00:22:01,000 --> 00:22:09,230
Q Do you have to like download some of the like by using a check for export?

212
00:22:11,390 --> 00:22:22,210
It's still a sport. The story, of course, is like the visual window.

213
00:22:29,930 --> 00:22:37,250
Yeah. That doesn't matter. Um, I can.

214
00:22:37,940 --> 00:22:41,750
I can check. I can check with you when we have a break.

215
00:22:42,620 --> 00:22:49,850
I'm not sure why that's not by that would work, but yeah, of course is usually the plotting to do or it's usually connected with that.

216
00:22:51,710 --> 00:22:59,780
If you make a whole bunch of errors and you don't want to and you want to go back to the original, remember with ah, we can always just absurd.

217
00:23:02,590 --> 00:23:11,980
It would to. Um. So for purposes of this class sample statistics are going to be helpful.

218
00:23:12,340 --> 00:23:15,639
Instead of asking for summary statistics if we want individual things like the

219
00:23:15,640 --> 00:23:21,100
mean standard deviation correlation lines 104105 and 126 will do this for you.

220
00:23:21,760 --> 00:23:26,110
A couple of things to note and I know this problem. This is all very, very basic right now.

221
00:23:26,110 --> 00:23:32,560
But the idea is when you get to something a lot more complicated, we can fall back on, for example, these basic functions.

222
00:23:32,980 --> 00:23:37,810
These are all built within Base R, which means we don't need any sort of package to do this.

223
00:23:38,180 --> 00:23:43,360
All right. So we can calculate the and standard deviations in correlations without any additional functionality.

224
00:23:44,050 --> 00:23:49,870
Mean is going to have a bunch of arguments that it's looking for, but basically it's going to say X, it wants some vector of information.

225
00:23:49,870 --> 00:23:53,440
It just needs a bunch of variable values and a variable.

226
00:23:53,560 --> 00:24:01,840
And all the values we have to index in are like receipts, for example, what dataset we're drawing from.

227
00:24:02,690 --> 00:24:10,900
And we're not just taking it from a kind of a vector of information, but there's a data file that has more than one value, more than one variable.

228
00:24:12,670 --> 00:24:22,330
We need to tell if both the dataset that we're using, the dollar sign tells us which variable from that dataset to calculate the mean.

229
00:24:23,830 --> 00:24:30,129
Okay, so if we say dataset, IQ, dollar sign, when we start, when you hit the dollar sign in there,

230
00:24:30,130 --> 00:24:33,370
our studio helpfully pops up the different variable names that you could choose from.

231
00:24:33,970 --> 00:24:38,330
We're going to ask for achievement, and it's going to give us the mean of that particular variable.

232
00:24:38,890 --> 00:24:42,430
Same thing with standard deviation correlation.

233
00:24:42,430 --> 00:24:51,130
Now, because we need two variables to create data to calculate the correlation we have, we're indexing both with the same data file.

234
00:24:51,820 --> 00:24:55,450
We're using Akamai to say, This is my X variable, this is my Y variable.

235
00:24:55,450 --> 00:25:01,390
That's completely arbitrary because a correlation doesn't care. There might be some that you care about which the order is.

236
00:25:01,690 --> 00:25:07,040
In this case you don't apply we window. For example, if you want one of you, the x value would be a y value.

237
00:25:07,450 --> 00:25:13,550
Nice liberal. Okay. Questions about these three account.

238
00:25:15,040 --> 00:25:22,740
When you're doing things like correlation or even deviation, if you wanted to get it for more than one of the columns.

239
00:25:22,750 --> 00:25:27,100
So let's say you want to get it for school. How would you put that in when you put the comma?

240
00:25:27,100 --> 00:25:33,759
And then again, I keep saying the word. So if you wanted me to say, you could just do like a mean of an entire data frame.

241
00:25:33,760 --> 00:25:36,729
So you can just say he means IQ, the whole thing.

242
00:25:36,730 --> 00:25:45,580
You should get all three days or you can use the weird function somewhere and then see it in the names of the three variables.

243
00:25:47,800 --> 00:25:57,430
You can also use a matrix and kind of apply all function, so multiple ways to kind of do the same thing but the easiest way.

244
00:25:57,430 --> 00:26:07,150
So if you're asking for just like the summary statistics of all of IQ, you can just do this.

245
00:26:08,710 --> 00:26:16,660
No, I'm trying to put it in.

246
00:26:16,660 --> 00:26:21,250
So I use the correlation and I put it in all of that.

247
00:26:21,250 --> 00:26:28,180
And then after you make a comma and put it in again IQ score, it gives you an error.

248
00:26:28,850 --> 00:26:42,190
That's because when you look at the mean function, the function you would have to build in all the variables that you want to see into this x value.

249
00:26:42,850 --> 00:27:02,010
So. So we would need to create an object that would have all three values here that it's going to be able to calculate from each.

250
00:27:02,880 --> 00:27:08,310
But so when you do that karma, the next thing that it's looking for is some command related to trim.

251
00:27:08,550 --> 00:27:12,660
Trim just means like cut the sides off of the tops and the lowest and highest and lowest values.

252
00:27:13,200 --> 00:27:20,549
Then the next column is going to be for any that are. So what we have to do is we have to create our new X variable or an object that's going to

253
00:27:20,550 --> 00:27:25,940
have the names of those three variables for them for which we want to calculate the mean.

254
00:27:25,950 --> 00:27:33,420
And I'm not sure why it's not recognizing just this IQ object by itself should.

255
00:27:40,020 --> 00:27:43,900
It could be because of a school variable. Hmm.

256
00:28:14,280 --> 00:28:17,999
Giving it back to you, because that is so we're going to use a function that's going to do that.

257
00:28:18,000 --> 00:28:25,170
We should be able to work more easily than just this base function with calculating a mean which.

258
00:28:27,380 --> 00:28:35,570
If you do not want to index the specific file names or there are the data sets that you're using like we have to do here with the dollar sign.

259
00:28:36,020 --> 00:28:44,150
You have the ability to attach a specific data frame or this data file is that we're using the attach

260
00:28:44,160 --> 00:28:49,100
function when you do that or is going to say that you are working with this specific data set.

261
00:28:49,970 --> 00:29:00,110
Once we do this, we can just use the direct call, for example, mean of achievement, just like we did above and well for.

262
00:29:00,320 --> 00:29:04,040
But now we don't have to have the whole IQ dollar sign piece.

263
00:29:05,360 --> 00:29:14,420
This is a fast practice, but probably not the best one because it can get confusing what very what data sets you have attached versus not.

264
00:29:14,990 --> 00:29:23,360
I think it's a lot better to consistently say I know exactly what data frame I'm calling my or I'm calling from in order to run this function.

265
00:29:24,070 --> 00:29:24,620
All right.

266
00:29:24,620 --> 00:29:34,960
So it's going to be rare that you'll see us attach a data file or a data frame and then start to run all these things with just the names themselves.

267
00:29:36,650 --> 00:29:50,770
But you can do it. You know, just.

268
00:30:28,200 --> 00:30:35,940
So when I fix the data, it changes the data frame and reattach the data frame.

269
00:30:38,010 --> 00:30:42,989
Which is another reason why I don't like attaching the data or is easier just to be

270
00:30:42,990 --> 00:30:46,080
able to index directly to the data file or the data frame that I'm working from.

271
00:30:46,740 --> 00:30:47,010
All right.

272
00:30:47,010 --> 00:30:55,550
So all this is meant to do is show you that you can attach specific data sets if you want to, and then you don't need this little dollar sign thing.

273
00:30:55,920 --> 00:30:58,740
But again, I think it's a good it's a better practice just to kind of keep it.

274
00:30:59,130 --> 00:31:03,210
And once you are done working with a file like this, you can use the detach command.

275
00:31:03,630 --> 00:31:06,660
And now if you try to run these things again, it's not going to know what you're looking for.

276
00:31:12,880 --> 00:31:19,220
Okay. All right.

277
00:31:19,460 --> 00:31:25,220
What else do we have here? Oh, here's my package. Yeah. So, line 116.

278
00:31:25,220 --> 00:31:28,430
Here I am using a package that we'll use frequently.

279
00:31:28,430 --> 00:31:29,750
This class is called sake.

280
00:31:30,680 --> 00:31:36,560
I forget who developed it, but it's essentially just a whole bunch of things that psychologists like to use when they're used to working with data.

281
00:31:36,980 --> 00:31:40,780
So I love it. Notice that I have installed our packages.

282
00:31:40,790 --> 00:31:45,980
This is the first time at least for this computer. It knows that this is coming in the name of the package.

283
00:31:46,160 --> 00:31:51,230
Whereas this one mean again all the data for the new associated.

284
00:31:51,290 --> 00:31:54,620
Exactly. Just do it by default. Right. There's no reason not to.

285
00:31:54,770 --> 00:31:57,770
Shouldn't hurt anything to have the additional packages in functionality.

286
00:31:58,130 --> 00:32:03,110
Remember, installing it is not enough. Each active session that I use I need to call it from my library.

287
00:32:09,020 --> 00:32:12,080
So pay attention to some of these warnings.

288
00:32:13,280 --> 00:32:22,070
This one is saying that when it was trying to install the package, it didn't have or wasn't able to download or install this package.

289
00:32:22,520 --> 00:32:29,990
My guess is that this is probably either deprecated, meaning that it's either not it's not updated or it's not in use anymore.

290
00:32:30,590 --> 00:32:37,760
So we're going to be looking out for in a rare and a rare case, something is going to be trying to draw from this package.

291
00:32:37,760 --> 00:32:43,070
If we get an error related to some function, it could be because this package doesn't exist.

292
00:32:43,580 --> 00:32:47,750
The other thing that we can do when we get to a situation like this is we can look to see.

293
00:32:53,100 --> 00:32:59,360
You can look to see if T and V and as I am in this.

294
00:33:07,700 --> 00:33:17,510
And start up. When I do this, typically, probably just because you never know.

295
00:33:17,930 --> 00:33:21,320
I've never heard of this package. We can look it up to see what it does.

296
00:33:21,860 --> 00:33:29,329
But if any of your kind of standard commands that have worked in the past for some reason aren't working,

297
00:33:29,330 --> 00:33:36,320
and you can confirm that you have the same package. Maybe it's either hasn't been updated or it's there.

298
00:33:36,390 --> 00:33:39,260
It's looking for something that doesn't that hasn't been updated.

299
00:33:39,740 --> 00:33:45,860
You can go and look for them individually, install them and usually be able to to improve the functionality that way.

300
00:33:46,280 --> 00:33:49,429
It does happen, doesn't happen super often, but certainly with big,

301
00:33:49,430 --> 00:33:54,979
big packages like Google too and some of the other ones that are very common and are updated frequently on occasion,

302
00:33:54,980 --> 00:33:58,340
you might have to go in individually to address some of these errors.

303
00:33:58,340 --> 00:34:02,299
Again, it's saying that I couldn't find this package when in fact it does exist.

304
00:34:02,300 --> 00:34:03,170
We were able to install it.

305
00:34:03,170 --> 00:34:11,120
Oksana And for me, if you've seen that the package thing is in use and will not be installed, does that mean it's already in there?

306
00:34:11,150 --> 00:34:22,340
You've already you already have it on your library. It's saying, do you want to install processes, the packages which need confirmation?

307
00:34:22,700 --> 00:34:30,150
Yes. And all kinds of. This is what I'm getting when I.

308
00:34:35,400 --> 00:34:45,030
All right. So now that we have the safe package hopefully installed, we can use a different a different set of functions to describe command as one.

309
00:34:45,030 --> 00:34:49,230
Such this is just unique to the site package in terms of what it's going to do.

310
00:34:49,680 --> 00:34:54,630
Notice that here I'm using the entire data frame IQ.

311
00:35:01,380 --> 00:35:07,960
There. In my head I clicked library so installing wasn't enough.

312
00:35:08,380 --> 00:35:11,770
Had to call it from the library. Noticed this is just too good.

313
00:35:13,900 --> 00:35:19,660
I know psych has the function described. It makes no sense that this function doesn't exist.

314
00:35:20,500 --> 00:35:31,209
My name I am. I kind of steps in terms of trying to figure out why would be to go back and try my library again and you're trying to do a little

315
00:35:31,210 --> 00:35:39,040
bit of study detective work when you get these error messages in are typically 99% of the time it's user error in some way,

316
00:35:39,040 --> 00:35:43,390
shape or form. On occasion, packages kind of self-destruct a little bit,

317
00:35:43,630 --> 00:35:49,340
but usually your whole studio is going to be restarting rather than something just all of a sudden not working.

318
00:35:50,170 --> 00:35:58,420
So describe is just nice in my mind because it gives you a lot of information that you don't get when you ran, for example, these three or four above.

319
00:35:58,960 --> 00:36:06,610
So we did like the summary statistics. We did the mean, we did the standard deviation while about four different lines of code.

320
00:36:07,030 --> 00:36:12,459
Whereas here we have all this information kind of built right into it.

321
00:36:12,460 --> 00:36:20,860
So we get a number of values, the means, their deviation median trimmed from mean which is again you take some of the extreme values off.

322
00:36:22,000 --> 00:36:31,120
This is the median the something distance of the max distance from the median.

323
00:36:32,560 --> 00:36:35,980
This many max of the variable names of the variable values.

324
00:36:35,980 --> 00:36:42,100
Looking here for outliers, does anybody have an IQ under 80 or over 135 that we should be thinking about?

325
00:36:42,490 --> 00:36:45,730
Range. Just good information to have for us.

326
00:36:45,970 --> 00:36:49,480
You know, kind of from a thinking about my variables. Do these make sense?

327
00:36:49,780 --> 00:36:53,649
We would expect for something like IQ if that really does exist to be kind of

328
00:36:53,650 --> 00:36:58,360
roughly normally distributed school is just an indicator of public versus private.

329
00:36:58,720 --> 00:37:02,050
So we wouldn't expect to see values above one or zero.

330
00:37:02,680 --> 00:37:06,580
Notice that the median here has no makes no difference for a public and private variable.

331
00:37:07,210 --> 00:37:12,400
Right? So we need to think again about the data that we're using, what we should be expecting.

332
00:37:13,570 --> 00:37:22,120
If you didn't want all of it, you could just use, for example, describe dollar sign and you just got this.

333
00:37:23,800 --> 00:37:33,160
So all I did was instead of saying, give me the whole data frame, I want one specific variable from there described by is another nice feature.

334
00:37:33,640 --> 00:37:37,570
So if you have for example, a grouping variable, in this case we have public and private.

335
00:37:39,370 --> 00:37:43,450
I'm going to get I won't mind the name of my variable that I care about in this case achievement.

336
00:37:43,810 --> 00:37:48,040
I might be interested to see whether there are differences in achievement based on the school that folks attend.

337
00:37:49,810 --> 00:37:53,440
And now it's broken this up for me by group zero.

338
00:37:53,440 --> 00:37:57,640
Group one we can look to see which is which back in our original data file.

339
00:38:01,110 --> 00:38:05,579
Mm hmm. Public.

340
00:38:05,580 --> 00:38:14,400
I think a zero private is one. So for our public schools, the means slightly lower than in our private schools.

341
00:38:15,450 --> 00:38:19,770
Right. All of this is descriptive information. We could do this multiple ways.

342
00:38:20,070 --> 00:38:29,960
But in terms of a quick summary, it can be really helpful. No, I got a lot of errors from the site.

343
00:38:30,360 --> 00:38:33,600
Okay. I guess. And just give me a lot. Okay.

344
00:38:34,320 --> 00:38:38,520
Let me we'll do we can take a break in a couple of minutes and then I can walk around and help some folks.

345
00:38:40,020 --> 00:38:47,420
All right. Um, the next few lines here are really just for demonstration purposes.

346
00:38:47,430 --> 00:38:59,280
We are not going to use the base R visualization functionality as much as we will use a different package from the folks that make our studio,

347
00:38:59,550 --> 00:39:10,560
but know that even with the base functionality, R is incredibly skilled, if you will, at creating visualizations.

348
00:39:11,040 --> 00:39:14,130
And you can do a lot of cool stuff with our visualizations.

349
00:39:14,490 --> 00:39:17,610
It doesn't have to be just kind of the basic things that I'm going to show you is to

350
00:39:17,610 --> 00:39:23,160
know that if you'd rather develop your proficiency in using our base functionality,

351
00:39:23,340 --> 00:39:32,160
you're absolutely allowed to do that. And I can help you do that too. But this is just a basic scatterplot, so this is just one thing that R can do.

352
00:39:32,670 --> 00:39:35,670
So this is not a very helpful set of arguments for us.

353
00:39:35,670 --> 00:39:46,350
But as always, we could go to the Help menu and just type and plot and you get more information than you ever could ever want,

354
00:39:47,130 --> 00:39:51,030
including manuals and links to manuals. So how do you excuse me?

355
00:39:51,030 --> 00:39:59,160
How to use this functionality? Okay, folks, we've seen this before.

356
00:39:59,240 --> 00:40:06,080
Scatterplot actually provided them for me and in some ways in there for the data assessment.

357
00:40:07,220 --> 00:40:11,390
If you wanted to have the IQ be on the other side, you can just flip the variables around.

358
00:40:11,930 --> 00:40:21,440
So if you wanted IQ to be the the on the Y axis, you could put on the right hand side again.

359
00:40:21,620 --> 00:40:26,360
125 Just showing you that it doesn't have to be this kind of generic plot.

360
00:40:27,650 --> 00:40:32,180
You can use all sorts of different functionality and this is even for me.

361
00:40:32,180 --> 00:40:40,009
So add in a title, add in the labels, change the tick marks, you can change the blah, blah, blah, you can add a regression line.

362
00:40:40,010 --> 00:40:48,110
You can do so many, so many, so many things. And we'll be spending a lot of time this semester trying to utilize that, that ability.

363
00:40:48,470 --> 00:40:52,940
And what, again, I like about R is you can do so much of it all at the same time, right?

364
00:40:52,940 --> 00:40:55,519
So you can be running your statistics and then thinking about, okay,

365
00:40:55,520 --> 00:40:59,870
now that I've run these statistics, how can I put them directly into a visualization,

366
00:41:00,260 --> 00:41:06,680
not trying to recreate them in some way and in a different and a different software or in a more visually

367
00:41:06,680 --> 00:41:13,510
appealing software is going to allow you to make kind of publication quality stuff with within,

368
00:41:13,670 --> 00:41:15,079
within our studio, within the software.

369
00:41:15,080 --> 00:41:26,209
And I'll show you this on Thursday histogram kind of like it sounds yeah normally distributed life is good we'll use things like

370
00:41:26,210 --> 00:41:31,640
this again for just a quick visual just a quick visual to make sure the data that we were expecting is kind of showing up.

371
00:41:32,000 --> 00:41:37,880
If we saw major skewness or keratosis keratosis, remember, is just what if it's really steep versus flat?

372
00:41:38,300 --> 00:41:41,450
Skewness is going right and left. You showed me that on your readiness assessment.

373
00:41:42,020 --> 00:41:46,639
We can change the boxes, we can change the text, we can change the background, we can make the colors pretty.

374
00:41:46,640 --> 00:41:52,550
We can add multiple variables down here so that we see different differences by a specific group.

375
00:41:52,910 --> 00:41:58,250
Right? All of that is highly customizable, basic to if we need it.

376
00:41:59,930 --> 00:42:04,040
All right. So let's take just a short break here.

377
00:42:04,040 --> 00:42:09,140
And it's not really a break, but while I kind of walk around and see how folks are doing, if you want,

378
00:42:09,350 --> 00:42:17,239
you can prejudice rerun to run some of these things for the next kind of five, 10 minutes.

379
00:42:17,240 --> 00:42:22,550
The purpose of this little exercise that you can see it is that we're using a different kind of file.

380
00:42:23,060 --> 00:42:28,100
So you don't know much about the first dataset now, but I just want to see if you can pull it in.

381
00:42:28,790 --> 00:42:32,690
All right. So we're just trying to pull in the data file itself.

382
00:42:32,930 --> 00:42:37,580
We want that CSV. So all I want to do is get that file in it.

383
00:42:38,060 --> 00:42:43,850
And when you'll know how to get the files in there, you can check your global environment.

384
00:42:44,330 --> 00:42:50,300
You can run some of these folks that will tell you, you know, what were the variables or the first ten variables.

385
00:42:50,630 --> 00:42:53,690
Can I just see it and what's the structure summary effective.

386
00:42:53,690 --> 00:43:03,130
So and I'm going to walk around and present in trouble with the other ones starting a project in case you come up.

387
00:43:03,200 --> 00:43:07,160
And I think it's called, but I'm still getting the same terms. Okay, just keeps the writing.

388
00:43:09,540 --> 00:43:13,380
So it's the president's not stifling prejudice.

389
00:43:14,010 --> 00:43:19,830
So there are quite a few that are involved with the same thing. So those are all just the independents.

390
00:43:24,790 --> 00:43:28,460
So it should. It should eventually stop.

391
00:43:29,110 --> 00:43:32,110
Oh, I might want to think right now. Okay.

392
00:43:32,530 --> 00:43:40,090
And then once it's all in, once it's finished, then you should be able to use the library psych, and then you'll have access to all this stuff.

393
00:43:40,540 --> 00:43:48,670
All right. There's no package.

394
00:43:49,650 --> 00:43:54,110
Right. So did you install it? So go to.

395
00:44:11,680 --> 00:44:17,420
Let's. You're.

396
00:44:20,620 --> 00:44:23,980
Right now you're. Yeah, I. When? 17.

397
00:44:43,880 --> 00:44:48,630
I had. Scroll down.

398
00:44:52,260 --> 00:44:59,580
Oh. So to do this and try to see.

399
00:45:22,230 --> 00:45:26,400
Can you download the package? Our tools.

400
00:45:29,250 --> 00:45:40,510
Record Line 116. And instead of saving on a two tone word.

401
00:45:57,270 --> 00:46:04,980
I didn't get an error message that I think you're trying to do is try that, she said.

402
00:46:05,630 --> 00:46:11,790
Yeah, I'm sorry. Rather.

403
00:46:14,440 --> 00:46:20,220
And maybe they're using this something or another and.

404
00:46:22,670 --> 00:46:32,420
If you physically the. I think for the reason that it's not just like dry hair.

405
00:46:32,580 --> 00:46:40,080
It's just saying, you know, I don't know everyone. So I tried to do that and then see there's no parking for.

406
00:46:46,030 --> 00:46:51,200
Can you? Yeah.

407
00:46:51,980 --> 00:47:15,340
This program is. You go to.

408
00:47:21,720 --> 00:47:40,730
You wanted to help. And how is it that you just have this in the last couple of weeks and I just updated it just a few days ago and seriously.

409
00:47:41,970 --> 00:47:48,130
Um, yeah. I'm not sure. I mean, I might because it's something that people aren't able to get to this book.

410
00:47:48,160 --> 00:47:54,040
Seven, seven, seven. So. I think it.

411
00:47:54,460 --> 00:47:58,330
It took a while, though. Yeah, it's. It's a bunch of additional files.

412
00:48:06,460 --> 00:48:16,610
See here you can go to. I mean the window to get good at the Twinkie when you.

413
00:48:18,770 --> 00:48:31,629
Small packages. For the Australian champions in two years or so.

414
00:48:31,630 --> 00:48:47,750
This one is. And then later this year and then 20 years later, someone here to see it.

415
00:48:50,090 --> 00:48:54,630
Many versions and other versions. Yes, it's so.

416
00:48:57,410 --> 00:49:03,590
Is it fair competition? So we might have to use that heritage he turned down.

417
00:49:04,400 --> 00:49:08,020
Try this one. Yeah. Oh.

418
00:49:10,420 --> 00:49:18,210
So again, every time I read anything,

419
00:49:18,280 --> 00:49:29,340
I was really trying to do anything to try to download the compilation because if I could just have the critical questions.

420
00:49:29,860 --> 00:49:33,940
Okay. So way back to Dave and stuff.

421
00:49:35,740 --> 00:49:45,490
Okay. And then it's like, okay, I know this is true, so you might as well screw.

422
00:49:48,970 --> 00:49:52,600
That's just no different for you.

423
00:49:53,800 --> 00:50:02,740
I know that. So that was the one that I came here.

424
00:50:02,740 --> 00:50:09,850
So I had to download that individual. So you might just download a couple of those packages individually before going to the store.

425
00:50:12,940 --> 00:50:19,240
But yes, we have this. It's been done before.

426
00:50:19,330 --> 00:50:23,050
I think it's very important to raise issues now.

427
00:50:23,140 --> 00:50:31,240
When I tried to do this. Yeah.

428
00:50:37,930 --> 00:50:41,270
So. Yeah, I know. That's one reason I feel.

429
00:50:46,760 --> 00:50:53,280
But then I changed it to read it. I'm.

430
00:50:54,540 --> 00:50:57,840
Right. It's good to be helpful.

431
00:51:07,580 --> 00:51:18,709
That. And then it gives me like really the it's like 42 layers and that is not going to

432
00:51:18,710 --> 00:51:23,120
be uncommon and that's just because of what the did is that they were pulling in.

433
00:51:23,870 --> 00:51:29,500
So I apologize. This is an essay you file, not a dot CSP file.

434
00:51:30,740 --> 00:51:34,410
We are reading an SPSS file. Actually think of it in.

435
00:51:39,970 --> 00:51:51,870
I did this. I just heard you just said that.

436
00:51:53,910 --> 00:51:58,770
It's a great song. Oh, thank you.

437
00:51:59,250 --> 00:52:04,590
You know, it's like, you know, it's like I'm an attorney is just about, like, homeless, 300,000.

438
00:52:04,640 --> 00:52:10,020
And, you know, it's like it's. I thing.

439
00:52:11,010 --> 00:52:29,390
The subject of this report, as you know, and then in the press is not that you're going to tell me about it already is.

440
00:52:29,620 --> 00:52:33,040
Is. Oh, because I signed off. Yeah. Oh, thank you.

441
00:52:33,770 --> 00:52:43,300
And make sure to put it in quotes. So I. Yeah, I didn't put it in that way.

442
00:52:43,390 --> 00:52:46,390
I have no handkerchiefs around here.

443
00:52:46,780 --> 00:52:51,190
I saved it. So when it saves, it saves for me on my computer.

444
00:52:51,460 --> 00:52:55,420
Excel. I can save as. And then it'll go to excel.

445
00:52:56,050 --> 00:53:00,080
I had to look at it. That's right.

446
00:53:00,730 --> 00:53:07,240
But were you able to get the NSA wi fi on there? I my computer doesn't have SPSS on here, so I won't even let you see that.

447
00:53:07,570 --> 00:53:16,170
I think it's something that you get. And when I went to download those things that you might never read.

448
00:53:18,390 --> 00:53:22,720
I yeah. So I have no idea. Like, so it's on record?

449
00:53:22,810 --> 00:53:25,810
Yeah. Yeah. Oh, yeah. I had the double.

450
00:53:26,160 --> 00:53:29,730
Oh, yeah. Yeah.

451
00:53:30,910 --> 00:53:34,209
Do it. So even if I can't open it.

452
00:53:34,210 --> 00:53:37,650
And so yes, that's what's nice about. Oh yes.

453
00:53:37,680 --> 00:53:41,230
Oh sure. You should be able to be. You don't have to have SPSS.

454
00:53:42,340 --> 00:53:49,190
Okay, I'm going to try. You figured you had a very.

455
00:53:52,010 --> 00:54:13,000
Yes. I think, you know, if you can't find the function is probably the know that isn't right.

456
00:54:13,410 --> 00:54:20,240
There is an Associated Press news site.

457
00:54:22,660 --> 00:54:25,980
Right? Yeah, right.

458
00:54:27,040 --> 00:54:30,220
But I really think. Yeah, you know, a lot of them.

459
00:54:30,240 --> 00:54:40,170
Yeah. So I was like, yeah, it's like I'm ago, I was like, I say, How do you spell your name?

460
00:54:41,390 --> 00:54:50,540
So he's ready to whatever message. I feel that the the not know the gentleman.

461
00:54:50,990 --> 00:55:00,590
All right. So a couple issues notwithstanding, it sounds like some some some success, some challenges with some of these files.

462
00:55:00,590 --> 00:55:04,490
And that's I mean, we can absolutely work through some of these things.

463
00:55:04,850 --> 00:55:13,100
And you can see that even small just small glitches, small errors can cause a little bit of a headache and a lot more time than we'd want.

464
00:55:13,880 --> 00:55:18,570
But unfortunately, get used to that process. Good question.

465
00:55:18,740 --> 00:55:23,360
And I'm sorry, can I ask I don't have SPSS on my computer.

466
00:55:24,140 --> 00:55:28,670
How am I going to do this? Doesn't matter. You just need to file or can read it, which is great.

467
00:55:28,670 --> 00:55:35,300
I mean, somebody doesn't have to have SPSS an $800 data license or whatever to be able to use this file in an hour.

468
00:55:35,310 --> 00:55:40,940
So we like that this everybody saw was like one of these point click windows that you can use.

469
00:55:41,210 --> 00:55:45,110
You do not need to do this. You could have used a direct file name if you wanted to.

470
00:55:45,500 --> 00:55:52,480
If you downloaded that file, you could have gone right to your working directory and typed in defining okay of just

471
00:55:52,490 --> 00:55:56,120
knowing these little things is going to make your life a lot easier in the future.

472
00:55:56,500 --> 00:56:01,880
All right. So even if I have it up here as know a point, click your way to do it doesn't mean this is the only way to do it.

473
00:56:02,270 --> 00:56:07,010
And that's a great thing about our is that there's going to be more than one way to get to the same outcome.

474
00:56:07,610 --> 00:56:12,860
All right. So if you had already gone through that step, the steps above to set your working directory and you took that file,

475
00:56:12,860 --> 00:56:18,530
SPSS or WAV, we want SPSS, blah, blah, blah, you didn't need file choose.

476
00:56:18,530 --> 00:56:21,560
You could have gone just directly to the file name itself.

477
00:56:22,220 --> 00:56:32,600
So you could have just typed in this part of it right when in doubt, find kind of code like this that's going to work for you.

478
00:56:33,080 --> 00:56:36,620
Copy it. And that's the start of your your syntax files.

479
00:56:37,160 --> 00:56:41,030
Each new script file that you create pull in some of this information.

480
00:56:41,480 --> 00:56:46,940
All you have to do then is change this part of it, right? So I can use the I guess this is an SPSS file.

481
00:56:46,940 --> 00:56:51,350
So I could have used just this part of it and this part.

482
00:56:52,490 --> 00:56:58,490
Same thing with these basic summarization commands, copy and paste them in any script file so that when your new data comes in,

483
00:56:58,880 --> 00:57:05,090
you can use you can run these things quickly, easily here.

484
00:57:05,090 --> 00:57:09,530
There's a whole bunch of errors.

485
00:57:09,530 --> 00:57:14,240
And that's because, again, there's a whole bunch of metadata that's associated with SPSS files.

486
00:57:14,840 --> 00:57:17,930
Metadata would be like the stuff in the background that we really don't care about.

487
00:57:18,260 --> 00:57:26,090
But day would be things like how it used characters, how the, you know, the size of numbers that it can bring in.

488
00:57:26,240 --> 00:57:32,810
Super, super small numbers, super, super large numbers in some cases how it's treating missing data, but not very often.

489
00:57:33,590 --> 00:57:39,470
Once I have that data in, I can tell that I had it because I had this new data file.

490
00:57:39,710 --> 00:57:43,190
It's called F. S because I called it F for an adolescent study.

491
00:57:43,520 --> 00:57:47,120
How many observations you made and 50?

492
00:57:47,120 --> 00:57:54,770
How many variables or yeah, it was. So here's where our name command might fail us because we can look at all those names.

493
00:58:01,510 --> 00:58:09,190
And there's a whole bunch of these are all our variable names index so we can tell which columns they come from.

494
00:58:09,220 --> 00:58:13,450
But that's a much simpler question.

495
00:58:13,930 --> 00:58:18,340
I didn't see the download The Best Case file, so I downloaded the CSP file.

496
00:58:18,380 --> 00:58:24,250
Hmm. Given an option between the two and two are available, is there going to be a reason why we're going to pick one or the other?

497
00:58:24,670 --> 00:58:33,249
Sometimes yes. Sometimes no. That's a great question. So the reason why I like SPSS files is because there's often times where we've

498
00:58:33,250 --> 00:58:39,250
coded within the SPSS file the value labels for the individual response options.

499
00:58:39,850 --> 00:58:44,050
Public versus private school, for example. Agree strongly agree all the way up.

500
00:58:44,320 --> 00:58:51,100
If we want to pull that information and retain it, we can keep that information more easily when we read in the SPSS file,

501
00:58:51,700 --> 00:58:59,680
rather than having to go through a let's read in a text file and say specifically all these variables we want to keep the strongly agree disagree.

502
00:59:00,250 --> 00:59:05,620
So when all that information is of the hardware, it's already kind of done because we had to do that on the front end with SPSS files.

503
00:59:06,070 --> 00:59:09,610
We wouldn't want to necessarily have to do all that within an hour.

504
00:59:09,940 --> 00:59:16,239
That said, if you know that, for example, the variables 61, which are all these right here,

505
00:59:16,240 --> 00:59:22,390
that's a scale they're all strongly agree or all 1 to 5 if I know that C one, B, the value is three.

506
00:59:22,630 --> 00:59:27,520
That's neutral. I know this dataset really well. Chances are you're going to know your data pretty well,

507
00:59:27,760 --> 00:59:33,850
and maybe you don't have to worry or worry about containing like the valuable information because all we wanted the numbers, right?

508
00:59:34,960 --> 00:59:42,160
Yeah. Is that why when I first downloaded it using the other one, there had less variables than when I read did it with.

509
00:59:42,790 --> 00:59:48,729
No that's a problem there something something got lost there.

510
00:59:48,730 --> 00:59:57,940
There should still be 448 variables. It is now that I imported it using SPSS when I use the excel there like 300.

511
00:59:57,940 --> 01:00:05,590
So yeah. So what's probably happened there is it's combining some information and whether it just didn't understand how to read in certain columns,

512
01:00:06,220 --> 01:00:09,850
that's probably where it went wrong and that's again where we had to do some sleuthing

513
01:00:09,850 --> 01:00:14,710
to figure out what's going on for folks who are going to be doing this in practice.

514
01:00:15,130 --> 01:00:23,710
Ideally, when someone sends you a data file, they also send you the accompanying codebook.

515
01:00:24,970 --> 01:00:32,020
Codebook is right here. So if you are going to be a good steward of data,

516
01:00:32,890 --> 01:00:39,820
and I promise you this is really easy to say and more difficult to do when you are creating your data frames and your data sets.

517
01:00:40,210 --> 01:00:43,750
Make a book like this that talks about all the different values.

518
01:00:44,530 --> 01:00:47,919
This one happens to have descriptive information for these different things,

519
01:00:47,920 --> 01:00:52,150
but it tells you every single 100 and hundred 40 variables that are in there.

520
01:00:52,570 --> 01:00:56,230
It gives you the name of the variable a longer description.

521
01:00:56,530 --> 01:01:00,010
This is the item that it came from. These were the response options.

522
01:01:00,310 --> 01:01:08,620
These are the reflective numbers. So R is going to retain when it reads in, for example, that SPSS file can retain both sets of information.

523
01:01:09,160 --> 01:01:13,480
These labels as well as these values behind.

524
01:01:14,320 --> 01:01:19,060
Right. And we're going to utilize both in this class because sometimes we're going to treat them as characters.

525
01:01:19,360 --> 01:01:25,510
Sometimes we just want the the fact that there is a code to represent, in this case, three or four groups or something.

526
01:01:26,510 --> 01:01:32,110
And so this is where you can kind of look to see what information is available.

527
01:01:32,410 --> 01:01:35,590
Notice that they also have what are missing values in the SPSS file.

528
01:01:36,160 --> 01:01:41,860
This is this is where SPSS actually has an advantage over r r has one way until something is missing.

529
01:01:42,220 --> 01:01:47,710
Not available in a SPSS allows you to do this almost like an infinite number of ways.

530
01:01:48,190 --> 01:01:56,059
And so in this case, the way that the data works surely are saying didn't respond by coding error or something like that.

531
01:01:56,060 --> 01:02:01,209
So they had to distinguish between types of missing values. And that might be helpful.

532
01:02:01,210 --> 01:02:01,870
That might not.

533
01:02:03,070 --> 01:02:10,990
But anyway, so that would be a case where maybe you don't need to have all those value labels read in if you can just refer back to your code book.

534
01:02:14,680 --> 01:02:20,020
Okay. And then these were just repeats from before.

535
01:02:20,320 --> 01:02:24,160
These are all of it is just a fluke. I think eventually it cuts off.

536
01:02:24,160 --> 01:02:29,960
But this is just basically all the information that was in the file. This is a little more helpful.

537
01:02:29,980 --> 01:02:34,210
It gives you the first ten values for most of the data.

538
01:02:35,110 --> 01:02:46,800
This is probably most helpful of all. Now. Next time.

539
01:02:51,120 --> 01:02:59,960
Here is just the view that we're here we're used to seeing. So this has all the different values.

540
01:03:01,820 --> 01:03:09,360
NORRIS It stops at 52. They go to the columns up here where you can use these little arrows so you can't scroll.

541
01:03:09,600 --> 01:03:15,500
You can't go all the way over to 458. You kind of have to do this.

542
01:03:17,580 --> 01:03:28,260
Okay. So all we're doing here is just making sure the data we got in matches what we're expecting to see if our codebook says that we should have.

543
01:03:31,480 --> 01:03:43,960
All the way down to wave one I 23 we expect here we have all the way down to wave one I 23.

544
01:03:52,960 --> 01:03:58,860
Structure again, I told you, is going to be helpful. Here's a data set where is actually gonna make a difference.

545
01:03:59,950 --> 01:04:11,799
If I run the structure command, it's going to give me the types of data that it's reading in numeric data factor data.

546
01:04:11,800 --> 01:04:18,220
So numeric and integers are more or less the same thing. Factor is, is, is going to be a categorical here.

547
01:04:18,850 --> 01:04:24,700
So they have a special distinction within R because when we say something as categorical,

548
01:04:25,000 --> 01:04:32,560
that means it has it has mutually exclusive and exhaustive buckets of response options.

549
01:04:33,430 --> 01:04:39,799
But there's no inherent order. So it says this in this case, this H2 is the sex variable.

550
01:04:39,800 --> 01:04:52,440
This is collected in 1994. So you got two options male, female, two levels, male, female, and then the coding behind this factor.

551
01:04:52,810 --> 01:04:57,700
And as for levels, this is the race variable and line down.

552
01:04:58,120 --> 01:05:01,840
All right. So it's in there different than having a numeric variable.

553
01:05:02,080 --> 01:05:09,810
And if we're not careful, we can read some of these variables in inadvertently as integers or as numbers where there is no where.

554
01:05:10,000 --> 01:05:15,580
All of a sudden we are adding order. We're treating it as more of an ordinal or interval option, when in fact, it should be a category.

555
01:05:16,720 --> 01:05:16,959
All right.

556
01:05:16,960 --> 01:05:24,460
So it's something that we just want to look for pretty closely to make sure that, again, as we read the data and it matches what our expectations are.

557
01:05:25,270 --> 01:05:36,390
If you're really looking at the data and you want to just see this, but for one variable, could you just do right there, come up.

558
01:05:42,060 --> 01:05:49,299
Yeah. So the data set is large.

559
01:05:49,300 --> 01:05:53,080
Having something like a summary is not going to make a whole lot of sense to us.

560
01:05:55,060 --> 01:06:00,730
You're probably going to want to try to pick a few different variables that you're going to look at a little more depth,

561
01:06:00,730 --> 01:06:06,670
but just know that you can do it. Whereas you're right there, especially with factor variables.

562
01:06:06,670 --> 01:06:10,420
A summary of that information isn't going to necessarily make all that much sense.

563
01:06:10,420 --> 01:06:14,819
But you do see here and in this case, with 80 million participants for 25,

564
01:06:14,820 --> 01:06:19,570
for 25 of the 850 people, then we're right down the middle in terms of participation.

565
01:06:21,940 --> 01:06:31,450
Okay. So that was just trying to get folks acclimated to our and how it kind of works.

566
01:06:32,890 --> 01:06:36,190
Don't worry, if it didn't work perfectly, it rarely does.

567
01:06:36,700 --> 01:06:42,310
But we can work through those issues. All right. So I will make sure that folks are feeling okay with packages.

568
01:06:42,670 --> 01:06:49,240
I do want to make sure that the importing piece gets easier and easier so that when we're starting classes or when we're doing assignments.

569
01:06:49,480 --> 01:06:55,600
That's now what's held me up. And more importantly, as you start to work outside in the real world, when you start to get data,

570
01:06:55,900 --> 01:06:58,930
we don't make a mistake or bring in data that we think is ready to go.

571
01:06:59,320 --> 01:06:59,860
And in fact,

572
01:06:59,860 --> 01:07:05,350
we're working on the wrong dataset because there's nothing worse than running a whole bunch of stuff and finding out we're missing big chunks of it.

573
01:07:05,710 --> 01:07:09,130
Or we didn't have we didn't have the right variable names or whatever it's going to be.

574
01:07:09,520 --> 01:07:13,840
So doing all of this and at the front end is going to be helpful for us.

575
01:07:15,670 --> 01:07:19,540
Okay. How are folks feeling so good?

576
01:07:20,330 --> 01:07:30,070
I mean, only about 1015 has left. But let's go to the week two and what they're going to talk about today.

577
01:07:32,050 --> 01:07:34,480
All right. This was getting more studio stuff.

578
01:07:34,720 --> 01:07:43,870
The good news is, based on my readings of your readiness assessments and the kind of the substantive piece is already there,

579
01:07:43,870 --> 01:07:51,030
which is great, folks kind of remembered some of these some of these concepts from 503.

580
01:07:51,040 --> 01:07:57,910
If you want to follow along, we're going to be using that correlation practice.

581
01:07:58,210 --> 01:08:01,600
22 are open in our studio.

582
01:08:08,330 --> 01:08:11,960
Not to despair or how long I'm going to push this off.

583
01:08:13,910 --> 01:08:21,629
I said, look like this. What am I doing online for?

584
01:08:21,630 --> 01:08:28,380
Why is this important? Why is it in my script file right at the top? Yeah.

585
01:08:32,780 --> 01:08:36,230
I heard. I heard two right answers. This is my direction.

586
01:08:36,440 --> 01:08:43,040
And already did this. It's at the top of every single and I script file so that when I start to ask for data, I'm not [INAUDIBLE] around for it.

587
01:08:43,040 --> 01:08:54,709
Right. I can find it right away. Eight nine I'm installing packages three that one.

588
01:08:54,710 --> 01:08:57,950
And you already have two that you already have a third one.

589
01:08:58,320 --> 01:09:04,860
I did demonstrate a point. And run news of your own.

590
01:09:07,840 --> 01:09:12,880
And then line ten there is we're going to need them for the example.

591
01:09:18,630 --> 01:09:24,800
Yeah. No, I don't. You? Why? To open an Excel.

592
01:09:24,960 --> 01:09:29,210
All right. I look at this. See this? Hmm.

593
01:09:29,760 --> 01:09:34,110
It might just be something that's automatic for your computer. Open file once when you download.

594
01:09:34,800 --> 01:09:39,060
Okay. But you should be able to pull that in with our studio now because you know the files on your computer.

595
01:09:39,330 --> 01:09:43,680
All right. And if you want to. Well, I'm getting step two.

596
01:09:43,680 --> 01:09:50,490
Here is something that you've already done before. All right, so let's see here.

597
01:09:50,760 --> 01:09:55,470
We're actually doing all right. So we're talking a little bit about associations.

598
01:09:56,010 --> 01:10:04,440
Again, I feel like folks kind of had the basic ideas. We're already doing some major introduction to basic functions and the homework.

599
01:10:04,890 --> 01:10:08,040
We'll see. We'll get to at the end here. All right.

600
01:10:08,460 --> 01:10:12,900
So here we go, kind of following along. These are the three packages that we're going to need.

601
01:10:12,900 --> 01:10:22,470
Step two, you've done as we were kind of doing this together. Can folks read this data in for me and gets a data object called practice?

602
01:10:25,400 --> 01:10:32,510
Right. Good to. What's this going to do?

603
01:10:34,850 --> 01:10:47,159
We're going to hear from today. Somebody else knows that it's going to pop up on a window.

604
01:10:47,160 --> 01:10:53,940
Looks like my cell file or Siri. Great. Excellent. What's this going to do? Simmons.

605
01:10:54,540 --> 01:10:57,660
Yeah, yeah. Kind of generic information, quartiles. Wonderful.

606
01:10:57,900 --> 01:11:02,040
There's one side of the table. No.

607
01:11:02,400 --> 01:11:06,220
No. Basic.

608
01:11:06,520 --> 01:11:10,830
Well, a little bit better than this, but a little bit more information about me.

609
01:11:10,870 --> 01:11:14,350
Medium range fitness for us. Wonderful.

610
01:11:14,770 --> 01:11:20,080
All right, here's my code.

611
01:11:20,830 --> 01:11:24,760
This is an object. This is what?

612
01:11:24,760 --> 01:11:27,850
A function? It's going to read. What kind of file?

613
01:11:28,930 --> 01:11:34,660
You got a separate variable file. Right. So we're going to make sure that the file and its appendices match.

614
01:11:35,530 --> 01:11:40,270
This is the name of the file. The reason why it's just the name of the file is because.

615
01:11:42,810 --> 01:11:46,080
Is that your dress? So we're working directory. Wonderful. What's this doing?

616
01:11:48,480 --> 01:11:54,030
Telling in the first place of the top row. The first row are the names of my variables in my head.

617
01:11:54,420 --> 01:11:58,140
Right. If that wasn't true, I wouldn't need this. And wonderful.

618
01:11:58,770 --> 01:12:07,480
So our folks here. I sometimes I look.

619
01:12:11,830 --> 01:12:16,479
Okay. All right. Right. You shouldn't have that right now. Yeah, it can happen.

620
01:12:16,480 --> 01:12:20,940
It can happen. But this stuff on restarting. Oh, not affected.

621
01:12:21,370 --> 01:12:25,190
But this day, this, this, this. I mean, this is not so bad, right?

622
01:12:25,210 --> 01:12:29,680
We're kind of generally still functioning on a relatively comfortable majority here.

623
01:12:30,880 --> 01:12:34,990
Fabulous. All right. So here's my summary of practice. This is just to get that information.

624
01:12:34,990 --> 01:12:38,200
We have two variables. We have one called death anxiety. One is called religiosity.

625
01:12:38,470 --> 01:12:43,990
There is no code. But here, actually, another is there's kind of like a little bit of an assignment actually exist here.

626
01:12:43,990 --> 01:12:51,670
But the idea or the hypothesis behind this particular data is that, you know, if people are anxious about about death,

627
01:12:52,180 --> 01:13:01,900
having some religiosity in their life, thanks to a persistent R department, could have some influences on how anxious folks feel about passing one.

628
01:13:03,580 --> 01:13:07,030
So we're seeing there a correlation between the two. And it's that we have a correlation.

629
01:13:07,030 --> 01:13:09,769
We need an array of data. We're going to have matching observations.

630
01:13:09,770 --> 01:13:15,520
So person one responded 38 to this and whatever scale it is, forager, religiosity, kind of one down.

631
01:13:16,030 --> 01:13:25,570
Humans are very, very bad and looking at a set of information and trying to determine an association, we're just not good at doing it.

632
01:13:26,020 --> 01:13:33,700
We see visual information, it gets easier for us, but this kind of information is very difficult for our brains.

633
01:13:34,450 --> 01:13:39,639
Computers are actually quite good at doing this. They can count, but we are not so correlations.

634
01:13:39,640 --> 01:13:47,950
We're gonna rely on our computer. So here's the describe command gives us a little bit more information about our two variables.

635
01:13:47,950 --> 01:13:57,850
So instead of just this basic summary information I describe gives me both variables and a lot more descriptive information.

636
01:13:59,900 --> 01:14:03,590
Short answers, Whitney, as this on your screen.

637
01:14:04,490 --> 01:14:10,130
Mine is a little bit different. Yeah, it's going to be my last point before we read it today.

638
01:14:11,990 --> 01:14:15,440
It's got the scripted information, doesn't it? Yes. Just like a lot. Yeah.

639
01:14:16,520 --> 01:14:21,510
Who's got this? These guys, something like this.

640
01:14:23,820 --> 01:14:28,560
He's got nothing. All right.

641
01:14:31,020 --> 01:14:41,810
So my last point before we where we live today, if you follow along my code when you load it in this library, right.

642
01:14:41,940 --> 01:14:47,730
These are the three packages that that were you there would have been installed and they were loading two to run some of these operations.

643
01:14:52,940 --> 01:15:01,910
Folks can see this. Generally speaking, I kind of glance over error messages in our studio and look for anything that's important.

644
01:15:02,630 --> 01:15:05,870
More often than not, it's a lot of detail that I don't necessarily need to worry about.

645
01:15:06,680 --> 01:15:09,710
This morning is very important.

646
01:15:11,270 --> 01:15:20,150
Masking deals with what function or what package skews me or is going to look for in order to run a function or to utilize a function.

647
01:15:21,230 --> 01:15:29,300
So when you see something that is masked, that means there are two packages that you have currently operable that have the same function.

648
01:15:30,830 --> 01:15:35,120
In this case, this is what we are worried about.

649
01:15:36,560 --> 01:15:41,330
The following object is masked package snake the described function.

650
01:15:42,200 --> 01:15:47,929
That means that this package. Miscellaneous Air Herald miscellaneous is what it's called,

651
01:15:47,930 --> 01:15:57,830
which is a whole bunch of different functionality has a function called describe site also has a function called describe that we've used before.

652
01:15:59,000 --> 01:16:11,120
When I run the sake function describe it looks like this change when I run the H miscellaneous package described it looks like this.

653
01:16:12,680 --> 01:16:23,030
So what we need to do is be concerted about the way that we are calling information in and the packages that we're using.

654
01:16:24,050 --> 01:16:32,640
So if you ever note that something is masked so in this case, Judy,

655
01:16:32,780 --> 01:16:39,800
plot two and sake both contain the the function alpha, which we're going to be using over the course of this semester.

656
01:16:40,430 --> 01:16:46,670
Both miscellaneous and sake have the packages, have the function described, which we have to worry about.

657
01:16:47,510 --> 01:16:53,510
Any time you notice some of these things, we might have to be more intentional about how we use the described command.

658
01:16:53,990 --> 01:16:59,960
And so in this case, it's going to we can use which.

659
01:17:01,810 --> 01:17:23,040
This information. Hmm.

660
01:17:28,910 --> 01:17:34,740
I mean is.

661
01:17:40,140 --> 01:18:02,850
You do hear? And then just with.

662
01:18:06,530 --> 01:18:15,130
Every. Is.

663
01:18:24,480 --> 01:18:28,650
All right. I will I will send some information, but it's nothing to do with these guys.

664
01:18:29,040 --> 01:18:30,900
And I'm not sure which which ones now we're going to.

665
01:18:31,680 --> 01:18:39,570
But basically, we're going to head we're going to have to be specific about how we're using the described command in which patterns we're using.

666
01:18:40,350 --> 01:18:44,549
So the other way to do this is you don't necessarily have to have multiple libraries

667
01:18:44,550 --> 01:18:54,150
open and you can reorder or you can you can remove a package so that it's not loaded.

668
01:18:54,150 --> 01:19:07,470
So I guess the only issue with doing something like this and the only the only issue with doing something like this, if I need to get this right.

669
01:19:13,980 --> 01:19:19,950
As then you wouldn't have any of this additional functionality. All kinds of mistakes.

670
01:19:21,750 --> 01:19:28,650
So it's no good to confront people. I never.

671
01:19:38,510 --> 01:19:54,810
And then. So the other way that is the most expedient way is just to load it differently in your library.

672
01:19:55,770 --> 01:20:00,930
So just whichever the last packages that you load as the last pair is the first package it's going to look for.

673
01:20:01,410 --> 01:20:06,059
So the order in which you rent these called packages from your library is the

674
01:20:06,060 --> 01:20:09,210
reverse order in which it's going to be looking for the specific commands.

675
01:20:12,310 --> 01:20:12,640
All right.

676
01:20:13,960 --> 01:20:22,270
So that poorly proven point is just a way for you to be on Your Honor guard for what kind of information that you're going to be looking for.

677
01:20:22,270 --> 01:20:26,260
And when you mindful of these error messages, we've already seen a few.

678
01:20:26,530 --> 01:20:28,990
They're not always going to be as explicit as we'd like them to be.

679
01:20:29,230 --> 01:20:34,719
But generally speaking, they're going to give us some indication for what kind of mistake we might be making in this case,

680
01:20:34,720 --> 01:20:40,660
whether we're using the wrong or the wrong command or functionality for or from a different package.

681
01:20:41,110 --> 01:20:44,160
But what struck you about this one is you might not never know, right?

682
01:20:44,200 --> 01:20:48,040
Because this looks exactly like a description of somebody's statistics.

683
01:20:48,490 --> 01:20:56,410
It's just the wrong package. So, again, a little bit of predictive validity in terms of if I run this, what am I looking for?

684
01:20:56,860 --> 01:21:00,370
Am I surprised to see something like this when I was expecting something like this?

685
01:21:00,820 --> 01:21:05,020
And how do we make sure that we can kind of ascertain what the problem is when we do that?

686
01:21:05,080 --> 01:21:16,870
Yeah. So if you were to just reorder, how you could just fix this problem at the end, so it would fix this specific problem.

687
01:21:16,940 --> 01:21:25,360
We would introduce a new one, which is that describe would now be masked from the H and miss package and ask package.

688
01:21:26,050 --> 01:21:33,730
Right. So if I ran this in a different order, I'm still going to get I'm still going to get an error about masking.

689
01:21:34,060 --> 01:21:47,030
And that's because they still have the same package. So now if I wanted to use the age miscellaneous packages described,

690
01:21:47,270 --> 01:21:55,790
they would default to what's the site for the site function because again they have the same package name and I think you can use.

691
01:22:14,520 --> 01:22:25,050
This. So I don't know why it has to be in parentheses. Yes, that packages open parentheses gives you the order in which your packages are loaded.

692
01:22:25,320 --> 01:22:29,070
Base is the very first one. This is always going to be the last one.

693
01:22:29,970 --> 01:22:33,510
HMS Key Blood kind of all down the line.

694
01:22:34,200 --> 01:22:38,849
This is how it's going to be reading. So when it starts looking for a function, it's going to start here and go here.

695
01:22:38,850 --> 01:22:43,530
Here, here, here, here, here, here, here, here, here. All the way down to base.

696
01:22:46,300 --> 01:22:46,630
All right.

697
01:22:47,190 --> 01:22:54,190
Um, so we'll probably do a little bit more of this on Thursday just to make sure folks are feeling comfortable with the ideas around correlation.

698
01:22:54,550 --> 01:23:02,890
Show of hands. We've done this recently ish or could use a little bit more of a refresher shorthand refresher.

699
01:23:03,760 --> 01:23:10,270
Okay. So we'll go through I mean, the big ideas behind correlation and covariance thinking there.

700
01:23:10,330 --> 01:23:15,190
If you haven't done it in a while. Standardization, what it means to standardize a variable.

701
01:23:15,260 --> 01:23:19,780
Why we take, for example, these scores. If you could just refresh your mind on that, that sort of thing.

702
01:23:20,080 --> 01:23:24,430
And the rest of it, I think is going to be I think conceptually it seems like folks have it.

703
01:23:24,790 --> 01:23:27,460
The math part of it is not huge, huge for this class.

704
01:23:27,700 --> 01:23:33,579
But there are occasionally things that we can learn or glean from the math part of it that's going to make our lives a little bit easier.

705
01:23:33,580 --> 01:23:39,250
For example, standardize regression scores versus those that are under original metrics so we can try to utilize some of those things.

706
01:23:39,790 --> 01:23:46,089
And I will if there's anything that folks are having trouble with, if you want me to hang around,

707
01:23:46,090 --> 01:23:49,120
I can try to help you do any additional coding to get some of this data in.

708
01:23:49,420 --> 01:23:52,810
Let's see if between now and Thursday you can at least get to here.

709
01:23:53,440 --> 01:23:56,679
All right. Thank you, everyone. Sorry.

710
01:23:56,680 --> 01:24:06,180
We're right at 1035 M.

711
01:24:10,000 --> 01:24:16,180
Would you guess? It's been real starting hour for the last 15 minutes and I can't hear you.

712
01:24:16,180 --> 01:24:19,300
My mind is closed. The whole thing. I can't click on any of these.

713
01:24:19,660 --> 01:24:23,560
Just. Just close it all. Okay. I wasn't sure if that was safe.

714
01:24:24,160 --> 01:24:27,729
Yeah. So it should automatically save your workspace image.

715
01:24:27,730 --> 01:24:30,910
So anything that you create in the past. But really what you care about is the script files.

716
01:24:30,910 --> 01:24:34,700
If they've been saved, then you can just get right about trying to participate. Okay.

717
01:24:34,930 --> 01:24:39,910
And just reopened everything. Clear that it's all right.

718
01:24:40,660 --> 01:24:43,750
Okay. I have no issues pulling a CSB file.

719
01:24:44,050 --> 01:24:52,510
Okay. I can't call this file. I don't know why I'm probably doing something wrong, but I keep getting errors in there and nobody saw that.

720
01:24:54,260 --> 01:24:58,600
You sure? Because it looks like you have the data here. I do a bit, but that's because I pulled the CAC again.

721
01:24:58,780 --> 01:25:02,890
So. Yeah. So then what are you getting when you load?

722
01:25:03,220 --> 01:25:11,500
Where's your other. So my that appears as every file should be in the working directory so starting to call it the same way.

723
01:25:11,500 --> 01:25:17,560
But I don't think so. So this tells us that there's something wrong here, right?

724
01:25:17,950 --> 01:25:23,160
It says I kept saying, like couldn't read it, couldn't do the read access.

725
01:25:23,980 --> 01:25:28,240
Okay. That would mean that you don't have that foreign package. Is that true?

726
01:25:28,870 --> 01:25:38,620
That could be true. So we go here? No, but it was happening down here and everything is done.

727
01:25:38,640 --> 01:25:41,970
You read up and it took off the time.

728
01:25:42,220 --> 01:25:48,540
I don't know. Oh, and this header part is not also it, it is us in that part of the speech function.

729
01:25:48,760 --> 01:25:53,560
So what does go there. So it'd be things like these very labels if you wanted to DataFrame.

730
01:25:53,920 --> 01:25:57,430
So if you copy from here over and substitute that in there.

731
01:25:58,370 --> 01:26:08,150
So you about the. And then let's get rid of that comma and and asking the parentheses.

732
01:26:11,140 --> 01:26:15,460
All right. And then I'll put them back.

733
01:26:16,700 --> 01:26:20,770
Oh, because this one I. And so when we do that, we get a nice little removal.

734
01:26:21,390 --> 01:26:24,640
Let's see there. But that's good. Okay.

735
01:26:24,780 --> 01:26:29,900
Thanks. Yep. Just another question.

736
01:26:30,860 --> 01:26:37,250
I tried moving in that sense to the set of speakers to practice.

737
01:26:37,280 --> 01:26:43,490
Mm hmm. And I think you had this brain that fixed the first variable where it has, like, this little.

738
01:26:43,640 --> 01:26:48,020
Yeah. With a dot dot, but in, like, silence.

739
01:26:48,680 --> 01:26:54,800
So I think it's just how it's reading in some information. It is that they're rigorously, as I see it here.

740
01:26:55,070 --> 01:27:00,170
Yeah. Right. I don't know why it's reading in those studios doing different.

741
01:27:00,680 --> 01:27:08,900
That's I think when I did it as a problem, when I used the the other like the Haven package, it didn't do this.

742
01:27:09,800 --> 01:27:15,440
So I've it's just a quirk of what's in that file that it's picking up.

743
01:27:15,500 --> 01:27:19,150
But that's just a quick correction by. Yeah.

744
01:27:19,170 --> 01:27:22,760
Just use text and then it can create things.

745
01:27:22,970 --> 01:27:40,500
Yeah. No. I'm going to have to bring.

746
01:27:44,540 --> 01:27:58,280
Really? Yeah. Oh, you really think so, Amy?

747
01:27:58,880 --> 01:28:09,170
This using a reader instead and use something similarly was able to read it in without that.

748
01:28:09,840 --> 01:28:14,390
I'm not sure why. It's just picking up on something about this.

749
01:28:14,650 --> 01:28:22,340
Whatever's in the CSP file, it doesn't recognize this IQ and know if it's because of the text that it was used or something.

750
01:28:22,340 --> 01:28:26,240
So if you didn't want to have to make a little, little correction. Got it.

751
01:28:26,660 --> 01:28:33,250
Thank you. Yeah. I used to write, he says.

752
01:28:33,760 --> 01:28:36,960
I don't know how. So.

