1
00:00:03,030 --> 00:00:06,150
Good morning. What's going in there?

2
00:00:06,930 --> 00:00:12,180
So you had your first week, your first lab. Hopefully, that went all right for you.

3
00:00:13,520 --> 00:00:22,020
Uh, did anyone have any questions before we get started today? He should have turned in that first homework as well.

4
00:00:22,800 --> 00:00:25,830
So hopefully you got it that in on time.

5
00:00:27,020 --> 00:00:30,390
Um, hopefully that wasn't too difficult.

6
00:00:30,400 --> 00:00:33,630
You just had to read the article and answer some stuff about it.

7
00:00:35,540 --> 00:00:43,760
No questions. No.

8
00:00:44,840 --> 00:00:47,840
All right. Well, then we'll go ahead and get started.

9
00:00:48,740 --> 00:00:55,820
So this week, we're going to learn about actually importing data into SAS.

10
00:00:57,390 --> 00:01:02,160
There are many, many ways to actually do this. We're going to.

11
00:01:03,400 --> 00:01:10,600
Kind of start with the most basic, uh, where you have data that's already in a reasonable, decent format.

12
00:01:11,110 --> 00:01:17,350
So that'll be the easiest scenario. And next week we'll talk a little bit more about some of the more complicated versions.

13
00:01:19,120 --> 00:01:25,960
So we're going to learn how to create new datasets, datasets from external data.

14
00:01:27,220 --> 00:01:34,180
We'll use the import wizard to start. And as I said next week we'll look at some more complicated versions.

15
00:01:35,840 --> 00:01:43,940
So the first thing you want to do when you're trying to import some data into SAS is open it up and see what it looks like.

16
00:01:45,750 --> 00:01:47,550
This is important. So you know what you're dealing with.

17
00:01:49,110 --> 00:01:59,040
Even if it's just a kind of a basic text file, you most of those are just eliminated in a normal, kind of spaced, a limited way, but sometimes not.

18
00:01:59,910 --> 00:02:05,610
Sometimes there's weird MM's, or sometimes there's weird headers and all kinds of stuff.

19
00:02:05,610 --> 00:02:10,470
So you really need to open it up and see what you're dealing with before you try to import it in says.

20
00:02:13,220 --> 00:02:17,720
All right. So this might be Excel data.

21
00:02:18,640 --> 00:02:20,890
So we're probably pretty familiar with that.

22
00:02:21,800 --> 00:02:29,590
Looks like this basic thing here, and usually that's fairly easy to get in this case, although sometimes there's complications.

23
00:02:32,070 --> 00:02:47,550
There's text data which is either kind of spaced limited or it might be tabbed limited or it might be too limited as little blocks of code or of yeah.

24
00:02:47,610 --> 00:02:51,830
Of text. So it would look something like that.

25
00:02:52,920 --> 00:02:56,180
This one looks, it appears at least to be tab delimited.

26
00:02:58,720 --> 00:03:03,700
Yes. Let's talk about this, the spacing between the data values.

27
00:03:05,020 --> 00:03:08,649
Okay. So a lot of times it's just a single space here.

28
00:03:08,650 --> 00:03:15,520
It looks like there there is a tab between them. The spacing isn't quite consistent, which is.

29
00:03:16,530 --> 00:03:18,330
A lot of times what you get with TAB, right?

30
00:03:18,660 --> 00:03:25,110
So after you end up typing in your tab and you type in the next one and tab and get to the next one and so on.

31
00:03:25,320 --> 00:03:31,020
So depending on how far apart those tabs are, the spacing might be not quite consistent.

32
00:03:32,660 --> 00:03:39,980
But they're all lined up nice, which is at least looking in a reasonable way to be able to read it.

33
00:03:42,440 --> 00:03:45,620
Okay. Yeah.

34
00:03:45,620 --> 00:03:51,650
Again, that one looks terribly limited. This would be an example of a just a space too limited one with a single space.

35
00:03:52,330 --> 00:03:59,930
And this one also doesn't have any header. So there's no names for those columns or those variable names.

36
00:04:01,830 --> 00:04:06,000
So you'd have to create those for yourself. Okay.

37
00:04:10,720 --> 00:04:14,890
With space, the limited data SAS is pretty flexible.

38
00:04:15,310 --> 00:04:23,150
So if we had this text file here. You can see that the spacing is not consistent.

39
00:04:24,130 --> 00:04:32,670
There's multiple spaces on that last row. But as long as you're telling Sass that it's based on limited, it can handle that.

40
00:04:33,930 --> 00:04:43,480
So it's pretty flexible in that way. There's also the CSB files are a separated value.

41
00:04:44,140 --> 00:04:49,810
These are common to limited. This is something that Excel can read, but it's not exactly an Excel file.

42
00:04:51,470 --> 00:04:54,560
But it would look something like this. So much like the text file.

43
00:04:54,560 --> 00:05:04,330
Except that there's commas between the values. This allows you to have other kind of weird characters and things that you might not otherwise have.

44
00:05:08,550 --> 00:05:16,200
And then sometimes you get some really bizarre stuff. In this case, you've got semicolons that are the delimiter between values.

45
00:05:18,870 --> 00:05:26,160
So this is why it's really important to be able to to open up your data and see what you're dealing with before you try to do anything with it.

46
00:05:27,520 --> 00:05:34,350
Okay. So key takeaways in that section.

47
00:05:35,680 --> 00:05:39,870
Data files from other programs will typically open up in those programs.

48
00:05:39,880 --> 00:05:45,070
So if you've got a text file, just use like notepad or notepad plus or something like that.

49
00:05:46,500 --> 00:05:51,510
If you've got a state of file you can open in state. If you've got it in Excel, obviously you can open an Excel and so on.

50
00:05:53,780 --> 00:05:57,440
Within text files, dilemmas can be used to separate data.

51
00:05:58,820 --> 00:06:04,360
It could be some common delimiter, like tabs or spaces or commas, but there's other weird ones that might occur.

52
00:06:06,410 --> 00:06:10,610
And knowing your phenotype is going to be critical for actually reading into intersex.

53
00:06:13,370 --> 00:06:20,600
So the easiest way generally to get data into SAS is with something called the import wizard.

54
00:06:20,810 --> 00:06:25,730
This is a an actual user interface that's built into SAS.

55
00:06:26,980 --> 00:06:31,300
It's one of the only user interfaces that you can actually use in space.

56
00:06:31,960 --> 00:06:39,010
So we're going to learn about that. Again, as a reminder, definitely look at your data first.

57
00:06:40,040 --> 00:06:46,750
Figure out what the delimiter is. Identify any variable names and the types of data that they might be as their character in.

58
00:06:47,270 --> 00:06:52,190
If you remember last time we learned that all variables that are either character or numeric.

59
00:06:53,300 --> 00:06:58,250
So make sure you're observing that taking note of how many observations you have.

60
00:06:59,260 --> 00:07:03,220
Whether there's a hetero if there's any other weird things going on.

61
00:07:05,850 --> 00:07:09,780
So the emperor was just a nice little user interface like this.

62
00:07:11,520 --> 00:07:16,280
It's great for straightforward data. And it's pretty easy to use.

63
00:07:17,930 --> 00:07:24,380
So to get to it, you would go to file when you're in SAS, go to file and import data.

64
00:07:25,920 --> 00:07:29,730
And that window will pop up. Something like this.

65
00:07:32,150 --> 00:07:35,480
So you have to tell it what type of data it is.

66
00:07:36,440 --> 00:07:40,520
So you just use the dropdown menu. You can choose Excel if it's Excel or so on.

67
00:07:41,150 --> 00:07:45,450
There's various options here. And.

68
00:07:46,510 --> 00:07:48,850
Then you have to navigate to the file on your computer.

69
00:07:49,300 --> 00:07:55,420
So this is just browsing using an explorer type system where you just browse to the actual file.

70
00:07:56,690 --> 00:08:02,500
And you're trying to import. And then you have to choose how to say your data.

71
00:08:03,990 --> 00:08:09,770
So we're going to talk more about libraries later. But the default is the work library.

72
00:08:09,780 --> 00:08:13,050
This is one that's temporary in sass. It's kind of the default.

73
00:08:14,790 --> 00:08:15,989
It's nice in there.

74
00:08:15,990 --> 00:08:25,050
You can just use it to store things during your sast session, but once you exit SAS and close it down, those things will no longer be there.

75
00:08:25,530 --> 00:08:30,660
So if you want to save it permanently, you have to choose some other library which will learn how to create today.

76
00:08:32,580 --> 00:08:36,630
And then just make a name for it as well in the memory field here.

77
00:08:39,310 --> 00:08:46,810
Right. Once you do that, you hit next down here and.

78
00:08:48,760 --> 00:08:52,130
It will. Do its thing.

79
00:08:52,790 --> 00:08:57,620
All right. Make sure you check your log, just like you do anytime you're running any code in SAS.

80
00:08:59,200 --> 00:09:03,130
What you'd like to see is something like this. Where it says.

81
00:09:04,070 --> 00:09:06,860
Whatever you named it, Dataset was successfully created.

82
00:09:07,520 --> 00:09:14,020
And I'll tell you how many observations and variables you have so you can check that against what you actually saw in the raw data file.

83
00:09:14,930 --> 00:09:21,210
Make sure it looks right. A couple notes on Excel files.

84
00:09:21,810 --> 00:09:24,990
Older versions of SAS don't really like the new versions of Excel.

85
00:09:25,770 --> 00:09:32,640
That shouldn't be a problem in this class at all because most of the time you'll be using the lab computers which have newer SAS.

86
00:09:33,270 --> 00:09:40,560
And if you get SAS for yourself, or if you use the virtual sites, then those will all be new.

87
00:09:41,070 --> 00:09:48,870
So just be aware that if you happen to come upon a computer with an older version, Excel files, maybe a little quirky.

88
00:09:50,880 --> 00:09:57,520
There also might be issues between 64 and 32 bit. But again, most of the time, everything is 64 bit these days.

89
00:09:59,840 --> 00:10:06,290
Unless you have an older computer. If you do. This might be an issue, but probably not.

90
00:10:06,650 --> 00:10:10,490
So if you do have troubles with that, let let me. Or one of your guys know.

91
00:10:14,490 --> 00:10:17,910
The last step is to actually check the data. So once you've imported into SAS.

92
00:10:18,980 --> 00:10:29,020
You're going to want to open it up and look at it. Um, the other option you actually have during the import wizard is.

93
00:10:30,430 --> 00:10:41,020
To save the SAS code that it produces. So it's really actually just producing a piece of SAS code that it runs during the wizard phase.

94
00:10:41,500 --> 00:10:46,630
Okay. You can actually save that code to a file if you want.

95
00:10:47,170 --> 00:10:54,940
And this will be this will come up during the import wizard. So if you want to save it, you can just tell it where to save it.

96
00:10:58,140 --> 00:11:05,310
Okay. They create the code it creates would look something like this.

97
00:11:05,370 --> 00:11:09,880
It actually uses a procedure step. So use this proc import.

98
00:11:12,560 --> 00:11:17,719
And there's a few options that are kind of standard for tracking forward the data file option,

99
00:11:17,720 --> 00:11:23,060
which is literally just the path to the file you're trying to import.

100
00:11:25,020 --> 00:11:30,650
The out option. Is the name of the new file you're creating in SAS.

101
00:11:32,960 --> 00:11:36,530
DB is the option which tells us what type of file it is.

102
00:11:37,070 --> 00:11:42,860
It stands for database management system, so it's just a way to tell SAS what kind of file it is.

103
00:11:44,480 --> 00:11:51,760
The replace option. Is. Somewhat optional if if that file already existed.

104
00:11:51,760 --> 00:11:57,280
So if obesity here already existed, it would replace it most of the time.

105
00:11:57,280 --> 00:12:00,730
SAS automatically replaces things when you do something like this.

106
00:12:01,210 --> 00:12:06,940
But importing is one exception for that. So if obesity already existed.

107
00:12:08,420 --> 00:12:13,360
It won't replace it unless you have that option. Okay.

108
00:12:14,990 --> 00:12:19,650
Get names equals. Yes, that's an option. Actually, that's a statement.

109
00:12:20,450 --> 00:12:24,859
Get names statement. You can see I'm saying that because it ends in a semicolon.

110
00:12:24,860 --> 00:12:28,580
Right. We already ended the proc import statement with a semicolon.

111
00:12:29,780 --> 00:12:38,660
So get names is a new statement. Which tells it that there is a hetero with variable names in it.

112
00:12:39,410 --> 00:12:45,450
So we we want to import those as they are. And data row equals two.

113
00:12:45,470 --> 00:12:51,080
Kind of goes along with that. It's saying that there is a hetero again and that you should start looking for data at row two.

114
00:12:53,280 --> 00:12:58,019
All right. Both of those things are actually default in track imports.

115
00:12:58,020 --> 00:13:01,740
So if you didn't have those two statements, it would still work the same.

116
00:13:04,920 --> 00:13:13,010
Right. Once you get the hang of import wizard and you kind of understand what the import is doing.

117
00:13:14,080 --> 00:13:17,680
I find it's actually easier just to code the import.

118
00:13:19,330 --> 00:13:26,850
Instead of going through all the menus and browsing things. To me it's just easier once you get to know it, at least just to code it yourself.

119
00:13:28,120 --> 00:13:32,230
That's up to you when you get to get used to it, maybe you'll want to do that.

120
00:13:35,500 --> 00:13:43,230
So open up your data. And hopefully it looks like you expect.

121
00:13:49,180 --> 00:13:52,890
It does know. Certain formats like CSP in text.

122
00:13:53,850 --> 00:13:58,950
If you have a weird delimiter like the these weird percentage marks here,

123
00:14:00,330 --> 00:14:07,170
the proc import will simply use a delimiter statement and tells us what the delimiter should be.

124
00:14:11,370 --> 00:14:16,169
So that's a kind of an unusual version, unusual example.

125
00:14:16,170 --> 00:14:25,950
But sometimes you see these weird things. So invert import wizard is a very helpful tool.

126
00:14:27,700 --> 00:14:35,379
So you don't have to go things yourself. But again, once you get the hang of it, maybe you want to you do need to know your data before you import it.

127
00:14:35,380 --> 00:14:38,890
So you know what the delimiter is, if there's headers, etc.

128
00:14:40,570 --> 00:14:47,740
And make sure you're always opening up your new data set to make sure it works correctly as it as you expect.

129
00:14:49,320 --> 00:14:55,090
And check your log to make sure there's no errors as well. Okay.

130
00:14:56,840 --> 00:15:03,410
Any questions so far? Right.

131
00:15:05,410 --> 00:15:10,930
So now let's talk about libraries a bit. So this is where Seth data lives.

132
00:15:15,090 --> 00:15:21,660
So when you open SAS, if you recall on the left, there's that Explorer window over there.

133
00:15:23,010 --> 00:15:28,190
And usually there's this little file cabinet called libraries and you should know it should always be there.

134
00:15:29,480 --> 00:15:36,000
This is just a. Folder, essentially where all your libraries are going to exist.

135
00:15:37,160 --> 00:15:45,890
If you click on that, you'll see the work library, which is defaults are always there and any libraries that you create for yourself.

136
00:15:47,600 --> 00:15:51,610
Work is temporary, as I mentioned earlier. So.

137
00:15:53,400 --> 00:16:00,240
Once you close says anything that's in that work library will go away, will not be permanently saved.

138
00:16:00,750 --> 00:16:07,050
If you want to permanently save something. You're going to have to create a permanent library for yourself.

139
00:16:11,480 --> 00:16:21,620
So again, when you click on that, you'll see any libraries that you have created and the work as well that is default.

140
00:16:25,240 --> 00:16:31,200
So in this case, there's one called C tools. And if you click on it.

141
00:16:32,250 --> 00:16:38,530
It'll open up. All the folders and files that are in that folder.

142
00:16:40,430 --> 00:16:47,900
What's important to remember here is that a library is really just a pointer to a location on your computer.

143
00:16:48,440 --> 00:16:55,730
That's all it is. So it's some location on your computer and you're giving a name so that you don't have to type in the long path name all the time.

144
00:16:56,740 --> 00:17:03,060
So it's just a name for a location on your computer. To create it.

145
00:17:03,790 --> 00:17:11,330
You use a live name state. So you start with liberty.

146
00:17:12,460 --> 00:17:17,720
You give it a name. And then you point to the actual pack for your folder.

147
00:17:22,010 --> 00:17:26,630
All right. This should be a folder name, not a file name.

148
00:17:28,200 --> 00:17:35,590
Right. So if you've got sass. Data files, for example, that you're interested in.

149
00:17:36,640 --> 00:17:43,490
In getting into SAS. You might create a lib name statement, but you're not pointing to an individual file.

150
00:17:43,490 --> 00:17:46,580
You're you're pointing to the folder that those files are in.

151
00:17:48,520 --> 00:17:52,920
Okay. It's a location, not a file. Got it.

152
00:18:00,330 --> 00:18:03,690
This is just another example. So again, Lynn name.

153
00:18:05,560 --> 00:18:08,650
Left to is a nickname for this particular.

154
00:18:09,770 --> 00:18:16,330
Library. We might also call that the. The Lib ref.

155
00:18:18,470 --> 00:18:25,510
Would be liked to. And again, you're actually putting the physical part.

156
00:18:27,000 --> 00:18:35,850
To the to the folder itself. Once you run that lib name statement, you should get a little.

157
00:18:37,710 --> 00:18:42,850
Folder here in your libraries. Older.

158
00:18:44,250 --> 00:18:47,649
Okay. You'll see it there when you click on it.

159
00:18:47,650 --> 00:18:51,310
Any SAS files or folders that you have will show up there.

160
00:18:55,970 --> 00:18:59,080
Making sense to everyone. So far. Yeah.

161
00:18:59,910 --> 00:19:03,550
Yeah. Go ahead. So can you keep. What was the speech?

162
00:19:04,740 --> 00:19:12,420
What is the sequel's? That was just a name for this location on my computer.

163
00:19:13,230 --> 00:19:18,340
What is it doing exactly? That's a good question.

164
00:19:18,340 --> 00:19:24,610
Yes. So we're going to we're going to reference files that are in that folder using this.

165
00:19:25,630 --> 00:19:32,190
This live name that you create. You can also use it to save files to that location.

166
00:19:33,140 --> 00:19:36,890
So yeah, it's kind of a shortcut so that you don't have to deal with this whole path.

167
00:19:38,060 --> 00:19:41,280
Over and over again. Okay.

168
00:19:44,160 --> 00:19:56,690
We'll see more of that later. So if you're using emporer wizard, once you've created that library, you can tell it to.

169
00:19:59,320 --> 00:20:05,050
Import from there or save to their. By using the dropdown menu in the library field there.

170
00:20:07,440 --> 00:20:17,580
All right. So to go along with that, all data sets and SAS have two names.

171
00:20:21,510 --> 00:20:24,720
You reference them with location, that name.

172
00:20:25,140 --> 00:20:29,010
So location is actually your library. You've created your library name.

173
00:20:30,630 --> 00:20:34,230
And the name part is just the actual data sets me.

174
00:20:37,190 --> 00:20:42,640
So whenever you reference these things. You can use this compound name.

175
00:20:42,970 --> 00:20:51,490
Location, not name. Worked at HQ would be an example where the dataset name is Q in the libraries work.

176
00:20:53,220 --> 00:21:01,950
See tools that samples. It's an example where samples is the dataset name and key tools is the location.

177
00:21:05,430 --> 00:21:08,490
Does this make sense? Now that you see it this way.

178
00:21:11,260 --> 00:21:17,470
Now because work is a casual place. If something is in work, you don't actually need the location.

179
00:21:17,920 --> 00:21:22,600
So if you skip the work that it'll work exactly the same.

180
00:21:22,600 --> 00:21:29,860
So work is the same as work that you. All right.

181
00:21:30,640 --> 00:21:35,630
It'll assume the location is work if you don't tell it otherwise. It's essentially what it's doing here.

182
00:21:39,230 --> 00:21:44,720
Okay. A trick of the trade.

183
00:21:46,010 --> 00:21:48,710
Assigning library names are best done at the top of your staff code,

184
00:21:49,310 --> 00:21:53,660
so that's available as soon as you get into SAS and you can find it and change it easily.

185
00:21:55,480 --> 00:21:57,790
All right. This is a good idea.

186
00:21:58,960 --> 00:22:07,390
Usually when you write some code and you come back to it later, you're going to need to run that lib name statement again.

187
00:22:08,350 --> 00:22:11,740
So instead of having to search through all your code, it's right at the top. Just run it.

188
00:22:13,500 --> 00:22:23,550
Okay. Nice and easy. So the key takeaways in that section library is that we're sast data search through stored.

189
00:22:24,530 --> 00:22:28,430
In the program. There's temporary data sets and there's permanent ones.

190
00:22:30,530 --> 00:22:33,890
If it's temporary, it will disappear after you, Close says.

191
00:22:34,850 --> 00:22:42,790
Work as that default temporary library. Libraries with names of your choice can be mapped to your computer.

192
00:22:44,100 --> 00:22:47,460
Using a live name statement. Okay.

193
00:22:50,170 --> 00:23:01,850
Yes, you. Uh huh.

194
00:23:03,940 --> 00:23:11,080
That's a good point. If you remember from last time, SAS is not sensitive for anything except stuff that's in quotes.

195
00:23:12,140 --> 00:23:15,680
Yeah. That includes library names.

196
00:23:15,680 --> 00:23:19,010
It can lose variable names, it includes dataset names.

197
00:23:19,460 --> 00:23:26,820
All those are not case sensitive in any way. The only exception is if your.

198
00:23:29,630 --> 00:23:33,730
You're coding something with quotes. Okay.

199
00:23:33,810 --> 00:23:37,230
If it's inside quotes, then capitalization will matter.

200
00:23:37,230 --> 00:23:42,970
But otherwise it will not. All right.

201
00:23:43,330 --> 00:23:47,070
Good question. Now.

202
00:23:50,250 --> 00:23:54,780
What about if you want to get data out of SAS? Well.

203
00:23:55,990 --> 00:23:59,139
So you've got your colleague who doesn't use sass.

204
00:23:59,140 --> 00:24:02,560
I use something else. Well, that's okay.

205
00:24:02,920 --> 00:24:08,230
We can. We can accommodate them by using the export wizard.

206
00:24:09,310 --> 00:24:15,520
Or equivalently the PROC export code. Sometimes we can also use.

207
00:24:15,910 --> 00:24:20,350
Oh, yes. Which is the output delivery system as well. We'll talk a little bit about that.

208
00:24:22,090 --> 00:24:27,070
So export wizard, you can get you by going to file an export data.

209
00:24:28,710 --> 00:24:31,910
Happens to be right under the import data which you would use for the import. Was it.

210
00:24:33,400 --> 00:24:38,350
And it's going to work basically the same as the important wizard in reverse.

211
00:24:39,670 --> 00:24:43,570
So you're going to tell SAS the location of the SAS file.

212
00:24:43,900 --> 00:24:47,350
So the library name and then the actual dataset name.

213
00:24:50,100 --> 00:24:56,790
And then you're going to tell it what type of file it is, or rather what type of file you want it to be.

214
00:24:57,840 --> 00:25:02,910
Okay. In this case, I'm choosing a comma separated value file.

215
00:25:06,500 --> 00:25:08,360
That's pretty universal.

216
00:25:08,780 --> 00:25:18,620
Most programing languages have some way to import CSV files, so that's usually a good option if you've got people are using multiple platforms.

217
00:25:20,840 --> 00:25:26,660
So you tell it that and then you tell it the location where you actually want to save the new file.

218
00:25:27,560 --> 00:25:31,680
So that's just the path. We want to save it in the name.

219
00:25:33,620 --> 00:25:39,439
And then again, you have the option of saving that export code as well.

220
00:25:39,440 --> 00:25:42,800
So if you want to say that, you can browse to a location to save it.

221
00:25:46,820 --> 00:25:51,460
Okay. This would be the code generated by such a thing.

222
00:25:52,210 --> 00:26:00,660
It looks very much like the proc import code. You got your proc experts statement with a data option, which is.

223
00:26:01,850 --> 00:26:06,480
Pointing to the actual SAS file. And I'm exporting.

224
00:26:07,380 --> 00:26:12,690
There's an out file option, which is the path to the location where I'm saving the new one.

225
00:26:14,260 --> 00:26:17,950
You got a mess again, which tells them what type of file it is.

226
00:26:19,540 --> 00:26:20,230
And replace.

227
00:26:22,150 --> 00:26:30,880
If that file existed already at that location, for example, that CSP already existed in that location, it would replace it with this option.

228
00:26:34,550 --> 00:26:45,290
Put names equals yes is another statement added on here which tells it to actually export the the header file as well the names of the variables.

229
00:26:46,600 --> 00:26:50,320
Let's default again. So if you leave that off, it'll do that automatically.

230
00:26:54,030 --> 00:26:59,690
Okay. Just like with practice import.

231
00:27:01,660 --> 00:27:06,130
And the import wizard. I find it easier just to write the PROC export code most of the time.

232
00:27:06,520 --> 00:27:12,100
Once you realize there's usually only these three options, you really need the data.

233
00:27:12,520 --> 00:27:17,240
I'll file and DBM. You're usually good to go.

234
00:27:18,530 --> 00:27:22,460
You can type those any easier than just going through the menus on the import or export wizard.

235
00:27:25,500 --> 00:27:35,390
Now? Yes. Which stands for Output Delivery System, is a subsystem in SAS for controlling some of its outputs.

236
00:27:38,030 --> 00:27:44,570
So to use it. You create what I would call an odious sandwich.

237
00:27:45,470 --> 00:27:52,430
Anything that produces output in your SAS code, you can surround with your odious sandwich,

238
00:27:53,480 --> 00:27:58,700
and it will send that output to a new location instead of just in SAS.

239
00:28:00,860 --> 00:28:03,920
So in this case, we have a print in this first example.

240
00:28:05,350 --> 00:28:09,220
Print is a procedure which simply prints out the data.

241
00:28:10,450 --> 00:28:14,630
Now you tell it to print. In this case some data said call example.

242
00:28:16,310 --> 00:28:21,070
Right. So it's just going to print out the whole thing under the result screen.

243
00:28:22,850 --> 00:28:28,310
But here I'm surrounding it with an odious sandwich with the CFD destination.

244
00:28:32,770 --> 00:28:43,060
The sandwiches open up that destination at the top with Odysseus V and then the bottom bun is close, that location.

245
00:28:46,590 --> 00:28:49,590
All right. Open it at the top. Close it at the bottom.

246
00:28:51,250 --> 00:28:59,200
So what this is going to do is it's going to print in sass as usual, but it's also going to send that same output.

247
00:29:00,280 --> 00:29:05,380
To Excel. In this case, Excel can open up CSV files.

248
00:29:07,240 --> 00:29:12,820
So actually I recall correctly, if you were to run this, a little window would pop up.

249
00:29:13,660 --> 00:29:17,380
It says, Do you want to open an Excel or save?

250
00:29:18,190 --> 00:29:25,720
And if you hit open it, just open right up in Excel. If you hit save, you can save the actual file to some location that you browse to.

251
00:29:28,250 --> 00:29:32,280
All right. With some destinations, it'll just pop up automatically.

252
00:29:33,250 --> 00:29:39,490
If you've got PDF, if you got, say, Adobe Acrobat on your computer and you use what has pdaf.

253
00:29:41,440 --> 00:29:47,840
And PDF Close at the end. It will just pop right up in acrobat as as output.

254
00:29:49,800 --> 00:29:56,160
So that's very nice. Yes. So for the last line, if you don't have that close.

255
00:29:56,670 --> 00:30:00,680
Mm hmm. Exactly.

256
00:30:00,690 --> 00:30:07,740
Yeah. So if you don't close it, any output that you create from then on, it's going to keep sending there, which is probably not ideal.

257
00:30:08,130 --> 00:30:12,540
So it's best to close it after each thing you're trying to do.

258
00:30:13,990 --> 00:30:17,640
Okay. You may want more than one procedure that you want in the same output and that's cool.

259
00:30:18,240 --> 00:30:26,100
Just put it between the sandwich. Right. But all the meat that you want to show up in between the buns.

260
00:30:26,700 --> 00:30:30,730
Yes. So you put the last line. Yes.

261
00:30:31,300 --> 00:30:36,080
Yes. Because you like to have. From where?

262
00:30:37,980 --> 00:30:43,430
You have another line for what you are like as you get. Oh, yeah.

263
00:30:43,440 --> 00:30:48,720
There's no run ins that we're noticing yet. Yeah, in this case, you don't really need to run.

264
00:30:49,380 --> 00:30:54,090
It's not a step. It's not a data or procedure step.

265
00:30:54,090 --> 00:30:58,320
This is kind of a subsystem that SAS uses. So the run isn't really necessary.

266
00:31:00,010 --> 00:31:03,910
Okay. If you put one there will make a difference.

267
00:31:03,920 --> 00:31:18,780
But you don't need it. I like using this when I'm saving results, like frequency tables or a table of means or other summary stats.

268
00:31:18,780 --> 00:31:23,790
I like to use this. It's easy to kind of just output it to PDF or something like that.

269
00:31:24,200 --> 00:31:28,559
I like odious PDF the most for that purpose. Just sends it there you can see.

270
00:31:28,560 --> 00:31:33,270
Then you can send it to your colleagues. Surely they will be able to open it with one of their programs.

271
00:31:33,720 --> 00:31:44,410
Yes. And in that example. An image.

272
00:31:48,710 --> 00:31:54,140
And so instead of instead of data here.

273
00:31:55,190 --> 00:32:04,650
Well. Generally you're going to need this option no matter what, because in the procedure you need to tell SAS what data you're starting with.

274
00:32:05,310 --> 00:32:08,430
So proc freq produces a frequency table.

275
00:32:08,580 --> 00:32:15,480
That's what its results are. In this case, it's a frequency table of the variable race.

276
00:32:15,840 --> 00:32:24,600
So it's going to give you a table of all the race categories and how many people and the percentage that are in each group.

277
00:32:25,530 --> 00:32:30,030
So makes a little table. So in this case, the odds.

278
00:32:31,140 --> 00:32:35,310
We'll send that table into a into Adobe Acrobat.

279
00:32:38,560 --> 00:32:43,900
Okay. This is best.

280
00:32:45,370 --> 00:32:50,050
This this option is really best for those procedures where you have some results.

281
00:32:50,440 --> 00:32:56,140
It doesn't work so good for exporting data although this work around with preprint.

282
00:32:57,740 --> 00:33:05,240
Can work, but it really only works for procedures, not data steps.

283
00:33:06,080 --> 00:33:17,150
Okay. Yes. It brings to the table until the week or so, whichever.

284
00:33:19,010 --> 00:33:25,610
Yeah. Whatever destination you use. But he's one of the clear vision like that people want to be.

285
00:33:28,030 --> 00:33:33,070
Is there any code at all? If you wanted to signal to either the.

286
00:33:37,720 --> 00:33:41,800
This will also show up in your test results.

287
00:33:42,700 --> 00:33:51,580
So if you're just interested in and looking at it without having to go to the PDF or whatever file, it's still going to open up in SAS as well.

288
00:33:52,570 --> 00:33:56,920
Does that answer your question? Okay. So again, it's early.

289
00:34:04,210 --> 00:34:08,910
See. Uh huh.

290
00:34:09,420 --> 00:34:18,300
Well, those are going to happen in other procedures. Yeah. So if you want to one of those, you can do it again with that appropriate procedure.

291
00:34:19,180 --> 00:34:26,430
Yeah. If you want all of that stuff in the same pdf, you can just stick it all in between the audience pdf in the area,

292
00:34:26,430 --> 00:34:31,860
speed of clothes and all of that output will show up in the acrobat file.

293
00:34:33,690 --> 00:34:37,630
Makes sense? Yes. Yes.

294
00:34:38,110 --> 00:34:48,650
So expert. But we created something here.

295
00:34:49,160 --> 00:34:55,190
We didn't end up saving that this would not allow us to say that is creating it and that.

296
00:35:02,330 --> 00:35:09,290
Well, it doesn't actually save it. Actually, you can automatically save it with another option of file equals option.

297
00:35:10,440 --> 00:35:19,730
But in this case. I think it's easier to have it open up in Excel or Acrobat in this case.

298
00:35:19,910 --> 00:35:23,860
And then from there you can save it. Okay.

299
00:35:24,490 --> 00:35:28,390
You can put the whole path name with the file equals option in this as well.

300
00:35:29,650 --> 00:35:37,600
But I think it's easier instead of typing out that past name or going and finding the path name and pasting it in there to let it open up.

301
00:35:38,080 --> 00:35:44,710
And then from that program, either Acrobat or Excel, you can save as as you normally would any other Excel or PDF file.

302
00:35:46,600 --> 00:35:50,720
Okay. So that's a good point. It doesn't automatically save it.

303
00:35:54,270 --> 00:35:59,080
Unless you tell it you. SAS only does what you tell it to do.

304
00:35:59,810 --> 00:36:06,510
So remember that. Any other questions about this?

305
00:36:07,020 --> 00:36:10,860
This is kind of a somewhat.

306
00:36:12,710 --> 00:36:17,570
Niche. Little extra that I put into the slides here.

307
00:36:18,770 --> 00:36:26,000
A lot of people don't use this, but I think it's great. So especially for sharing results with others.

308
00:36:31,640 --> 00:36:36,290
Other odious destinations that you can use. H html.

309
00:36:36,920 --> 00:36:43,940
This is actually open by default in SAS all the time and that's why your results look like they do.

310
00:36:44,840 --> 00:36:49,130
In SAS, it's using an HTML kind of.

311
00:36:50,650 --> 00:36:57,070
Output. Look, if you were to turn that off, your output just wouldn't look as nice.

312
00:36:58,080 --> 00:37:05,990
So this is kind of open by default all the time. RDF is rich text format.

313
00:37:06,550 --> 00:37:09,730
This is something that word can open.

314
00:37:12,400 --> 00:37:16,750
It's not technically a word document, but it's something that word can open.

315
00:37:17,380 --> 00:37:24,700
And so if you use that destination, it can open up in word and then you can save it as a word document if you want from there.

316
00:37:27,280 --> 00:37:30,430
Okay. There's not, unfortunately, an odious.

317
00:37:31,770 --> 00:37:35,430
Word or yes, doc. X or something like that.

318
00:37:36,120 --> 00:37:40,769
And there's not a Odiase excels for Excel or anything like that.

319
00:37:40,770 --> 00:37:46,080
So it's kind of somewhat indirect where you have to UCSD, cc, taf, but it still works.

320
00:37:49,870 --> 00:37:57,460
Uh. This type of odious output is also available in statements within procedures.

321
00:37:58,450 --> 00:38:07,210
So you can use a sandwich like I've shown you here. There's also odious output statements that you can add into your procedures to save specific.

322
00:38:08,080 --> 00:38:17,860
Output. So maybe your procedure will learn one later called univariate, which produces a lot of summary stats.

323
00:38:18,340 --> 00:38:24,040
It produces. Like.

324
00:38:25,080 --> 00:38:28,470
All kinds of location stats like percentiles and so on.

325
00:38:28,710 --> 00:38:33,240
It can also produce histograms and Q, Q plots and lots of different things.

326
00:38:34,440 --> 00:38:44,880
But if you only wanted to export one bit of that, say the histogram, you could tell it to do that with an odious output statement.

327
00:38:46,700 --> 00:38:53,230
Okay. Instead of the entire output that wouldn't be produced by that procedure.

328
00:38:58,270 --> 00:39:07,480
To use. Oh yes, it does require odious graphics. Beyond this, it's just an option in SAS that you can turn on and off, but it is on by default.

329
00:39:08,720 --> 00:39:15,020
As long as you're using SAS 9.3 or later, which all the computers in the lab and so on would be 9.4.

330
00:39:15,020 --> 00:39:20,810
So. No big deal there. All right.

331
00:39:22,560 --> 00:39:30,220
Any more questions? Key takeaways.

332
00:39:32,480 --> 00:39:41,230
You can export sass. Two other formats with import, I should say export my fault export wizard or product export.

333
00:39:43,250 --> 00:39:50,380
Oh yes. It's a nice way to save precede results to some other destinations such as Excel, PDF or word.

334
00:39:53,130 --> 00:39:57,010
Okay. Yes.

335
00:39:57,380 --> 00:40:02,770
Ancillary. We're sharing.

336
00:40:07,660 --> 00:40:16,400
Yeah. Yeah, that'd be the main one. So. You're going to work with a lot of colleagues through school and and after.

337
00:40:17,270 --> 00:40:22,610
Not all of them are going to know SAS or have SAS on their computers or have access to SAS.

338
00:40:23,120 --> 00:40:31,040
So they might use data or they might use R, they might use, you know, something else SPSS I guess.

339
00:40:32,150 --> 00:40:36,330
Boo on that one. Um, uh.

340
00:40:37,310 --> 00:40:43,370
And so they'll. You can just send them a data file, and they won't really be able to do anything with it.

341
00:40:44,060 --> 00:40:52,670
So this is this is a way to export it for them in a way that they can import into whatever program they're using.

342
00:40:53,570 --> 00:41:00,420
Yeah. And the odds is great for sharing results.

343
00:41:01,170 --> 00:41:07,110
So if you're an analyst, much like I am, I have to share results a lot with my colleagues.

344
00:41:07,680 --> 00:41:13,890
And so a lot of times I'll use this just to save my frequency tables or whatever as a PDF.

345
00:41:14,770 --> 00:41:19,850
And send it to him that way. Right.

346
00:41:21,840 --> 00:41:30,270
It's a lot easier than saving your entire stash results and just into a SAS results file, which is kind of clumsy.

347
00:41:31,730 --> 00:41:36,710
Okay. Any other questions?

348
00:41:40,790 --> 00:41:43,730
So you're going to get some practice on with this on the lab today.

349
00:41:45,140 --> 00:41:51,230
So again, the important thing is to open up the files first, look at them, understand what you've got.

350
00:41:52,400 --> 00:41:57,680
You have to limiters. You have header rows, how many observations and variables are there?

351
00:41:58,340 --> 00:42:06,990
And so on. But.

